schema {
  query: query_root
}

"""whether this query should be cached (Hasura Cloud only)"""
directive @cached(
  """measured in seconds"""
  ttl: Int! = 60

  """refresh the cache entry"""
  refresh: Boolean! = false
) on QUERY

"""
columns and relationships of "pokemon_v2_ability"
"""
type ability {
  """An array relationship"""
  abilitychanges(
    """distinct select on columns"""
    distinct_on: [abilitychange_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [abilitychange_order_by!]

    """filter the rows returned"""
    where: abilitychange_bool_exp
  ): [abilitychange!]!

  """An aggregate relationship"""
  abilitychanges_aggregate(
    """distinct select on columns"""
    distinct_on: [abilitychange_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [abilitychange_order_by!]

    """filter the rows returned"""
    where: abilitychange_bool_exp
  ): abilitychange_aggregate!

  """An array relationship"""
  abilityeffecttexts(
    """distinct select on columns"""
    distinct_on: [abilityeffecttext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [abilityeffecttext_order_by!]

    """filter the rows returned"""
    where: abilityeffecttext_bool_exp
  ): [abilityeffecttext!]!

  """An aggregate relationship"""
  abilityeffecttexts_aggregate(
    """distinct select on columns"""
    distinct_on: [abilityeffecttext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [abilityeffecttext_order_by!]

    """filter the rows returned"""
    where: abilityeffecttext_bool_exp
  ): abilityeffecttext_aggregate!

  """An array relationship"""
  abilityflavortexts(
    """distinct select on columns"""
    distinct_on: [abilityflavortext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [abilityflavortext_order_by!]

    """filter the rows returned"""
    where: abilityflavortext_bool_exp
  ): [abilityflavortext!]!

  """An aggregate relationship"""
  abilityflavortexts_aggregate(
    """distinct select on columns"""
    distinct_on: [abilityflavortext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [abilityflavortext_order_by!]

    """filter the rows returned"""
    where: abilityflavortext_bool_exp
  ): abilityflavortext_aggregate!

  """An array relationship"""
  abilitynames(
    """distinct select on columns"""
    distinct_on: [abilityname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [abilityname_order_by!]

    """filter the rows returned"""
    where: abilityname_bool_exp
  ): [abilityname!]!

  """An aggregate relationship"""
  abilitynames_aggregate(
    """distinct select on columns"""
    distinct_on: [abilityname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [abilityname_order_by!]

    """filter the rows returned"""
    where: abilityname_bool_exp
  ): abilityname_aggregate!

  """An object relationship"""
  generation: generation
  generation_id: Int
  id: Int!
  is_main_series: Boolean!
  name: String!

  """An array relationship"""
  pokemonabilities(
    """distinct select on columns"""
    distinct_on: [pokemonability_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonability_order_by!]

    """filter the rows returned"""
    where: pokemonability_bool_exp
  ): [pokemonability!]!

  """An aggregate relationship"""
  pokemonabilities_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonability_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonability_order_by!]

    """filter the rows returned"""
    where: pokemonability_bool_exp
  ): pokemonability_aggregate!

  """An array relationship"""
  pokemonabilitypasts(
    """distinct select on columns"""
    distinct_on: [pokemonabilitypast_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonabilitypast_order_by!]

    """filter the rows returned"""
    where: pokemonabilitypast_bool_exp
  ): [pokemonabilitypast!]!

  """An aggregate relationship"""
  pokemonabilitypasts_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonabilitypast_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonabilitypast_order_by!]

    """filter the rows returned"""
    where: pokemonabilitypast_bool_exp
  ): pokemonabilitypast_aggregate!
}

"""
aggregated selection of "pokemon_v2_ability"
"""
type ability_aggregate {
  aggregate: ability_aggregate_fields
  nodes: [ability!]!
}

input ability_aggregate_bool_exp {
  bool_and: ability_aggregate_bool_exp_bool_and
  bool_or: ability_aggregate_bool_exp_bool_or
  count: ability_aggregate_bool_exp_count
}

input ability_aggregate_bool_exp_bool_and {
  arguments: ability_select_column_ability_aggregate_bool_exp_bool_and_arguments_columns!
  distinct: Boolean
  filter: ability_bool_exp
  predicate: Boolean_comparison_exp!
}

input ability_aggregate_bool_exp_bool_or {
  arguments: ability_select_column_ability_aggregate_bool_exp_bool_or_arguments_columns!
  distinct: Boolean
  filter: ability_bool_exp
  predicate: Boolean_comparison_exp!
}

input ability_aggregate_bool_exp_count {
  arguments: [ability_select_column!]
  distinct: Boolean
  filter: ability_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_ability"
"""
type ability_aggregate_fields {
  avg: ability_avg_fields
  count(columns: [ability_select_column!], distinct: Boolean): Int!
  max: ability_max_fields
  min: ability_min_fields
  stddev: ability_stddev_fields
  stddev_pop: ability_stddev_pop_fields
  stddev_samp: ability_stddev_samp_fields
  sum: ability_sum_fields
  var_pop: ability_var_pop_fields
  var_samp: ability_var_samp_fields
  variance: ability_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_ability"
"""
input ability_aggregate_order_by {
  avg: ability_avg_order_by
  count: order_by
  max: ability_max_order_by
  min: ability_min_order_by
  stddev: ability_stddev_order_by
  stddev_pop: ability_stddev_pop_order_by
  stddev_samp: ability_stddev_samp_order_by
  sum: ability_sum_order_by
  var_pop: ability_var_pop_order_by
  var_samp: ability_var_samp_order_by
  variance: ability_variance_order_by
}

"""aggregate avg on columns"""
type ability_avg_fields {
  generation_id: Float
  id: Float
}

"""
order by avg() on columns of table "pokemon_v2_ability"
"""
input ability_avg_order_by {
  generation_id: order_by
  id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_ability". All fields are combined with a logical 'AND'.
"""
input ability_bool_exp {
  _and: [ability_bool_exp!]
  _not: ability_bool_exp
  _or: [ability_bool_exp!]
  abilitychanges: abilitychange_bool_exp
  abilitychanges_aggregate: abilitychange_aggregate_bool_exp
  abilityeffecttexts: abilityeffecttext_bool_exp
  abilityeffecttexts_aggregate: abilityeffecttext_aggregate_bool_exp
  abilityflavortexts: abilityflavortext_bool_exp
  abilityflavortexts_aggregate: abilityflavortext_aggregate_bool_exp
  abilitynames: abilityname_bool_exp
  abilitynames_aggregate: abilityname_aggregate_bool_exp
  generation: generation_bool_exp
  generation_id: Int_comparison_exp
  id: Int_comparison_exp
  is_main_series: Boolean_comparison_exp
  name: String_comparison_exp
  pokemonabilities: pokemonability_bool_exp
  pokemonabilities_aggregate: pokemonability_aggregate_bool_exp
  pokemonabilitypasts: pokemonabilitypast_bool_exp
  pokemonabilitypasts_aggregate: pokemonabilitypast_aggregate_bool_exp
}

"""aggregate max on columns"""
type ability_max_fields {
  generation_id: Int
  id: Int
  name: String
}

"""
order by max() on columns of table "pokemon_v2_ability"
"""
input ability_max_order_by {
  generation_id: order_by
  id: order_by
  name: order_by
}

"""aggregate min on columns"""
type ability_min_fields {
  generation_id: Int
  id: Int
  name: String
}

"""
order by min() on columns of table "pokemon_v2_ability"
"""
input ability_min_order_by {
  generation_id: order_by
  id: order_by
  name: order_by
}

"""Ordering options when selecting data from "pokemon_v2_ability"."""
input ability_order_by {
  abilitychanges_aggregate: abilitychange_aggregate_order_by
  abilityeffecttexts_aggregate: abilityeffecttext_aggregate_order_by
  abilityflavortexts_aggregate: abilityflavortext_aggregate_order_by
  abilitynames_aggregate: abilityname_aggregate_order_by
  generation: generation_order_by
  generation_id: order_by
  id: order_by
  is_main_series: order_by
  name: order_by
  pokemonabilities_aggregate: pokemonability_aggregate_order_by
  pokemonabilitypasts_aggregate: pokemonabilitypast_aggregate_order_by
}

"""
select columns of table "pokemon_v2_ability"
"""
enum ability_select_column {
  """column name"""
  generation_id

  """column name"""
  id

  """column name"""
  is_main_series

  """column name"""
  name
}

"""
select "ability_aggregate_bool_exp_bool_and_arguments_columns" columns of table "pokemon_v2_ability"
"""
enum ability_select_column_ability_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
  is_main_series
}

"""
select "ability_aggregate_bool_exp_bool_or_arguments_columns" columns of table "pokemon_v2_ability"
"""
enum ability_select_column_ability_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
  is_main_series
}

"""aggregate stddev on columns"""
type ability_stddev_fields {
  generation_id: Float
  id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_ability"
"""
input ability_stddev_order_by {
  generation_id: order_by
  id: order_by
}

"""aggregate stddev_pop on columns"""
type ability_stddev_pop_fields {
  generation_id: Float
  id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_ability"
"""
input ability_stddev_pop_order_by {
  generation_id: order_by
  id: order_by
}

"""aggregate stddev_samp on columns"""
type ability_stddev_samp_fields {
  generation_id: Float
  id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_ability"
"""
input ability_stddev_samp_order_by {
  generation_id: order_by
  id: order_by
}

"""aggregate sum on columns"""
type ability_sum_fields {
  generation_id: Int
  id: Int
}

"""
order by sum() on columns of table "pokemon_v2_ability"
"""
input ability_sum_order_by {
  generation_id: order_by
  id: order_by
}

"""aggregate var_pop on columns"""
type ability_var_pop_fields {
  generation_id: Float
  id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_ability"
"""
input ability_var_pop_order_by {
  generation_id: order_by
  id: order_by
}

"""aggregate var_samp on columns"""
type ability_var_samp_fields {
  generation_id: Float
  id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_ability"
"""
input ability_var_samp_order_by {
  generation_id: order_by
  id: order_by
}

"""aggregate variance on columns"""
type ability_variance_fields {
  generation_id: Float
  id: Float
}

"""
order by variance() on columns of table "pokemon_v2_ability"
"""
input ability_variance_order_by {
  generation_id: order_by
  id: order_by
}

"""
columns and relationships of "pokemon_v2_abilitychange"
"""
type abilitychange {
  """An object relationship"""
  ability: ability
  ability_id: Int

  """An array relationship"""
  abilitychangeeffecttexts(
    """distinct select on columns"""
    distinct_on: [abilitychangeeffecttext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [abilitychangeeffecttext_order_by!]

    """filter the rows returned"""
    where: abilitychangeeffecttext_bool_exp
  ): [abilitychangeeffecttext!]!

  """An aggregate relationship"""
  abilitychangeeffecttexts_aggregate(
    """distinct select on columns"""
    distinct_on: [abilitychangeeffecttext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [abilitychangeeffecttext_order_by!]

    """filter the rows returned"""
    where: abilitychangeeffecttext_bool_exp
  ): abilitychangeeffecttext_aggregate!
  id: Int!
  version_group_id: Int

  """An object relationship"""
  versiongroup: versiongroup
}

"""
aggregated selection of "pokemon_v2_abilitychange"
"""
type abilitychange_aggregate {
  aggregate: abilitychange_aggregate_fields
  nodes: [abilitychange!]!
}

input abilitychange_aggregate_bool_exp {
  count: abilitychange_aggregate_bool_exp_count
}

input abilitychange_aggregate_bool_exp_count {
  arguments: [abilitychange_select_column!]
  distinct: Boolean
  filter: abilitychange_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_abilitychange"
"""
type abilitychange_aggregate_fields {
  avg: abilitychange_avg_fields
  count(columns: [abilitychange_select_column!], distinct: Boolean): Int!
  max: abilitychange_max_fields
  min: abilitychange_min_fields
  stddev: abilitychange_stddev_fields
  stddev_pop: abilitychange_stddev_pop_fields
  stddev_samp: abilitychange_stddev_samp_fields
  sum: abilitychange_sum_fields
  var_pop: abilitychange_var_pop_fields
  var_samp: abilitychange_var_samp_fields
  variance: abilitychange_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_abilitychange"
"""
input abilitychange_aggregate_order_by {
  avg: abilitychange_avg_order_by
  count: order_by
  max: abilitychange_max_order_by
  min: abilitychange_min_order_by
  stddev: abilitychange_stddev_order_by
  stddev_pop: abilitychange_stddev_pop_order_by
  stddev_samp: abilitychange_stddev_samp_order_by
  sum: abilitychange_sum_order_by
  var_pop: abilitychange_var_pop_order_by
  var_samp: abilitychange_var_samp_order_by
  variance: abilitychange_variance_order_by
}

"""aggregate avg on columns"""
type abilitychange_avg_fields {
  ability_id: Float
  id: Float
  version_group_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_abilitychange"
"""
input abilitychange_avg_order_by {
  ability_id: order_by
  id: order_by
  version_group_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_abilitychange". All fields are combined with a logical 'AND'.
"""
input abilitychange_bool_exp {
  _and: [abilitychange_bool_exp!]
  _not: abilitychange_bool_exp
  _or: [abilitychange_bool_exp!]
  ability: ability_bool_exp
  ability_id: Int_comparison_exp
  abilitychangeeffecttexts: abilitychangeeffecttext_bool_exp
  abilitychangeeffecttexts_aggregate: abilitychangeeffecttext_aggregate_bool_exp
  id: Int_comparison_exp
  version_group_id: Int_comparison_exp
  versiongroup: versiongroup_bool_exp
}

"""aggregate max on columns"""
type abilitychange_max_fields {
  ability_id: Int
  id: Int
  version_group_id: Int
}

"""
order by max() on columns of table "pokemon_v2_abilitychange"
"""
input abilitychange_max_order_by {
  ability_id: order_by
  id: order_by
  version_group_id: order_by
}

"""aggregate min on columns"""
type abilitychange_min_fields {
  ability_id: Int
  id: Int
  version_group_id: Int
}

"""
order by min() on columns of table "pokemon_v2_abilitychange"
"""
input abilitychange_min_order_by {
  ability_id: order_by
  id: order_by
  version_group_id: order_by
}

"""Ordering options when selecting data from "pokemon_v2_abilitychange"."""
input abilitychange_order_by {
  ability: ability_order_by
  ability_id: order_by
  abilitychangeeffecttexts_aggregate: abilitychangeeffecttext_aggregate_order_by
  id: order_by
  version_group_id: order_by
  versiongroup: versiongroup_order_by
}

"""
select columns of table "pokemon_v2_abilitychange"
"""
enum abilitychange_select_column {
  """column name"""
  ability_id

  """column name"""
  id

  """column name"""
  version_group_id
}

"""aggregate stddev on columns"""
type abilitychange_stddev_fields {
  ability_id: Float
  id: Float
  version_group_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_abilitychange"
"""
input abilitychange_stddev_order_by {
  ability_id: order_by
  id: order_by
  version_group_id: order_by
}

"""aggregate stddev_pop on columns"""
type abilitychange_stddev_pop_fields {
  ability_id: Float
  id: Float
  version_group_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_abilitychange"
"""
input abilitychange_stddev_pop_order_by {
  ability_id: order_by
  id: order_by
  version_group_id: order_by
}

"""aggregate stddev_samp on columns"""
type abilitychange_stddev_samp_fields {
  ability_id: Float
  id: Float
  version_group_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_abilitychange"
"""
input abilitychange_stddev_samp_order_by {
  ability_id: order_by
  id: order_by
  version_group_id: order_by
}

"""aggregate sum on columns"""
type abilitychange_sum_fields {
  ability_id: Int
  id: Int
  version_group_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_abilitychange"
"""
input abilitychange_sum_order_by {
  ability_id: order_by
  id: order_by
  version_group_id: order_by
}

"""aggregate var_pop on columns"""
type abilitychange_var_pop_fields {
  ability_id: Float
  id: Float
  version_group_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_abilitychange"
"""
input abilitychange_var_pop_order_by {
  ability_id: order_by
  id: order_by
  version_group_id: order_by
}

"""aggregate var_samp on columns"""
type abilitychange_var_samp_fields {
  ability_id: Float
  id: Float
  version_group_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_abilitychange"
"""
input abilitychange_var_samp_order_by {
  ability_id: order_by
  id: order_by
  version_group_id: order_by
}

"""aggregate variance on columns"""
type abilitychange_variance_fields {
  ability_id: Float
  id: Float
  version_group_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_abilitychange"
"""
input abilitychange_variance_order_by {
  ability_id: order_by
  id: order_by
  version_group_id: order_by
}

"""
columns and relationships of "pokemon_v2_abilitychangeeffecttext"
"""
type abilitychangeeffecttext {
  ability_change_id: Int

  """An object relationship"""
  abilitychange: abilitychange
  effect: String!
  id: Int!

  """An object relationship"""
  language: language
  language_id: Int
}

"""
aggregated selection of "pokemon_v2_abilitychangeeffecttext"
"""
type abilitychangeeffecttext_aggregate {
  aggregate: abilitychangeeffecttext_aggregate_fields
  nodes: [abilitychangeeffecttext!]!
}

input abilitychangeeffecttext_aggregate_bool_exp {
  count: abilitychangeeffecttext_aggregate_bool_exp_count
}

input abilitychangeeffecttext_aggregate_bool_exp_count {
  arguments: [abilitychangeeffecttext_select_column!]
  distinct: Boolean
  filter: abilitychangeeffecttext_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_abilitychangeeffecttext"
"""
type abilitychangeeffecttext_aggregate_fields {
  avg: abilitychangeeffecttext_avg_fields
  count(columns: [abilitychangeeffecttext_select_column!], distinct: Boolean): Int!
  max: abilitychangeeffecttext_max_fields
  min: abilitychangeeffecttext_min_fields
  stddev: abilitychangeeffecttext_stddev_fields
  stddev_pop: abilitychangeeffecttext_stddev_pop_fields
  stddev_samp: abilitychangeeffecttext_stddev_samp_fields
  sum: abilitychangeeffecttext_sum_fields
  var_pop: abilitychangeeffecttext_var_pop_fields
  var_samp: abilitychangeeffecttext_var_samp_fields
  variance: abilitychangeeffecttext_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_abilitychangeeffecttext"
"""
input abilitychangeeffecttext_aggregate_order_by {
  avg: abilitychangeeffecttext_avg_order_by
  count: order_by
  max: abilitychangeeffecttext_max_order_by
  min: abilitychangeeffecttext_min_order_by
  stddev: abilitychangeeffecttext_stddev_order_by
  stddev_pop: abilitychangeeffecttext_stddev_pop_order_by
  stddev_samp: abilitychangeeffecttext_stddev_samp_order_by
  sum: abilitychangeeffecttext_sum_order_by
  var_pop: abilitychangeeffecttext_var_pop_order_by
  var_samp: abilitychangeeffecttext_var_samp_order_by
  variance: abilitychangeeffecttext_variance_order_by
}

"""aggregate avg on columns"""
type abilitychangeeffecttext_avg_fields {
  ability_change_id: Float
  id: Float
  language_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_abilitychangeeffecttext"
"""
input abilitychangeeffecttext_avg_order_by {
  ability_change_id: order_by
  id: order_by
  language_id: order_by
}

"""
Boolean expression to filter rows from the table
"pokemon_v2_abilitychangeeffecttext". All fields are combined with a logical 'AND'.
"""
input abilitychangeeffecttext_bool_exp {
  _and: [abilitychangeeffecttext_bool_exp!]
  _not: abilitychangeeffecttext_bool_exp
  _or: [abilitychangeeffecttext_bool_exp!]
  ability_change_id: Int_comparison_exp
  abilitychange: abilitychange_bool_exp
  effect: String_comparison_exp
  id: Int_comparison_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
}

"""aggregate max on columns"""
type abilitychangeeffecttext_max_fields {
  ability_change_id: Int
  effect: String
  id: Int
  language_id: Int
}

"""
order by max() on columns of table "pokemon_v2_abilitychangeeffecttext"
"""
input abilitychangeeffecttext_max_order_by {
  ability_change_id: order_by
  effect: order_by
  id: order_by
  language_id: order_by
}

"""aggregate min on columns"""
type abilitychangeeffecttext_min_fields {
  ability_change_id: Int
  effect: String
  id: Int
  language_id: Int
}

"""
order by min() on columns of table "pokemon_v2_abilitychangeeffecttext"
"""
input abilitychangeeffecttext_min_order_by {
  ability_change_id: order_by
  effect: order_by
  id: order_by
  language_id: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_abilitychangeeffecttext".
"""
input abilitychangeeffecttext_order_by {
  ability_change_id: order_by
  abilitychange: abilitychange_order_by
  effect: order_by
  id: order_by
  language: language_order_by
  language_id: order_by
}

"""
select columns of table "pokemon_v2_abilitychangeeffecttext"
"""
enum abilitychangeeffecttext_select_column {
  """column name"""
  ability_change_id

  """column name"""
  effect

  """column name"""
  id

  """column name"""
  language_id
}

"""aggregate stddev on columns"""
type abilitychangeeffecttext_stddev_fields {
  ability_change_id: Float
  id: Float
  language_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_abilitychangeeffecttext"
"""
input abilitychangeeffecttext_stddev_order_by {
  ability_change_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate stddev_pop on columns"""
type abilitychangeeffecttext_stddev_pop_fields {
  ability_change_id: Float
  id: Float
  language_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_abilitychangeeffecttext"
"""
input abilitychangeeffecttext_stddev_pop_order_by {
  ability_change_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate stddev_samp on columns"""
type abilitychangeeffecttext_stddev_samp_fields {
  ability_change_id: Float
  id: Float
  language_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_abilitychangeeffecttext"
"""
input abilitychangeeffecttext_stddev_samp_order_by {
  ability_change_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate sum on columns"""
type abilitychangeeffecttext_sum_fields {
  ability_change_id: Int
  id: Int
  language_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_abilitychangeeffecttext"
"""
input abilitychangeeffecttext_sum_order_by {
  ability_change_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate var_pop on columns"""
type abilitychangeeffecttext_var_pop_fields {
  ability_change_id: Float
  id: Float
  language_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_abilitychangeeffecttext"
"""
input abilitychangeeffecttext_var_pop_order_by {
  ability_change_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate var_samp on columns"""
type abilitychangeeffecttext_var_samp_fields {
  ability_change_id: Float
  id: Float
  language_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_abilitychangeeffecttext"
"""
input abilitychangeeffecttext_var_samp_order_by {
  ability_change_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate variance on columns"""
type abilitychangeeffecttext_variance_fields {
  ability_change_id: Float
  id: Float
  language_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_abilitychangeeffecttext"
"""
input abilitychangeeffecttext_variance_order_by {
  ability_change_id: order_by
  id: order_by
  language_id: order_by
}

"""
columns and relationships of "pokemon_v2_abilityeffecttext"
"""
type abilityeffecttext {
  """An object relationship"""
  ability: ability
  ability_id: Int
  effect: String!
  id: Int!

  """An object relationship"""
  language: language
  language_id: Int
  short_effect: String!
}

"""
aggregated selection of "pokemon_v2_abilityeffecttext"
"""
type abilityeffecttext_aggregate {
  aggregate: abilityeffecttext_aggregate_fields
  nodes: [abilityeffecttext!]!
}

input abilityeffecttext_aggregate_bool_exp {
  count: abilityeffecttext_aggregate_bool_exp_count
}

input abilityeffecttext_aggregate_bool_exp_count {
  arguments: [abilityeffecttext_select_column!]
  distinct: Boolean
  filter: abilityeffecttext_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_abilityeffecttext"
"""
type abilityeffecttext_aggregate_fields {
  avg: abilityeffecttext_avg_fields
  count(columns: [abilityeffecttext_select_column!], distinct: Boolean): Int!
  max: abilityeffecttext_max_fields
  min: abilityeffecttext_min_fields
  stddev: abilityeffecttext_stddev_fields
  stddev_pop: abilityeffecttext_stddev_pop_fields
  stddev_samp: abilityeffecttext_stddev_samp_fields
  sum: abilityeffecttext_sum_fields
  var_pop: abilityeffecttext_var_pop_fields
  var_samp: abilityeffecttext_var_samp_fields
  variance: abilityeffecttext_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_abilityeffecttext"
"""
input abilityeffecttext_aggregate_order_by {
  avg: abilityeffecttext_avg_order_by
  count: order_by
  max: abilityeffecttext_max_order_by
  min: abilityeffecttext_min_order_by
  stddev: abilityeffecttext_stddev_order_by
  stddev_pop: abilityeffecttext_stddev_pop_order_by
  stddev_samp: abilityeffecttext_stddev_samp_order_by
  sum: abilityeffecttext_sum_order_by
  var_pop: abilityeffecttext_var_pop_order_by
  var_samp: abilityeffecttext_var_samp_order_by
  variance: abilityeffecttext_variance_order_by
}

"""aggregate avg on columns"""
type abilityeffecttext_avg_fields {
  ability_id: Float
  id: Float
  language_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_abilityeffecttext"
"""
input abilityeffecttext_avg_order_by {
  ability_id: order_by
  id: order_by
  language_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_abilityeffecttext".
All fields are combined with a logical 'AND'.
"""
input abilityeffecttext_bool_exp {
  _and: [abilityeffecttext_bool_exp!]
  _not: abilityeffecttext_bool_exp
  _or: [abilityeffecttext_bool_exp!]
  ability: ability_bool_exp
  ability_id: Int_comparison_exp
  effect: String_comparison_exp
  id: Int_comparison_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
  short_effect: String_comparison_exp
}

"""aggregate max on columns"""
type abilityeffecttext_max_fields {
  ability_id: Int
  effect: String
  id: Int
  language_id: Int
  short_effect: String
}

"""
order by max() on columns of table "pokemon_v2_abilityeffecttext"
"""
input abilityeffecttext_max_order_by {
  ability_id: order_by
  effect: order_by
  id: order_by
  language_id: order_by
  short_effect: order_by
}

"""aggregate min on columns"""
type abilityeffecttext_min_fields {
  ability_id: Int
  effect: String
  id: Int
  language_id: Int
  short_effect: String
}

"""
order by min() on columns of table "pokemon_v2_abilityeffecttext"
"""
input abilityeffecttext_min_order_by {
  ability_id: order_by
  effect: order_by
  id: order_by
  language_id: order_by
  short_effect: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_abilityeffecttext".
"""
input abilityeffecttext_order_by {
  ability: ability_order_by
  ability_id: order_by
  effect: order_by
  id: order_by
  language: language_order_by
  language_id: order_by
  short_effect: order_by
}

"""
select columns of table "pokemon_v2_abilityeffecttext"
"""
enum abilityeffecttext_select_column {
  """column name"""
  ability_id

  """column name"""
  effect

  """column name"""
  id

  """column name"""
  language_id

  """column name"""
  short_effect
}

"""aggregate stddev on columns"""
type abilityeffecttext_stddev_fields {
  ability_id: Float
  id: Float
  language_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_abilityeffecttext"
"""
input abilityeffecttext_stddev_order_by {
  ability_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate stddev_pop on columns"""
type abilityeffecttext_stddev_pop_fields {
  ability_id: Float
  id: Float
  language_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_abilityeffecttext"
"""
input abilityeffecttext_stddev_pop_order_by {
  ability_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate stddev_samp on columns"""
type abilityeffecttext_stddev_samp_fields {
  ability_id: Float
  id: Float
  language_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_abilityeffecttext"
"""
input abilityeffecttext_stddev_samp_order_by {
  ability_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate sum on columns"""
type abilityeffecttext_sum_fields {
  ability_id: Int
  id: Int
  language_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_abilityeffecttext"
"""
input abilityeffecttext_sum_order_by {
  ability_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate var_pop on columns"""
type abilityeffecttext_var_pop_fields {
  ability_id: Float
  id: Float
  language_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_abilityeffecttext"
"""
input abilityeffecttext_var_pop_order_by {
  ability_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate var_samp on columns"""
type abilityeffecttext_var_samp_fields {
  ability_id: Float
  id: Float
  language_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_abilityeffecttext"
"""
input abilityeffecttext_var_samp_order_by {
  ability_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate variance on columns"""
type abilityeffecttext_variance_fields {
  ability_id: Float
  id: Float
  language_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_abilityeffecttext"
"""
input abilityeffecttext_variance_order_by {
  ability_id: order_by
  id: order_by
  language_id: order_by
}

"""
columns and relationships of "pokemon_v2_abilityflavortext"
"""
type abilityflavortext {
  """An object relationship"""
  ability: ability
  ability_id: Int
  flavor_text: String!
  id: Int!

  """An object relationship"""
  language: language
  language_id: Int
  version_group_id: Int

  """An object relationship"""
  versiongroup: versiongroup
}

"""
aggregated selection of "pokemon_v2_abilityflavortext"
"""
type abilityflavortext_aggregate {
  aggregate: abilityflavortext_aggregate_fields
  nodes: [abilityflavortext!]!
}

input abilityflavortext_aggregate_bool_exp {
  count: abilityflavortext_aggregate_bool_exp_count
}

input abilityflavortext_aggregate_bool_exp_count {
  arguments: [abilityflavortext_select_column!]
  distinct: Boolean
  filter: abilityflavortext_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_abilityflavortext"
"""
type abilityflavortext_aggregate_fields {
  avg: abilityflavortext_avg_fields
  count(columns: [abilityflavortext_select_column!], distinct: Boolean): Int!
  max: abilityflavortext_max_fields
  min: abilityflavortext_min_fields
  stddev: abilityflavortext_stddev_fields
  stddev_pop: abilityflavortext_stddev_pop_fields
  stddev_samp: abilityflavortext_stddev_samp_fields
  sum: abilityflavortext_sum_fields
  var_pop: abilityflavortext_var_pop_fields
  var_samp: abilityflavortext_var_samp_fields
  variance: abilityflavortext_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_abilityflavortext"
"""
input abilityflavortext_aggregate_order_by {
  avg: abilityflavortext_avg_order_by
  count: order_by
  max: abilityflavortext_max_order_by
  min: abilityflavortext_min_order_by
  stddev: abilityflavortext_stddev_order_by
  stddev_pop: abilityflavortext_stddev_pop_order_by
  stddev_samp: abilityflavortext_stddev_samp_order_by
  sum: abilityflavortext_sum_order_by
  var_pop: abilityflavortext_var_pop_order_by
  var_samp: abilityflavortext_var_samp_order_by
  variance: abilityflavortext_variance_order_by
}

"""aggregate avg on columns"""
type abilityflavortext_avg_fields {
  ability_id: Float
  id: Float
  language_id: Float
  version_group_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_abilityflavortext"
"""
input abilityflavortext_avg_order_by {
  ability_id: order_by
  id: order_by
  language_id: order_by
  version_group_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_abilityflavortext".
All fields are combined with a logical 'AND'.
"""
input abilityflavortext_bool_exp {
  _and: [abilityflavortext_bool_exp!]
  _not: abilityflavortext_bool_exp
  _or: [abilityflavortext_bool_exp!]
  ability: ability_bool_exp
  ability_id: Int_comparison_exp
  flavor_text: String_comparison_exp
  id: Int_comparison_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
  version_group_id: Int_comparison_exp
  versiongroup: versiongroup_bool_exp
}

"""aggregate max on columns"""
type abilityflavortext_max_fields {
  ability_id: Int
  flavor_text: String
  id: Int
  language_id: Int
  version_group_id: Int
}

"""
order by max() on columns of table "pokemon_v2_abilityflavortext"
"""
input abilityflavortext_max_order_by {
  ability_id: order_by
  flavor_text: order_by
  id: order_by
  language_id: order_by
  version_group_id: order_by
}

"""aggregate min on columns"""
type abilityflavortext_min_fields {
  ability_id: Int
  flavor_text: String
  id: Int
  language_id: Int
  version_group_id: Int
}

"""
order by min() on columns of table "pokemon_v2_abilityflavortext"
"""
input abilityflavortext_min_order_by {
  ability_id: order_by
  flavor_text: order_by
  id: order_by
  language_id: order_by
  version_group_id: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_abilityflavortext".
"""
input abilityflavortext_order_by {
  ability: ability_order_by
  ability_id: order_by
  flavor_text: order_by
  id: order_by
  language: language_order_by
  language_id: order_by
  version_group_id: order_by
  versiongroup: versiongroup_order_by
}

"""
select columns of table "pokemon_v2_abilityflavortext"
"""
enum abilityflavortext_select_column {
  """column name"""
  ability_id

  """column name"""
  flavor_text

  """column name"""
  id

  """column name"""
  language_id

  """column name"""
  version_group_id
}

"""aggregate stddev on columns"""
type abilityflavortext_stddev_fields {
  ability_id: Float
  id: Float
  language_id: Float
  version_group_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_abilityflavortext"
"""
input abilityflavortext_stddev_order_by {
  ability_id: order_by
  id: order_by
  language_id: order_by
  version_group_id: order_by
}

"""aggregate stddev_pop on columns"""
type abilityflavortext_stddev_pop_fields {
  ability_id: Float
  id: Float
  language_id: Float
  version_group_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_abilityflavortext"
"""
input abilityflavortext_stddev_pop_order_by {
  ability_id: order_by
  id: order_by
  language_id: order_by
  version_group_id: order_by
}

"""aggregate stddev_samp on columns"""
type abilityflavortext_stddev_samp_fields {
  ability_id: Float
  id: Float
  language_id: Float
  version_group_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_abilityflavortext"
"""
input abilityflavortext_stddev_samp_order_by {
  ability_id: order_by
  id: order_by
  language_id: order_by
  version_group_id: order_by
}

"""aggregate sum on columns"""
type abilityflavortext_sum_fields {
  ability_id: Int
  id: Int
  language_id: Int
  version_group_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_abilityflavortext"
"""
input abilityflavortext_sum_order_by {
  ability_id: order_by
  id: order_by
  language_id: order_by
  version_group_id: order_by
}

"""aggregate var_pop on columns"""
type abilityflavortext_var_pop_fields {
  ability_id: Float
  id: Float
  language_id: Float
  version_group_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_abilityflavortext"
"""
input abilityflavortext_var_pop_order_by {
  ability_id: order_by
  id: order_by
  language_id: order_by
  version_group_id: order_by
}

"""aggregate var_samp on columns"""
type abilityflavortext_var_samp_fields {
  ability_id: Float
  id: Float
  language_id: Float
  version_group_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_abilityflavortext"
"""
input abilityflavortext_var_samp_order_by {
  ability_id: order_by
  id: order_by
  language_id: order_by
  version_group_id: order_by
}

"""aggregate variance on columns"""
type abilityflavortext_variance_fields {
  ability_id: Float
  id: Float
  language_id: Float
  version_group_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_abilityflavortext"
"""
input abilityflavortext_variance_order_by {
  ability_id: order_by
  id: order_by
  language_id: order_by
  version_group_id: order_by
}

"""
columns and relationships of "pokemon_v2_abilityname"
"""
type abilityname {
  """An object relationship"""
  ability: ability
  ability_id: Int
  id: Int!

  """An object relationship"""
  language: language
  language_id: Int
  name: String!
}

"""
aggregated selection of "pokemon_v2_abilityname"
"""
type abilityname_aggregate {
  aggregate: abilityname_aggregate_fields
  nodes: [abilityname!]!
}

input abilityname_aggregate_bool_exp {
  count: abilityname_aggregate_bool_exp_count
}

input abilityname_aggregate_bool_exp_count {
  arguments: [abilityname_select_column!]
  distinct: Boolean
  filter: abilityname_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_abilityname"
"""
type abilityname_aggregate_fields {
  avg: abilityname_avg_fields
  count(columns: [abilityname_select_column!], distinct: Boolean): Int!
  max: abilityname_max_fields
  min: abilityname_min_fields
  stddev: abilityname_stddev_fields
  stddev_pop: abilityname_stddev_pop_fields
  stddev_samp: abilityname_stddev_samp_fields
  sum: abilityname_sum_fields
  var_pop: abilityname_var_pop_fields
  var_samp: abilityname_var_samp_fields
  variance: abilityname_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_abilityname"
"""
input abilityname_aggregate_order_by {
  avg: abilityname_avg_order_by
  count: order_by
  max: abilityname_max_order_by
  min: abilityname_min_order_by
  stddev: abilityname_stddev_order_by
  stddev_pop: abilityname_stddev_pop_order_by
  stddev_samp: abilityname_stddev_samp_order_by
  sum: abilityname_sum_order_by
  var_pop: abilityname_var_pop_order_by
  var_samp: abilityname_var_samp_order_by
  variance: abilityname_variance_order_by
}

"""aggregate avg on columns"""
type abilityname_avg_fields {
  ability_id: Float
  id: Float
  language_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_abilityname"
"""
input abilityname_avg_order_by {
  ability_id: order_by
  id: order_by
  language_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_abilityname". All fields are combined with a logical 'AND'.
"""
input abilityname_bool_exp {
  _and: [abilityname_bool_exp!]
  _not: abilityname_bool_exp
  _or: [abilityname_bool_exp!]
  ability: ability_bool_exp
  ability_id: Int_comparison_exp
  id: Int_comparison_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
  name: String_comparison_exp
}

"""aggregate max on columns"""
type abilityname_max_fields {
  ability_id: Int
  id: Int
  language_id: Int
  name: String
}

"""
order by max() on columns of table "pokemon_v2_abilityname"
"""
input abilityname_max_order_by {
  ability_id: order_by
  id: order_by
  language_id: order_by
  name: order_by
}

"""aggregate min on columns"""
type abilityname_min_fields {
  ability_id: Int
  id: Int
  language_id: Int
  name: String
}

"""
order by min() on columns of table "pokemon_v2_abilityname"
"""
input abilityname_min_order_by {
  ability_id: order_by
  id: order_by
  language_id: order_by
  name: order_by
}

"""Ordering options when selecting data from "pokemon_v2_abilityname"."""
input abilityname_order_by {
  ability: ability_order_by
  ability_id: order_by
  id: order_by
  language: language_order_by
  language_id: order_by
  name: order_by
}

"""
select columns of table "pokemon_v2_abilityname"
"""
enum abilityname_select_column {
  """column name"""
  ability_id

  """column name"""
  id

  """column name"""
  language_id

  """column name"""
  name
}

"""aggregate stddev on columns"""
type abilityname_stddev_fields {
  ability_id: Float
  id: Float
  language_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_abilityname"
"""
input abilityname_stddev_order_by {
  ability_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate stddev_pop on columns"""
type abilityname_stddev_pop_fields {
  ability_id: Float
  id: Float
  language_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_abilityname"
"""
input abilityname_stddev_pop_order_by {
  ability_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate stddev_samp on columns"""
type abilityname_stddev_samp_fields {
  ability_id: Float
  id: Float
  language_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_abilityname"
"""
input abilityname_stddev_samp_order_by {
  ability_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate sum on columns"""
type abilityname_sum_fields {
  ability_id: Int
  id: Int
  language_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_abilityname"
"""
input abilityname_sum_order_by {
  ability_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate var_pop on columns"""
type abilityname_var_pop_fields {
  ability_id: Float
  id: Float
  language_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_abilityname"
"""
input abilityname_var_pop_order_by {
  ability_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate var_samp on columns"""
type abilityname_var_samp_fields {
  ability_id: Float
  id: Float
  language_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_abilityname"
"""
input abilityname_var_samp_order_by {
  ability_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate variance on columns"""
type abilityname_variance_fields {
  ability_id: Float
  id: Float
  language_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_abilityname"
"""
input abilityname_variance_order_by {
  ability_id: order_by
  id: order_by
  language_id: order_by
}

"""
columns and relationships of "pokemon_v2_berry"
"""
type berry {
  berry_firmness_id: Int

  """An object relationship"""
  berryfirmness: berryfirmness

  """An array relationship"""
  berryflavormaps(
    """distinct select on columns"""
    distinct_on: [berryflavormap_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [berryflavormap_order_by!]

    """filter the rows returned"""
    where: berryflavormap_bool_exp
  ): [berryflavormap!]!

  """An aggregate relationship"""
  berryflavormaps_aggregate(
    """distinct select on columns"""
    distinct_on: [berryflavormap_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [berryflavormap_order_by!]

    """filter the rows returned"""
    where: berryflavormap_bool_exp
  ): berryflavormap_aggregate!
  growth_time: Int!
  id: Int!

  """An object relationship"""
  item: item
  item_id: Int
  max_harvest: Int!
  name: String!
  natural_gift_power: Int!
  natural_gift_type_id: Int
  size: Int!
  smoothness: Int!
  soil_dryness: Int!

  """An object relationship"""
  type: type
}

"""
aggregated selection of "pokemon_v2_berry"
"""
type berry_aggregate {
  aggregate: berry_aggregate_fields
  nodes: [berry!]!
}

input berry_aggregate_bool_exp {
  count: berry_aggregate_bool_exp_count
}

input berry_aggregate_bool_exp_count {
  arguments: [berry_select_column!]
  distinct: Boolean
  filter: berry_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_berry"
"""
type berry_aggregate_fields {
  avg: berry_avg_fields
  count(columns: [berry_select_column!], distinct: Boolean): Int!
  max: berry_max_fields
  min: berry_min_fields
  stddev: berry_stddev_fields
  stddev_pop: berry_stddev_pop_fields
  stddev_samp: berry_stddev_samp_fields
  sum: berry_sum_fields
  var_pop: berry_var_pop_fields
  var_samp: berry_var_samp_fields
  variance: berry_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_berry"
"""
input berry_aggregate_order_by {
  avg: berry_avg_order_by
  count: order_by
  max: berry_max_order_by
  min: berry_min_order_by
  stddev: berry_stddev_order_by
  stddev_pop: berry_stddev_pop_order_by
  stddev_samp: berry_stddev_samp_order_by
  sum: berry_sum_order_by
  var_pop: berry_var_pop_order_by
  var_samp: berry_var_samp_order_by
  variance: berry_variance_order_by
}

"""aggregate avg on columns"""
type berry_avg_fields {
  berry_firmness_id: Float
  growth_time: Float
  id: Float
  item_id: Float
  max_harvest: Float
  natural_gift_power: Float
  natural_gift_type_id: Float
  size: Float
  smoothness: Float
  soil_dryness: Float
}

"""
order by avg() on columns of table "pokemon_v2_berry"
"""
input berry_avg_order_by {
  berry_firmness_id: order_by
  growth_time: order_by
  id: order_by
  item_id: order_by
  max_harvest: order_by
  natural_gift_power: order_by
  natural_gift_type_id: order_by
  size: order_by
  smoothness: order_by
  soil_dryness: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_berry". All fields are combined with a logical 'AND'.
"""
input berry_bool_exp {
  _and: [berry_bool_exp!]
  _not: berry_bool_exp
  _or: [berry_bool_exp!]
  berry_firmness_id: Int_comparison_exp
  berryfirmness: berryfirmness_bool_exp
  berryflavormaps: berryflavormap_bool_exp
  berryflavormaps_aggregate: berryflavormap_aggregate_bool_exp
  growth_time: Int_comparison_exp
  id: Int_comparison_exp
  item: item_bool_exp
  item_id: Int_comparison_exp
  max_harvest: Int_comparison_exp
  name: String_comparison_exp
  natural_gift_power: Int_comparison_exp
  natural_gift_type_id: Int_comparison_exp
  size: Int_comparison_exp
  smoothness: Int_comparison_exp
  soil_dryness: Int_comparison_exp
  type: type_bool_exp
}

"""aggregate max on columns"""
type berry_max_fields {
  berry_firmness_id: Int
  growth_time: Int
  id: Int
  item_id: Int
  max_harvest: Int
  name: String
  natural_gift_power: Int
  natural_gift_type_id: Int
  size: Int
  smoothness: Int
  soil_dryness: Int
}

"""
order by max() on columns of table "pokemon_v2_berry"
"""
input berry_max_order_by {
  berry_firmness_id: order_by
  growth_time: order_by
  id: order_by
  item_id: order_by
  max_harvest: order_by
  name: order_by
  natural_gift_power: order_by
  natural_gift_type_id: order_by
  size: order_by
  smoothness: order_by
  soil_dryness: order_by
}

"""aggregate min on columns"""
type berry_min_fields {
  berry_firmness_id: Int
  growth_time: Int
  id: Int
  item_id: Int
  max_harvest: Int
  name: String
  natural_gift_power: Int
  natural_gift_type_id: Int
  size: Int
  smoothness: Int
  soil_dryness: Int
}

"""
order by min() on columns of table "pokemon_v2_berry"
"""
input berry_min_order_by {
  berry_firmness_id: order_by
  growth_time: order_by
  id: order_by
  item_id: order_by
  max_harvest: order_by
  name: order_by
  natural_gift_power: order_by
  natural_gift_type_id: order_by
  size: order_by
  smoothness: order_by
  soil_dryness: order_by
}

"""Ordering options when selecting data from "pokemon_v2_berry"."""
input berry_order_by {
  berry_firmness_id: order_by
  berryfirmness: berryfirmness_order_by
  berryflavormaps_aggregate: berryflavormap_aggregate_order_by
  growth_time: order_by
  id: order_by
  item: item_order_by
  item_id: order_by
  max_harvest: order_by
  name: order_by
  natural_gift_power: order_by
  natural_gift_type_id: order_by
  size: order_by
  smoothness: order_by
  soil_dryness: order_by
  type: type_order_by
}

"""
select columns of table "pokemon_v2_berry"
"""
enum berry_select_column {
  """column name"""
  berry_firmness_id

  """column name"""
  growth_time

  """column name"""
  id

  """column name"""
  item_id

  """column name"""
  max_harvest

  """column name"""
  name

  """column name"""
  natural_gift_power

  """column name"""
  natural_gift_type_id

  """column name"""
  size

  """column name"""
  smoothness

  """column name"""
  soil_dryness
}

"""aggregate stddev on columns"""
type berry_stddev_fields {
  berry_firmness_id: Float
  growth_time: Float
  id: Float
  item_id: Float
  max_harvest: Float
  natural_gift_power: Float
  natural_gift_type_id: Float
  size: Float
  smoothness: Float
  soil_dryness: Float
}

"""
order by stddev() on columns of table "pokemon_v2_berry"
"""
input berry_stddev_order_by {
  berry_firmness_id: order_by
  growth_time: order_by
  id: order_by
  item_id: order_by
  max_harvest: order_by
  natural_gift_power: order_by
  natural_gift_type_id: order_by
  size: order_by
  smoothness: order_by
  soil_dryness: order_by
}

"""aggregate stddev_pop on columns"""
type berry_stddev_pop_fields {
  berry_firmness_id: Float
  growth_time: Float
  id: Float
  item_id: Float
  max_harvest: Float
  natural_gift_power: Float
  natural_gift_type_id: Float
  size: Float
  smoothness: Float
  soil_dryness: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_berry"
"""
input berry_stddev_pop_order_by {
  berry_firmness_id: order_by
  growth_time: order_by
  id: order_by
  item_id: order_by
  max_harvest: order_by
  natural_gift_power: order_by
  natural_gift_type_id: order_by
  size: order_by
  smoothness: order_by
  soil_dryness: order_by
}

"""aggregate stddev_samp on columns"""
type berry_stddev_samp_fields {
  berry_firmness_id: Float
  growth_time: Float
  id: Float
  item_id: Float
  max_harvest: Float
  natural_gift_power: Float
  natural_gift_type_id: Float
  size: Float
  smoothness: Float
  soil_dryness: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_berry"
"""
input berry_stddev_samp_order_by {
  berry_firmness_id: order_by
  growth_time: order_by
  id: order_by
  item_id: order_by
  max_harvest: order_by
  natural_gift_power: order_by
  natural_gift_type_id: order_by
  size: order_by
  smoothness: order_by
  soil_dryness: order_by
}

"""aggregate sum on columns"""
type berry_sum_fields {
  berry_firmness_id: Int
  growth_time: Int
  id: Int
  item_id: Int
  max_harvest: Int
  natural_gift_power: Int
  natural_gift_type_id: Int
  size: Int
  smoothness: Int
  soil_dryness: Int
}

"""
order by sum() on columns of table "pokemon_v2_berry"
"""
input berry_sum_order_by {
  berry_firmness_id: order_by
  growth_time: order_by
  id: order_by
  item_id: order_by
  max_harvest: order_by
  natural_gift_power: order_by
  natural_gift_type_id: order_by
  size: order_by
  smoothness: order_by
  soil_dryness: order_by
}

"""aggregate var_pop on columns"""
type berry_var_pop_fields {
  berry_firmness_id: Float
  growth_time: Float
  id: Float
  item_id: Float
  max_harvest: Float
  natural_gift_power: Float
  natural_gift_type_id: Float
  size: Float
  smoothness: Float
  soil_dryness: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_berry"
"""
input berry_var_pop_order_by {
  berry_firmness_id: order_by
  growth_time: order_by
  id: order_by
  item_id: order_by
  max_harvest: order_by
  natural_gift_power: order_by
  natural_gift_type_id: order_by
  size: order_by
  smoothness: order_by
  soil_dryness: order_by
}

"""aggregate var_samp on columns"""
type berry_var_samp_fields {
  berry_firmness_id: Float
  growth_time: Float
  id: Float
  item_id: Float
  max_harvest: Float
  natural_gift_power: Float
  natural_gift_type_id: Float
  size: Float
  smoothness: Float
  soil_dryness: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_berry"
"""
input berry_var_samp_order_by {
  berry_firmness_id: order_by
  growth_time: order_by
  id: order_by
  item_id: order_by
  max_harvest: order_by
  natural_gift_power: order_by
  natural_gift_type_id: order_by
  size: order_by
  smoothness: order_by
  soil_dryness: order_by
}

"""aggregate variance on columns"""
type berry_variance_fields {
  berry_firmness_id: Float
  growth_time: Float
  id: Float
  item_id: Float
  max_harvest: Float
  natural_gift_power: Float
  natural_gift_type_id: Float
  size: Float
  smoothness: Float
  soil_dryness: Float
}

"""
order by variance() on columns of table "pokemon_v2_berry"
"""
input berry_variance_order_by {
  berry_firmness_id: order_by
  growth_time: order_by
  id: order_by
  item_id: order_by
  max_harvest: order_by
  natural_gift_power: order_by
  natural_gift_type_id: order_by
  size: order_by
  smoothness: order_by
  soil_dryness: order_by
}

"""
columns and relationships of "pokemon_v2_berryfirmness"
"""
type berryfirmness {
  """An array relationship"""
  berries(
    """distinct select on columns"""
    distinct_on: [berry_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [berry_order_by!]

    """filter the rows returned"""
    where: berry_bool_exp
  ): [berry!]!

  """An aggregate relationship"""
  berries_aggregate(
    """distinct select on columns"""
    distinct_on: [berry_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [berry_order_by!]

    """filter the rows returned"""
    where: berry_bool_exp
  ): berry_aggregate!

  """An array relationship"""
  berryfirmnessnames(
    """distinct select on columns"""
    distinct_on: [berryfirmnessname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [berryfirmnessname_order_by!]

    """filter the rows returned"""
    where: berryfirmnessname_bool_exp
  ): [berryfirmnessname!]!

  """An aggregate relationship"""
  berryfirmnessnames_aggregate(
    """distinct select on columns"""
    distinct_on: [berryfirmnessname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [berryfirmnessname_order_by!]

    """filter the rows returned"""
    where: berryfirmnessname_bool_exp
  ): berryfirmnessname_aggregate!
  id: Int!
  name: String!
}

"""
aggregated selection of "pokemon_v2_berryfirmness"
"""
type berryfirmness_aggregate {
  aggregate: berryfirmness_aggregate_fields
  nodes: [berryfirmness!]!
}

"""
aggregate fields of "pokemon_v2_berryfirmness"
"""
type berryfirmness_aggregate_fields {
  avg: berryfirmness_avg_fields
  count(columns: [berryfirmness_select_column!], distinct: Boolean): Int!
  max: berryfirmness_max_fields
  min: berryfirmness_min_fields
  stddev: berryfirmness_stddev_fields
  stddev_pop: berryfirmness_stddev_pop_fields
  stddev_samp: berryfirmness_stddev_samp_fields
  sum: berryfirmness_sum_fields
  var_pop: berryfirmness_var_pop_fields
  var_samp: berryfirmness_var_samp_fields
  variance: berryfirmness_variance_fields
}

"""aggregate avg on columns"""
type berryfirmness_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "pokemon_v2_berryfirmness". All fields are combined with a logical 'AND'.
"""
input berryfirmness_bool_exp {
  _and: [berryfirmness_bool_exp!]
  _not: berryfirmness_bool_exp
  _or: [berryfirmness_bool_exp!]
  berries: berry_bool_exp
  berries_aggregate: berry_aggregate_bool_exp
  berryfirmnessnames: berryfirmnessname_bool_exp
  berryfirmnessnames_aggregate: berryfirmnessname_aggregate_bool_exp
  id: Int_comparison_exp
  name: String_comparison_exp
}

"""aggregate max on columns"""
type berryfirmness_max_fields {
  id: Int
  name: String
}

"""aggregate min on columns"""
type berryfirmness_min_fields {
  id: Int
  name: String
}

"""Ordering options when selecting data from "pokemon_v2_berryfirmness"."""
input berryfirmness_order_by {
  berries_aggregate: berry_aggregate_order_by
  berryfirmnessnames_aggregate: berryfirmnessname_aggregate_order_by
  id: order_by
  name: order_by
}

"""
select columns of table "pokemon_v2_berryfirmness"
"""
enum berryfirmness_select_column {
  """column name"""
  id

  """column name"""
  name
}

"""aggregate stddev on columns"""
type berryfirmness_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type berryfirmness_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type berryfirmness_stddev_samp_fields {
  id: Float
}

"""aggregate sum on columns"""
type berryfirmness_sum_fields {
  id: Int
}

"""aggregate var_pop on columns"""
type berryfirmness_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type berryfirmness_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type berryfirmness_variance_fields {
  id: Float
}

"""
columns and relationships of "pokemon_v2_berryfirmnessname"
"""
type berryfirmnessname {
  berry_firmness_id: Int

  """An object relationship"""
  berryfirmness: berryfirmness
  id: Int!

  """An object relationship"""
  language: language
  language_id: Int
  name: String!
}

"""
aggregated selection of "pokemon_v2_berryfirmnessname"
"""
type berryfirmnessname_aggregate {
  aggregate: berryfirmnessname_aggregate_fields
  nodes: [berryfirmnessname!]!
}

input berryfirmnessname_aggregate_bool_exp {
  count: berryfirmnessname_aggregate_bool_exp_count
}

input berryfirmnessname_aggregate_bool_exp_count {
  arguments: [berryfirmnessname_select_column!]
  distinct: Boolean
  filter: berryfirmnessname_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_berryfirmnessname"
"""
type berryfirmnessname_aggregate_fields {
  avg: berryfirmnessname_avg_fields
  count(columns: [berryfirmnessname_select_column!], distinct: Boolean): Int!
  max: berryfirmnessname_max_fields
  min: berryfirmnessname_min_fields
  stddev: berryfirmnessname_stddev_fields
  stddev_pop: berryfirmnessname_stddev_pop_fields
  stddev_samp: berryfirmnessname_stddev_samp_fields
  sum: berryfirmnessname_sum_fields
  var_pop: berryfirmnessname_var_pop_fields
  var_samp: berryfirmnessname_var_samp_fields
  variance: berryfirmnessname_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_berryfirmnessname"
"""
input berryfirmnessname_aggregate_order_by {
  avg: berryfirmnessname_avg_order_by
  count: order_by
  max: berryfirmnessname_max_order_by
  min: berryfirmnessname_min_order_by
  stddev: berryfirmnessname_stddev_order_by
  stddev_pop: berryfirmnessname_stddev_pop_order_by
  stddev_samp: berryfirmnessname_stddev_samp_order_by
  sum: berryfirmnessname_sum_order_by
  var_pop: berryfirmnessname_var_pop_order_by
  var_samp: berryfirmnessname_var_samp_order_by
  variance: berryfirmnessname_variance_order_by
}

"""aggregate avg on columns"""
type berryfirmnessname_avg_fields {
  berry_firmness_id: Float
  id: Float
  language_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_berryfirmnessname"
"""
input berryfirmnessname_avg_order_by {
  berry_firmness_id: order_by
  id: order_by
  language_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_berryfirmnessname".
All fields are combined with a logical 'AND'.
"""
input berryfirmnessname_bool_exp {
  _and: [berryfirmnessname_bool_exp!]
  _not: berryfirmnessname_bool_exp
  _or: [berryfirmnessname_bool_exp!]
  berry_firmness_id: Int_comparison_exp
  berryfirmness: berryfirmness_bool_exp
  id: Int_comparison_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
  name: String_comparison_exp
}

"""aggregate max on columns"""
type berryfirmnessname_max_fields {
  berry_firmness_id: Int
  id: Int
  language_id: Int
  name: String
}

"""
order by max() on columns of table "pokemon_v2_berryfirmnessname"
"""
input berryfirmnessname_max_order_by {
  berry_firmness_id: order_by
  id: order_by
  language_id: order_by
  name: order_by
}

"""aggregate min on columns"""
type berryfirmnessname_min_fields {
  berry_firmness_id: Int
  id: Int
  language_id: Int
  name: String
}

"""
order by min() on columns of table "pokemon_v2_berryfirmnessname"
"""
input berryfirmnessname_min_order_by {
  berry_firmness_id: order_by
  id: order_by
  language_id: order_by
  name: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_berryfirmnessname".
"""
input berryfirmnessname_order_by {
  berry_firmness_id: order_by
  berryfirmness: berryfirmness_order_by
  id: order_by
  language: language_order_by
  language_id: order_by
  name: order_by
}

"""
select columns of table "pokemon_v2_berryfirmnessname"
"""
enum berryfirmnessname_select_column {
  """column name"""
  berry_firmness_id

  """column name"""
  id

  """column name"""
  language_id

  """column name"""
  name
}

"""aggregate stddev on columns"""
type berryfirmnessname_stddev_fields {
  berry_firmness_id: Float
  id: Float
  language_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_berryfirmnessname"
"""
input berryfirmnessname_stddev_order_by {
  berry_firmness_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate stddev_pop on columns"""
type berryfirmnessname_stddev_pop_fields {
  berry_firmness_id: Float
  id: Float
  language_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_berryfirmnessname"
"""
input berryfirmnessname_stddev_pop_order_by {
  berry_firmness_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate stddev_samp on columns"""
type berryfirmnessname_stddev_samp_fields {
  berry_firmness_id: Float
  id: Float
  language_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_berryfirmnessname"
"""
input berryfirmnessname_stddev_samp_order_by {
  berry_firmness_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate sum on columns"""
type berryfirmnessname_sum_fields {
  berry_firmness_id: Int
  id: Int
  language_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_berryfirmnessname"
"""
input berryfirmnessname_sum_order_by {
  berry_firmness_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate var_pop on columns"""
type berryfirmnessname_var_pop_fields {
  berry_firmness_id: Float
  id: Float
  language_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_berryfirmnessname"
"""
input berryfirmnessname_var_pop_order_by {
  berry_firmness_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate var_samp on columns"""
type berryfirmnessname_var_samp_fields {
  berry_firmness_id: Float
  id: Float
  language_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_berryfirmnessname"
"""
input berryfirmnessname_var_samp_order_by {
  berry_firmness_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate variance on columns"""
type berryfirmnessname_variance_fields {
  berry_firmness_id: Float
  id: Float
  language_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_berryfirmnessname"
"""
input berryfirmnessname_variance_order_by {
  berry_firmness_id: order_by
  id: order_by
  language_id: order_by
}

"""
columns and relationships of "pokemon_v2_berryflavor"
"""
type berryflavor {
  """An array relationship"""
  NaturesByLikesFlavorId(
    """distinct select on columns"""
    distinct_on: [nature_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [nature_order_by!]

    """filter the rows returned"""
    where: nature_bool_exp
  ): [nature!]!

  """An aggregate relationship"""
  NaturesByLikesFlavorId_aggregate(
    """distinct select on columns"""
    distinct_on: [nature_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [nature_order_by!]

    """filter the rows returned"""
    where: nature_bool_exp
  ): nature_aggregate!

  """An array relationship"""
  berryflavormaps(
    """distinct select on columns"""
    distinct_on: [berryflavormap_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [berryflavormap_order_by!]

    """filter the rows returned"""
    where: berryflavormap_bool_exp
  ): [berryflavormap!]!

  """An aggregate relationship"""
  berryflavormaps_aggregate(
    """distinct select on columns"""
    distinct_on: [berryflavormap_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [berryflavormap_order_by!]

    """filter the rows returned"""
    where: berryflavormap_bool_exp
  ): berryflavormap_aggregate!

  """An array relationship"""
  berryflavornames(
    """distinct select on columns"""
    distinct_on: [berryflavorname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [berryflavorname_order_by!]

    """filter the rows returned"""
    where: berryflavorname_bool_exp
  ): [berryflavorname!]!

  """An aggregate relationship"""
  berryflavornames_aggregate(
    """distinct select on columns"""
    distinct_on: [berryflavorname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [berryflavorname_order_by!]

    """filter the rows returned"""
    where: berryflavorname_bool_exp
  ): berryflavorname_aggregate!
  contest_type_id: Int

  """An object relationship"""
  contesttype: contesttype
  id: Int!
  name: String!

  """An array relationship"""
  natures(
    """distinct select on columns"""
    distinct_on: [nature_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [nature_order_by!]

    """filter the rows returned"""
    where: nature_bool_exp
  ): [nature!]!

  """An aggregate relationship"""
  natures_aggregate(
    """distinct select on columns"""
    distinct_on: [nature_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [nature_order_by!]

    """filter the rows returned"""
    where: nature_bool_exp
  ): nature_aggregate!
}

"""
aggregated selection of "pokemon_v2_berryflavor"
"""
type berryflavor_aggregate {
  aggregate: berryflavor_aggregate_fields
  nodes: [berryflavor!]!
}

input berryflavor_aggregate_bool_exp {
  count: berryflavor_aggregate_bool_exp_count
}

input berryflavor_aggregate_bool_exp_count {
  arguments: [berryflavor_select_column!]
  distinct: Boolean
  filter: berryflavor_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_berryflavor"
"""
type berryflavor_aggregate_fields {
  avg: berryflavor_avg_fields
  count(columns: [berryflavor_select_column!], distinct: Boolean): Int!
  max: berryflavor_max_fields
  min: berryflavor_min_fields
  stddev: berryflavor_stddev_fields
  stddev_pop: berryflavor_stddev_pop_fields
  stddev_samp: berryflavor_stddev_samp_fields
  sum: berryflavor_sum_fields
  var_pop: berryflavor_var_pop_fields
  var_samp: berryflavor_var_samp_fields
  variance: berryflavor_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_berryflavor"
"""
input berryflavor_aggregate_order_by {
  avg: berryflavor_avg_order_by
  count: order_by
  max: berryflavor_max_order_by
  min: berryflavor_min_order_by
  stddev: berryflavor_stddev_order_by
  stddev_pop: berryflavor_stddev_pop_order_by
  stddev_samp: berryflavor_stddev_samp_order_by
  sum: berryflavor_sum_order_by
  var_pop: berryflavor_var_pop_order_by
  var_samp: berryflavor_var_samp_order_by
  variance: berryflavor_variance_order_by
}

"""aggregate avg on columns"""
type berryflavor_avg_fields {
  contest_type_id: Float
  id: Float
}

"""
order by avg() on columns of table "pokemon_v2_berryflavor"
"""
input berryflavor_avg_order_by {
  contest_type_id: order_by
  id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_berryflavor". All fields are combined with a logical 'AND'.
"""
input berryflavor_bool_exp {
  NaturesByLikesFlavorId: nature_bool_exp
  NaturesByLikesFlavorId_aggregate: nature_aggregate_bool_exp
  _and: [berryflavor_bool_exp!]
  _not: berryflavor_bool_exp
  _or: [berryflavor_bool_exp!]
  berryflavormaps: berryflavormap_bool_exp
  berryflavormaps_aggregate: berryflavormap_aggregate_bool_exp
  berryflavornames: berryflavorname_bool_exp
  berryflavornames_aggregate: berryflavorname_aggregate_bool_exp
  contest_type_id: Int_comparison_exp
  contesttype: contesttype_bool_exp
  id: Int_comparison_exp
  name: String_comparison_exp
  natures: nature_bool_exp
  natures_aggregate: nature_aggregate_bool_exp
}

"""aggregate max on columns"""
type berryflavor_max_fields {
  contest_type_id: Int
  id: Int
  name: String
}

"""
order by max() on columns of table "pokemon_v2_berryflavor"
"""
input berryflavor_max_order_by {
  contest_type_id: order_by
  id: order_by
  name: order_by
}

"""aggregate min on columns"""
type berryflavor_min_fields {
  contest_type_id: Int
  id: Int
  name: String
}

"""
order by min() on columns of table "pokemon_v2_berryflavor"
"""
input berryflavor_min_order_by {
  contest_type_id: order_by
  id: order_by
  name: order_by
}

"""Ordering options when selecting data from "pokemon_v2_berryflavor"."""
input berryflavor_order_by {
  NaturesByLikesFlavorId_aggregate: nature_aggregate_order_by
  berryflavormaps_aggregate: berryflavormap_aggregate_order_by
  berryflavornames_aggregate: berryflavorname_aggregate_order_by
  contest_type_id: order_by
  contesttype: contesttype_order_by
  id: order_by
  name: order_by
  natures_aggregate: nature_aggregate_order_by
}

"""
select columns of table "pokemon_v2_berryflavor"
"""
enum berryflavor_select_column {
  """column name"""
  contest_type_id

  """column name"""
  id

  """column name"""
  name
}

"""aggregate stddev on columns"""
type berryflavor_stddev_fields {
  contest_type_id: Float
  id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_berryflavor"
"""
input berryflavor_stddev_order_by {
  contest_type_id: order_by
  id: order_by
}

"""aggregate stddev_pop on columns"""
type berryflavor_stddev_pop_fields {
  contest_type_id: Float
  id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_berryflavor"
"""
input berryflavor_stddev_pop_order_by {
  contest_type_id: order_by
  id: order_by
}

"""aggregate stddev_samp on columns"""
type berryflavor_stddev_samp_fields {
  contest_type_id: Float
  id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_berryflavor"
"""
input berryflavor_stddev_samp_order_by {
  contest_type_id: order_by
  id: order_by
}

"""aggregate sum on columns"""
type berryflavor_sum_fields {
  contest_type_id: Int
  id: Int
}

"""
order by sum() on columns of table "pokemon_v2_berryflavor"
"""
input berryflavor_sum_order_by {
  contest_type_id: order_by
  id: order_by
}

"""aggregate var_pop on columns"""
type berryflavor_var_pop_fields {
  contest_type_id: Float
  id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_berryflavor"
"""
input berryflavor_var_pop_order_by {
  contest_type_id: order_by
  id: order_by
}

"""aggregate var_samp on columns"""
type berryflavor_var_samp_fields {
  contest_type_id: Float
  id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_berryflavor"
"""
input berryflavor_var_samp_order_by {
  contest_type_id: order_by
  id: order_by
}

"""aggregate variance on columns"""
type berryflavor_variance_fields {
  contest_type_id: Float
  id: Float
}

"""
order by variance() on columns of table "pokemon_v2_berryflavor"
"""
input berryflavor_variance_order_by {
  contest_type_id: order_by
  id: order_by
}

"""
columns and relationships of "pokemon_v2_berryflavormap"
"""
type berryflavormap {
  """An object relationship"""
  berry: berry
  berry_flavor_id: Int
  berry_id: Int

  """An object relationship"""
  berryflavor: berryflavor
  id: Int!
  potency: Int!
}

"""
aggregated selection of "pokemon_v2_berryflavormap"
"""
type berryflavormap_aggregate {
  aggregate: berryflavormap_aggregate_fields
  nodes: [berryflavormap!]!
}

input berryflavormap_aggregate_bool_exp {
  count: berryflavormap_aggregate_bool_exp_count
}

input berryflavormap_aggregate_bool_exp_count {
  arguments: [berryflavormap_select_column!]
  distinct: Boolean
  filter: berryflavormap_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_berryflavormap"
"""
type berryflavormap_aggregate_fields {
  avg: berryflavormap_avg_fields
  count(columns: [berryflavormap_select_column!], distinct: Boolean): Int!
  max: berryflavormap_max_fields
  min: berryflavormap_min_fields
  stddev: berryflavormap_stddev_fields
  stddev_pop: berryflavormap_stddev_pop_fields
  stddev_samp: berryflavormap_stddev_samp_fields
  sum: berryflavormap_sum_fields
  var_pop: berryflavormap_var_pop_fields
  var_samp: berryflavormap_var_samp_fields
  variance: berryflavormap_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_berryflavormap"
"""
input berryflavormap_aggregate_order_by {
  avg: berryflavormap_avg_order_by
  count: order_by
  max: berryflavormap_max_order_by
  min: berryflavormap_min_order_by
  stddev: berryflavormap_stddev_order_by
  stddev_pop: berryflavormap_stddev_pop_order_by
  stddev_samp: berryflavormap_stddev_samp_order_by
  sum: berryflavormap_sum_order_by
  var_pop: berryflavormap_var_pop_order_by
  var_samp: berryflavormap_var_samp_order_by
  variance: berryflavormap_variance_order_by
}

"""aggregate avg on columns"""
type berryflavormap_avg_fields {
  berry_flavor_id: Float
  berry_id: Float
  id: Float
  potency: Float
}

"""
order by avg() on columns of table "pokemon_v2_berryflavormap"
"""
input berryflavormap_avg_order_by {
  berry_flavor_id: order_by
  berry_id: order_by
  id: order_by
  potency: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_berryflavormap". All fields are combined with a logical 'AND'.
"""
input berryflavormap_bool_exp {
  _and: [berryflavormap_bool_exp!]
  _not: berryflavormap_bool_exp
  _or: [berryflavormap_bool_exp!]
  berry: berry_bool_exp
  berry_flavor_id: Int_comparison_exp
  berry_id: Int_comparison_exp
  berryflavor: berryflavor_bool_exp
  id: Int_comparison_exp
  potency: Int_comparison_exp
}

"""aggregate max on columns"""
type berryflavormap_max_fields {
  berry_flavor_id: Int
  berry_id: Int
  id: Int
  potency: Int
}

"""
order by max() on columns of table "pokemon_v2_berryflavormap"
"""
input berryflavormap_max_order_by {
  berry_flavor_id: order_by
  berry_id: order_by
  id: order_by
  potency: order_by
}

"""aggregate min on columns"""
type berryflavormap_min_fields {
  berry_flavor_id: Int
  berry_id: Int
  id: Int
  potency: Int
}

"""
order by min() on columns of table "pokemon_v2_berryflavormap"
"""
input berryflavormap_min_order_by {
  berry_flavor_id: order_by
  berry_id: order_by
  id: order_by
  potency: order_by
}

"""Ordering options when selecting data from "pokemon_v2_berryflavormap"."""
input berryflavormap_order_by {
  berry: berry_order_by
  berry_flavor_id: order_by
  berry_id: order_by
  berryflavor: berryflavor_order_by
  id: order_by
  potency: order_by
}

"""
select columns of table "pokemon_v2_berryflavormap"
"""
enum berryflavormap_select_column {
  """column name"""
  berry_flavor_id

  """column name"""
  berry_id

  """column name"""
  id

  """column name"""
  potency
}

"""aggregate stddev on columns"""
type berryflavormap_stddev_fields {
  berry_flavor_id: Float
  berry_id: Float
  id: Float
  potency: Float
}

"""
order by stddev() on columns of table "pokemon_v2_berryflavormap"
"""
input berryflavormap_stddev_order_by {
  berry_flavor_id: order_by
  berry_id: order_by
  id: order_by
  potency: order_by
}

"""aggregate stddev_pop on columns"""
type berryflavormap_stddev_pop_fields {
  berry_flavor_id: Float
  berry_id: Float
  id: Float
  potency: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_berryflavormap"
"""
input berryflavormap_stddev_pop_order_by {
  berry_flavor_id: order_by
  berry_id: order_by
  id: order_by
  potency: order_by
}

"""aggregate stddev_samp on columns"""
type berryflavormap_stddev_samp_fields {
  berry_flavor_id: Float
  berry_id: Float
  id: Float
  potency: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_berryflavormap"
"""
input berryflavormap_stddev_samp_order_by {
  berry_flavor_id: order_by
  berry_id: order_by
  id: order_by
  potency: order_by
}

"""aggregate sum on columns"""
type berryflavormap_sum_fields {
  berry_flavor_id: Int
  berry_id: Int
  id: Int
  potency: Int
}

"""
order by sum() on columns of table "pokemon_v2_berryflavormap"
"""
input berryflavormap_sum_order_by {
  berry_flavor_id: order_by
  berry_id: order_by
  id: order_by
  potency: order_by
}

"""aggregate var_pop on columns"""
type berryflavormap_var_pop_fields {
  berry_flavor_id: Float
  berry_id: Float
  id: Float
  potency: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_berryflavormap"
"""
input berryflavormap_var_pop_order_by {
  berry_flavor_id: order_by
  berry_id: order_by
  id: order_by
  potency: order_by
}

"""aggregate var_samp on columns"""
type berryflavormap_var_samp_fields {
  berry_flavor_id: Float
  berry_id: Float
  id: Float
  potency: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_berryflavormap"
"""
input berryflavormap_var_samp_order_by {
  berry_flavor_id: order_by
  berry_id: order_by
  id: order_by
  potency: order_by
}

"""aggregate variance on columns"""
type berryflavormap_variance_fields {
  berry_flavor_id: Float
  berry_id: Float
  id: Float
  potency: Float
}

"""
order by variance() on columns of table "pokemon_v2_berryflavormap"
"""
input berryflavormap_variance_order_by {
  berry_flavor_id: order_by
  berry_id: order_by
  id: order_by
  potency: order_by
}

"""
columns and relationships of "pokemon_v2_berryflavorname"
"""
type berryflavorname {
  berry_flavor_id: Int

  """An object relationship"""
  berryflavor: berryflavor
  id: Int!

  """An object relationship"""
  language: language
  language_id: Int
  name: String!
}

"""
aggregated selection of "pokemon_v2_berryflavorname"
"""
type berryflavorname_aggregate {
  aggregate: berryflavorname_aggregate_fields
  nodes: [berryflavorname!]!
}

input berryflavorname_aggregate_bool_exp {
  count: berryflavorname_aggregate_bool_exp_count
}

input berryflavorname_aggregate_bool_exp_count {
  arguments: [berryflavorname_select_column!]
  distinct: Boolean
  filter: berryflavorname_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_berryflavorname"
"""
type berryflavorname_aggregate_fields {
  avg: berryflavorname_avg_fields
  count(columns: [berryflavorname_select_column!], distinct: Boolean): Int!
  max: berryflavorname_max_fields
  min: berryflavorname_min_fields
  stddev: berryflavorname_stddev_fields
  stddev_pop: berryflavorname_stddev_pop_fields
  stddev_samp: berryflavorname_stddev_samp_fields
  sum: berryflavorname_sum_fields
  var_pop: berryflavorname_var_pop_fields
  var_samp: berryflavorname_var_samp_fields
  variance: berryflavorname_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_berryflavorname"
"""
input berryflavorname_aggregate_order_by {
  avg: berryflavorname_avg_order_by
  count: order_by
  max: berryflavorname_max_order_by
  min: berryflavorname_min_order_by
  stddev: berryflavorname_stddev_order_by
  stddev_pop: berryflavorname_stddev_pop_order_by
  stddev_samp: berryflavorname_stddev_samp_order_by
  sum: berryflavorname_sum_order_by
  var_pop: berryflavorname_var_pop_order_by
  var_samp: berryflavorname_var_samp_order_by
  variance: berryflavorname_variance_order_by
}

"""aggregate avg on columns"""
type berryflavorname_avg_fields {
  berry_flavor_id: Float
  id: Float
  language_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_berryflavorname"
"""
input berryflavorname_avg_order_by {
  berry_flavor_id: order_by
  id: order_by
  language_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_berryflavorname". All fields are combined with a logical 'AND'.
"""
input berryflavorname_bool_exp {
  _and: [berryflavorname_bool_exp!]
  _not: berryflavorname_bool_exp
  _or: [berryflavorname_bool_exp!]
  berry_flavor_id: Int_comparison_exp
  berryflavor: berryflavor_bool_exp
  id: Int_comparison_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
  name: String_comparison_exp
}

"""aggregate max on columns"""
type berryflavorname_max_fields {
  berry_flavor_id: Int
  id: Int
  language_id: Int
  name: String
}

"""
order by max() on columns of table "pokemon_v2_berryflavorname"
"""
input berryflavorname_max_order_by {
  berry_flavor_id: order_by
  id: order_by
  language_id: order_by
  name: order_by
}

"""aggregate min on columns"""
type berryflavorname_min_fields {
  berry_flavor_id: Int
  id: Int
  language_id: Int
  name: String
}

"""
order by min() on columns of table "pokemon_v2_berryflavorname"
"""
input berryflavorname_min_order_by {
  berry_flavor_id: order_by
  id: order_by
  language_id: order_by
  name: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_berryflavorname".
"""
input berryflavorname_order_by {
  berry_flavor_id: order_by
  berryflavor: berryflavor_order_by
  id: order_by
  language: language_order_by
  language_id: order_by
  name: order_by
}

"""
select columns of table "pokemon_v2_berryflavorname"
"""
enum berryflavorname_select_column {
  """column name"""
  berry_flavor_id

  """column name"""
  id

  """column name"""
  language_id

  """column name"""
  name
}

"""aggregate stddev on columns"""
type berryflavorname_stddev_fields {
  berry_flavor_id: Float
  id: Float
  language_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_berryflavorname"
"""
input berryflavorname_stddev_order_by {
  berry_flavor_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate stddev_pop on columns"""
type berryflavorname_stddev_pop_fields {
  berry_flavor_id: Float
  id: Float
  language_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_berryflavorname"
"""
input berryflavorname_stddev_pop_order_by {
  berry_flavor_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate stddev_samp on columns"""
type berryflavorname_stddev_samp_fields {
  berry_flavor_id: Float
  id: Float
  language_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_berryflavorname"
"""
input berryflavorname_stddev_samp_order_by {
  berry_flavor_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate sum on columns"""
type berryflavorname_sum_fields {
  berry_flavor_id: Int
  id: Int
  language_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_berryflavorname"
"""
input berryflavorname_sum_order_by {
  berry_flavor_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate var_pop on columns"""
type berryflavorname_var_pop_fields {
  berry_flavor_id: Float
  id: Float
  language_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_berryflavorname"
"""
input berryflavorname_var_pop_order_by {
  berry_flavor_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate var_samp on columns"""
type berryflavorname_var_samp_fields {
  berry_flavor_id: Float
  id: Float
  language_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_berryflavorname"
"""
input berryflavorname_var_samp_order_by {
  berry_flavor_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate variance on columns"""
type berryflavorname_variance_fields {
  berry_flavor_id: Float
  id: Float
  language_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_berryflavorname"
"""
input berryflavorname_variance_order_by {
  berry_flavor_id: order_by
  id: order_by
  language_id: order_by
}

"""
Boolean expression to compare columns of type "Boolean". All fields are combined with logical 'AND'.
"""
input Boolean_comparison_exp {
  _eq: Boolean
  _gt: Boolean
  _gte: Boolean
  _in: [Boolean!]
  _is_null: Boolean
  _lt: Boolean
  _lte: Boolean
  _neq: Boolean
  _nin: [Boolean!]
}

"""
columns and relationships of "pokemon_v2_characteristic"
"""
type characteristic {
  """An array relationship"""
  characteristicdescriptions(
    """distinct select on columns"""
    distinct_on: [characteristicdescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [characteristicdescription_order_by!]

    """filter the rows returned"""
    where: characteristicdescription_bool_exp
  ): [characteristicdescription!]!

  """An aggregate relationship"""
  characteristicdescriptions_aggregate(
    """distinct select on columns"""
    distinct_on: [characteristicdescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [characteristicdescription_order_by!]

    """filter the rows returned"""
    where: characteristicdescription_bool_exp
  ): characteristicdescription_aggregate!
  gene_mod_5: Int!
  id: Int!

  """An object relationship"""
  stat: stat
  stat_id: Int
}

"""
aggregated selection of "pokemon_v2_characteristic"
"""
type characteristic_aggregate {
  aggregate: characteristic_aggregate_fields
  nodes: [characteristic!]!
}

input characteristic_aggregate_bool_exp {
  count: characteristic_aggregate_bool_exp_count
}

input characteristic_aggregate_bool_exp_count {
  arguments: [characteristic_select_column!]
  distinct: Boolean
  filter: characteristic_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_characteristic"
"""
type characteristic_aggregate_fields {
  avg: characteristic_avg_fields
  count(columns: [characteristic_select_column!], distinct: Boolean): Int!
  max: characteristic_max_fields
  min: characteristic_min_fields
  stddev: characteristic_stddev_fields
  stddev_pop: characteristic_stddev_pop_fields
  stddev_samp: characteristic_stddev_samp_fields
  sum: characteristic_sum_fields
  var_pop: characteristic_var_pop_fields
  var_samp: characteristic_var_samp_fields
  variance: characteristic_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_characteristic"
"""
input characteristic_aggregate_order_by {
  avg: characteristic_avg_order_by
  count: order_by
  max: characteristic_max_order_by
  min: characteristic_min_order_by
  stddev: characteristic_stddev_order_by
  stddev_pop: characteristic_stddev_pop_order_by
  stddev_samp: characteristic_stddev_samp_order_by
  sum: characteristic_sum_order_by
  var_pop: characteristic_var_pop_order_by
  var_samp: characteristic_var_samp_order_by
  variance: characteristic_variance_order_by
}

"""aggregate avg on columns"""
type characteristic_avg_fields {
  gene_mod_5: Float
  id: Float
  stat_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_characteristic"
"""
input characteristic_avg_order_by {
  gene_mod_5: order_by
  id: order_by
  stat_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_characteristic". All fields are combined with a logical 'AND'.
"""
input characteristic_bool_exp {
  _and: [characteristic_bool_exp!]
  _not: characteristic_bool_exp
  _or: [characteristic_bool_exp!]
  characteristicdescriptions: characteristicdescription_bool_exp
  characteristicdescriptions_aggregate: characteristicdescription_aggregate_bool_exp
  gene_mod_5: Int_comparison_exp
  id: Int_comparison_exp
  stat: stat_bool_exp
  stat_id: Int_comparison_exp
}

"""aggregate max on columns"""
type characteristic_max_fields {
  gene_mod_5: Int
  id: Int
  stat_id: Int
}

"""
order by max() on columns of table "pokemon_v2_characteristic"
"""
input characteristic_max_order_by {
  gene_mod_5: order_by
  id: order_by
  stat_id: order_by
}

"""aggregate min on columns"""
type characteristic_min_fields {
  gene_mod_5: Int
  id: Int
  stat_id: Int
}

"""
order by min() on columns of table "pokemon_v2_characteristic"
"""
input characteristic_min_order_by {
  gene_mod_5: order_by
  id: order_by
  stat_id: order_by
}

"""Ordering options when selecting data from "pokemon_v2_characteristic"."""
input characteristic_order_by {
  characteristicdescriptions_aggregate: characteristicdescription_aggregate_order_by
  gene_mod_5: order_by
  id: order_by
  stat: stat_order_by
  stat_id: order_by
}

"""
select columns of table "pokemon_v2_characteristic"
"""
enum characteristic_select_column {
  """column name"""
  gene_mod_5

  """column name"""
  id

  """column name"""
  stat_id
}

"""aggregate stddev on columns"""
type characteristic_stddev_fields {
  gene_mod_5: Float
  id: Float
  stat_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_characteristic"
"""
input characteristic_stddev_order_by {
  gene_mod_5: order_by
  id: order_by
  stat_id: order_by
}

"""aggregate stddev_pop on columns"""
type characteristic_stddev_pop_fields {
  gene_mod_5: Float
  id: Float
  stat_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_characteristic"
"""
input characteristic_stddev_pop_order_by {
  gene_mod_5: order_by
  id: order_by
  stat_id: order_by
}

"""aggregate stddev_samp on columns"""
type characteristic_stddev_samp_fields {
  gene_mod_5: Float
  id: Float
  stat_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_characteristic"
"""
input characteristic_stddev_samp_order_by {
  gene_mod_5: order_by
  id: order_by
  stat_id: order_by
}

"""aggregate sum on columns"""
type characteristic_sum_fields {
  gene_mod_5: Int
  id: Int
  stat_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_characteristic"
"""
input characteristic_sum_order_by {
  gene_mod_5: order_by
  id: order_by
  stat_id: order_by
}

"""aggregate var_pop on columns"""
type characteristic_var_pop_fields {
  gene_mod_5: Float
  id: Float
  stat_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_characteristic"
"""
input characteristic_var_pop_order_by {
  gene_mod_5: order_by
  id: order_by
  stat_id: order_by
}

"""aggregate var_samp on columns"""
type characteristic_var_samp_fields {
  gene_mod_5: Float
  id: Float
  stat_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_characteristic"
"""
input characteristic_var_samp_order_by {
  gene_mod_5: order_by
  id: order_by
  stat_id: order_by
}

"""aggregate variance on columns"""
type characteristic_variance_fields {
  gene_mod_5: Float
  id: Float
  stat_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_characteristic"
"""
input characteristic_variance_order_by {
  gene_mod_5: order_by
  id: order_by
  stat_id: order_by
}

"""
columns and relationships of "pokemon_v2_characteristicdescription"
"""
type characteristicdescription {
  """An object relationship"""
  characteristic: characteristic
  characteristic_id: Int
  description: String!
  id: Int!

  """An object relationship"""
  language: language
  language_id: Int
}

"""
aggregated selection of "pokemon_v2_characteristicdescription"
"""
type characteristicdescription_aggregate {
  aggregate: characteristicdescription_aggregate_fields
  nodes: [characteristicdescription!]!
}

input characteristicdescription_aggregate_bool_exp {
  count: characteristicdescription_aggregate_bool_exp_count
}

input characteristicdescription_aggregate_bool_exp_count {
  arguments: [characteristicdescription_select_column!]
  distinct: Boolean
  filter: characteristicdescription_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_characteristicdescription"
"""
type characteristicdescription_aggregate_fields {
  avg: characteristicdescription_avg_fields
  count(columns: [characteristicdescription_select_column!], distinct: Boolean): Int!
  max: characteristicdescription_max_fields
  min: characteristicdescription_min_fields
  stddev: characteristicdescription_stddev_fields
  stddev_pop: characteristicdescription_stddev_pop_fields
  stddev_samp: characteristicdescription_stddev_samp_fields
  sum: characteristicdescription_sum_fields
  var_pop: characteristicdescription_var_pop_fields
  var_samp: characteristicdescription_var_samp_fields
  variance: characteristicdescription_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_characteristicdescription"
"""
input characteristicdescription_aggregate_order_by {
  avg: characteristicdescription_avg_order_by
  count: order_by
  max: characteristicdescription_max_order_by
  min: characteristicdescription_min_order_by
  stddev: characteristicdescription_stddev_order_by
  stddev_pop: characteristicdescription_stddev_pop_order_by
  stddev_samp: characteristicdescription_stddev_samp_order_by
  sum: characteristicdescription_sum_order_by
  var_pop: characteristicdescription_var_pop_order_by
  var_samp: characteristicdescription_var_samp_order_by
  variance: characteristicdescription_variance_order_by
}

"""aggregate avg on columns"""
type characteristicdescription_avg_fields {
  characteristic_id: Float
  id: Float
  language_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_characteristicdescription"
"""
input characteristicdescription_avg_order_by {
  characteristic_id: order_by
  id: order_by
  language_id: order_by
}

"""
Boolean expression to filter rows from the table
"pokemon_v2_characteristicdescription". All fields are combined with a logical 'AND'.
"""
input characteristicdescription_bool_exp {
  _and: [characteristicdescription_bool_exp!]
  _not: characteristicdescription_bool_exp
  _or: [characteristicdescription_bool_exp!]
  characteristic: characteristic_bool_exp
  characteristic_id: Int_comparison_exp
  description: String_comparison_exp
  id: Int_comparison_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
}

"""aggregate max on columns"""
type characteristicdescription_max_fields {
  characteristic_id: Int
  description: String
  id: Int
  language_id: Int
}

"""
order by max() on columns of table "pokemon_v2_characteristicdescription"
"""
input characteristicdescription_max_order_by {
  characteristic_id: order_by
  description: order_by
  id: order_by
  language_id: order_by
}

"""aggregate min on columns"""
type characteristicdescription_min_fields {
  characteristic_id: Int
  description: String
  id: Int
  language_id: Int
}

"""
order by min() on columns of table "pokemon_v2_characteristicdescription"
"""
input characteristicdescription_min_order_by {
  characteristic_id: order_by
  description: order_by
  id: order_by
  language_id: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_characteristicdescription".
"""
input characteristicdescription_order_by {
  characteristic: characteristic_order_by
  characteristic_id: order_by
  description: order_by
  id: order_by
  language: language_order_by
  language_id: order_by
}

"""
select columns of table "pokemon_v2_characteristicdescription"
"""
enum characteristicdescription_select_column {
  """column name"""
  characteristic_id

  """column name"""
  description

  """column name"""
  id

  """column name"""
  language_id
}

"""aggregate stddev on columns"""
type characteristicdescription_stddev_fields {
  characteristic_id: Float
  id: Float
  language_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_characteristicdescription"
"""
input characteristicdescription_stddev_order_by {
  characteristic_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate stddev_pop on columns"""
type characteristicdescription_stddev_pop_fields {
  characteristic_id: Float
  id: Float
  language_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_characteristicdescription"
"""
input characteristicdescription_stddev_pop_order_by {
  characteristic_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate stddev_samp on columns"""
type characteristicdescription_stddev_samp_fields {
  characteristic_id: Float
  id: Float
  language_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_characteristicdescription"
"""
input characteristicdescription_stddev_samp_order_by {
  characteristic_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate sum on columns"""
type characteristicdescription_sum_fields {
  characteristic_id: Int
  id: Int
  language_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_characteristicdescription"
"""
input characteristicdescription_sum_order_by {
  characteristic_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate var_pop on columns"""
type characteristicdescription_var_pop_fields {
  characteristic_id: Float
  id: Float
  language_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_characteristicdescription"
"""
input characteristicdescription_var_pop_order_by {
  characteristic_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate var_samp on columns"""
type characteristicdescription_var_samp_fields {
  characteristic_id: Float
  id: Float
  language_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_characteristicdescription"
"""
input characteristicdescription_var_samp_order_by {
  characteristic_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate variance on columns"""
type characteristicdescription_variance_fields {
  characteristic_id: Float
  id: Float
  language_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_characteristicdescription"
"""
input characteristicdescription_variance_order_by {
  characteristic_id: order_by
  id: order_by
  language_id: order_by
}

"""
columns and relationships of "pokemon_v2_contestcombo"
"""
type contestcombo {
  """An object relationship"""
  MoveBySecondMoveId: move
  first_move_id: Int
  id: Int!

  """An object relationship"""
  move: move
  second_move_id: Int
}

"""
aggregated selection of "pokemon_v2_contestcombo"
"""
type contestcombo_aggregate {
  aggregate: contestcombo_aggregate_fields
  nodes: [contestcombo!]!
}

input contestcombo_aggregate_bool_exp {
  count: contestcombo_aggregate_bool_exp_count
}

input contestcombo_aggregate_bool_exp_count {
  arguments: [contestcombo_select_column!]
  distinct: Boolean
  filter: contestcombo_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_contestcombo"
"""
type contestcombo_aggregate_fields {
  avg: contestcombo_avg_fields
  count(columns: [contestcombo_select_column!], distinct: Boolean): Int!
  max: contestcombo_max_fields
  min: contestcombo_min_fields
  stddev: contestcombo_stddev_fields
  stddev_pop: contestcombo_stddev_pop_fields
  stddev_samp: contestcombo_stddev_samp_fields
  sum: contestcombo_sum_fields
  var_pop: contestcombo_var_pop_fields
  var_samp: contestcombo_var_samp_fields
  variance: contestcombo_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_contestcombo"
"""
input contestcombo_aggregate_order_by {
  avg: contestcombo_avg_order_by
  count: order_by
  max: contestcombo_max_order_by
  min: contestcombo_min_order_by
  stddev: contestcombo_stddev_order_by
  stddev_pop: contestcombo_stddev_pop_order_by
  stddev_samp: contestcombo_stddev_samp_order_by
  sum: contestcombo_sum_order_by
  var_pop: contestcombo_var_pop_order_by
  var_samp: contestcombo_var_samp_order_by
  variance: contestcombo_variance_order_by
}

"""aggregate avg on columns"""
type contestcombo_avg_fields {
  first_move_id: Float
  id: Float
  second_move_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_contestcombo"
"""
input contestcombo_avg_order_by {
  first_move_id: order_by
  id: order_by
  second_move_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_contestcombo". All fields are combined with a logical 'AND'.
"""
input contestcombo_bool_exp {
  MoveBySecondMoveId: move_bool_exp
  _and: [contestcombo_bool_exp!]
  _not: contestcombo_bool_exp
  _or: [contestcombo_bool_exp!]
  first_move_id: Int_comparison_exp
  id: Int_comparison_exp
  move: move_bool_exp
  second_move_id: Int_comparison_exp
}

"""aggregate max on columns"""
type contestcombo_max_fields {
  first_move_id: Int
  id: Int
  second_move_id: Int
}

"""
order by max() on columns of table "pokemon_v2_contestcombo"
"""
input contestcombo_max_order_by {
  first_move_id: order_by
  id: order_by
  second_move_id: order_by
}

"""aggregate min on columns"""
type contestcombo_min_fields {
  first_move_id: Int
  id: Int
  second_move_id: Int
}

"""
order by min() on columns of table "pokemon_v2_contestcombo"
"""
input contestcombo_min_order_by {
  first_move_id: order_by
  id: order_by
  second_move_id: order_by
}

"""Ordering options when selecting data from "pokemon_v2_contestcombo"."""
input contestcombo_order_by {
  MoveBySecondMoveId: move_order_by
  first_move_id: order_by
  id: order_by
  move: move_order_by
  second_move_id: order_by
}

"""
select columns of table "pokemon_v2_contestcombo"
"""
enum contestcombo_select_column {
  """column name"""
  first_move_id

  """column name"""
  id

  """column name"""
  second_move_id
}

"""aggregate stddev on columns"""
type contestcombo_stddev_fields {
  first_move_id: Float
  id: Float
  second_move_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_contestcombo"
"""
input contestcombo_stddev_order_by {
  first_move_id: order_by
  id: order_by
  second_move_id: order_by
}

"""aggregate stddev_pop on columns"""
type contestcombo_stddev_pop_fields {
  first_move_id: Float
  id: Float
  second_move_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_contestcombo"
"""
input contestcombo_stddev_pop_order_by {
  first_move_id: order_by
  id: order_by
  second_move_id: order_by
}

"""aggregate stddev_samp on columns"""
type contestcombo_stddev_samp_fields {
  first_move_id: Float
  id: Float
  second_move_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_contestcombo"
"""
input contestcombo_stddev_samp_order_by {
  first_move_id: order_by
  id: order_by
  second_move_id: order_by
}

"""aggregate sum on columns"""
type contestcombo_sum_fields {
  first_move_id: Int
  id: Int
  second_move_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_contestcombo"
"""
input contestcombo_sum_order_by {
  first_move_id: order_by
  id: order_by
  second_move_id: order_by
}

"""aggregate var_pop on columns"""
type contestcombo_var_pop_fields {
  first_move_id: Float
  id: Float
  second_move_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_contestcombo"
"""
input contestcombo_var_pop_order_by {
  first_move_id: order_by
  id: order_by
  second_move_id: order_by
}

"""aggregate var_samp on columns"""
type contestcombo_var_samp_fields {
  first_move_id: Float
  id: Float
  second_move_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_contestcombo"
"""
input contestcombo_var_samp_order_by {
  first_move_id: order_by
  id: order_by
  second_move_id: order_by
}

"""aggregate variance on columns"""
type contestcombo_variance_fields {
  first_move_id: Float
  id: Float
  second_move_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_contestcombo"
"""
input contestcombo_variance_order_by {
  first_move_id: order_by
  id: order_by
  second_move_id: order_by
}

"""
columns and relationships of "pokemon_v2_contesteffect"
"""
type contesteffect {
  appeal: Int!

  """An array relationship"""
  contesteffecteffecttexts(
    """distinct select on columns"""
    distinct_on: [contesteffecteffecttext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [contesteffecteffecttext_order_by!]

    """filter the rows returned"""
    where: contesteffecteffecttext_bool_exp
  ): [contesteffecteffecttext!]!

  """An aggregate relationship"""
  contesteffecteffecttexts_aggregate(
    """distinct select on columns"""
    distinct_on: [contesteffecteffecttext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [contesteffecteffecttext_order_by!]

    """filter the rows returned"""
    where: contesteffecteffecttext_bool_exp
  ): contesteffecteffecttext_aggregate!

  """An array relationship"""
  contesteffectflavortexts(
    """distinct select on columns"""
    distinct_on: [contesteffectflavortext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [contesteffectflavortext_order_by!]

    """filter the rows returned"""
    where: contesteffectflavortext_bool_exp
  ): [contesteffectflavortext!]!

  """An aggregate relationship"""
  contesteffectflavortexts_aggregate(
    """distinct select on columns"""
    distinct_on: [contesteffectflavortext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [contesteffectflavortext_order_by!]

    """filter the rows returned"""
    where: contesteffectflavortext_bool_exp
  ): contesteffectflavortext_aggregate!
  id: Int!
  jam: Int!

  """An array relationship"""
  moves(
    """distinct select on columns"""
    distinct_on: [move_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [move_order_by!]

    """filter the rows returned"""
    where: move_bool_exp
  ): [move!]!

  """An aggregate relationship"""
  moves_aggregate(
    """distinct select on columns"""
    distinct_on: [move_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [move_order_by!]

    """filter the rows returned"""
    where: move_bool_exp
  ): move_aggregate!
}

"""
aggregated selection of "pokemon_v2_contesteffect"
"""
type contesteffect_aggregate {
  aggregate: contesteffect_aggregate_fields
  nodes: [contesteffect!]!
}

"""
aggregate fields of "pokemon_v2_contesteffect"
"""
type contesteffect_aggregate_fields {
  avg: contesteffect_avg_fields
  count(columns: [contesteffect_select_column!], distinct: Boolean): Int!
  max: contesteffect_max_fields
  min: contesteffect_min_fields
  stddev: contesteffect_stddev_fields
  stddev_pop: contesteffect_stddev_pop_fields
  stddev_samp: contesteffect_stddev_samp_fields
  sum: contesteffect_sum_fields
  var_pop: contesteffect_var_pop_fields
  var_samp: contesteffect_var_samp_fields
  variance: contesteffect_variance_fields
}

"""aggregate avg on columns"""
type contesteffect_avg_fields {
  appeal: Float
  id: Float
  jam: Float
}

"""
Boolean expression to filter rows from the table "pokemon_v2_contesteffect". All fields are combined with a logical 'AND'.
"""
input contesteffect_bool_exp {
  _and: [contesteffect_bool_exp!]
  _not: contesteffect_bool_exp
  _or: [contesteffect_bool_exp!]
  appeal: Int_comparison_exp
  contesteffecteffecttexts: contesteffecteffecttext_bool_exp
  contesteffecteffecttexts_aggregate: contesteffecteffecttext_aggregate_bool_exp
  contesteffectflavortexts: contesteffectflavortext_bool_exp
  contesteffectflavortexts_aggregate: contesteffectflavortext_aggregate_bool_exp
  id: Int_comparison_exp
  jam: Int_comparison_exp
  moves: move_bool_exp
  moves_aggregate: move_aggregate_bool_exp
}

"""aggregate max on columns"""
type contesteffect_max_fields {
  appeal: Int
  id: Int
  jam: Int
}

"""aggregate min on columns"""
type contesteffect_min_fields {
  appeal: Int
  id: Int
  jam: Int
}

"""Ordering options when selecting data from "pokemon_v2_contesteffect"."""
input contesteffect_order_by {
  appeal: order_by
  contesteffecteffecttexts_aggregate: contesteffecteffecttext_aggregate_order_by
  contesteffectflavortexts_aggregate: contesteffectflavortext_aggregate_order_by
  id: order_by
  jam: order_by
  moves_aggregate: move_aggregate_order_by
}

"""
select columns of table "pokemon_v2_contesteffect"
"""
enum contesteffect_select_column {
  """column name"""
  appeal

  """column name"""
  id

  """column name"""
  jam
}

"""aggregate stddev on columns"""
type contesteffect_stddev_fields {
  appeal: Float
  id: Float
  jam: Float
}

"""aggregate stddev_pop on columns"""
type contesteffect_stddev_pop_fields {
  appeal: Float
  id: Float
  jam: Float
}

"""aggregate stddev_samp on columns"""
type contesteffect_stddev_samp_fields {
  appeal: Float
  id: Float
  jam: Float
}

"""aggregate sum on columns"""
type contesteffect_sum_fields {
  appeal: Int
  id: Int
  jam: Int
}

"""aggregate var_pop on columns"""
type contesteffect_var_pop_fields {
  appeal: Float
  id: Float
  jam: Float
}

"""aggregate var_samp on columns"""
type contesteffect_var_samp_fields {
  appeal: Float
  id: Float
  jam: Float
}

"""aggregate variance on columns"""
type contesteffect_variance_fields {
  appeal: Float
  id: Float
  jam: Float
}

"""
columns and relationships of "pokemon_v2_contesteffecteffecttext"
"""
type contesteffecteffecttext {
  contest_effect_id: Int

  """An object relationship"""
  contesteffect: contesteffect
  effect: String!
  id: Int!

  """An object relationship"""
  language: language
  language_id: Int
}

"""
aggregated selection of "pokemon_v2_contesteffecteffecttext"
"""
type contesteffecteffecttext_aggregate {
  aggregate: contesteffecteffecttext_aggregate_fields
  nodes: [contesteffecteffecttext!]!
}

input contesteffecteffecttext_aggregate_bool_exp {
  count: contesteffecteffecttext_aggregate_bool_exp_count
}

input contesteffecteffecttext_aggregate_bool_exp_count {
  arguments: [contesteffecteffecttext_select_column!]
  distinct: Boolean
  filter: contesteffecteffecttext_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_contesteffecteffecttext"
"""
type contesteffecteffecttext_aggregate_fields {
  avg: contesteffecteffecttext_avg_fields
  count(columns: [contesteffecteffecttext_select_column!], distinct: Boolean): Int!
  max: contesteffecteffecttext_max_fields
  min: contesteffecteffecttext_min_fields
  stddev: contesteffecteffecttext_stddev_fields
  stddev_pop: contesteffecteffecttext_stddev_pop_fields
  stddev_samp: contesteffecteffecttext_stddev_samp_fields
  sum: contesteffecteffecttext_sum_fields
  var_pop: contesteffecteffecttext_var_pop_fields
  var_samp: contesteffecteffecttext_var_samp_fields
  variance: contesteffecteffecttext_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_contesteffecteffecttext"
"""
input contesteffecteffecttext_aggregate_order_by {
  avg: contesteffecteffecttext_avg_order_by
  count: order_by
  max: contesteffecteffecttext_max_order_by
  min: contesteffecteffecttext_min_order_by
  stddev: contesteffecteffecttext_stddev_order_by
  stddev_pop: contesteffecteffecttext_stddev_pop_order_by
  stddev_samp: contesteffecteffecttext_stddev_samp_order_by
  sum: contesteffecteffecttext_sum_order_by
  var_pop: contesteffecteffecttext_var_pop_order_by
  var_samp: contesteffecteffecttext_var_samp_order_by
  variance: contesteffecteffecttext_variance_order_by
}

"""aggregate avg on columns"""
type contesteffecteffecttext_avg_fields {
  contest_effect_id: Float
  id: Float
  language_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_contesteffecteffecttext"
"""
input contesteffecteffecttext_avg_order_by {
  contest_effect_id: order_by
  id: order_by
  language_id: order_by
}

"""
Boolean expression to filter rows from the table
"pokemon_v2_contesteffecteffecttext". All fields are combined with a logical 'AND'.
"""
input contesteffecteffecttext_bool_exp {
  _and: [contesteffecteffecttext_bool_exp!]
  _not: contesteffecteffecttext_bool_exp
  _or: [contesteffecteffecttext_bool_exp!]
  contest_effect_id: Int_comparison_exp
  contesteffect: contesteffect_bool_exp
  effect: String_comparison_exp
  id: Int_comparison_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
}

"""aggregate max on columns"""
type contesteffecteffecttext_max_fields {
  contest_effect_id: Int
  effect: String
  id: Int
  language_id: Int
}

"""
order by max() on columns of table "pokemon_v2_contesteffecteffecttext"
"""
input contesteffecteffecttext_max_order_by {
  contest_effect_id: order_by
  effect: order_by
  id: order_by
  language_id: order_by
}

"""aggregate min on columns"""
type contesteffecteffecttext_min_fields {
  contest_effect_id: Int
  effect: String
  id: Int
  language_id: Int
}

"""
order by min() on columns of table "pokemon_v2_contesteffecteffecttext"
"""
input contesteffecteffecttext_min_order_by {
  contest_effect_id: order_by
  effect: order_by
  id: order_by
  language_id: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_contesteffecteffecttext".
"""
input contesteffecteffecttext_order_by {
  contest_effect_id: order_by
  contesteffect: contesteffect_order_by
  effect: order_by
  id: order_by
  language: language_order_by
  language_id: order_by
}

"""
select columns of table "pokemon_v2_contesteffecteffecttext"
"""
enum contesteffecteffecttext_select_column {
  """column name"""
  contest_effect_id

  """column name"""
  effect

  """column name"""
  id

  """column name"""
  language_id
}

"""aggregate stddev on columns"""
type contesteffecteffecttext_stddev_fields {
  contest_effect_id: Float
  id: Float
  language_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_contesteffecteffecttext"
"""
input contesteffecteffecttext_stddev_order_by {
  contest_effect_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate stddev_pop on columns"""
type contesteffecteffecttext_stddev_pop_fields {
  contest_effect_id: Float
  id: Float
  language_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_contesteffecteffecttext"
"""
input contesteffecteffecttext_stddev_pop_order_by {
  contest_effect_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate stddev_samp on columns"""
type contesteffecteffecttext_stddev_samp_fields {
  contest_effect_id: Float
  id: Float
  language_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_contesteffecteffecttext"
"""
input contesteffecteffecttext_stddev_samp_order_by {
  contest_effect_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate sum on columns"""
type contesteffecteffecttext_sum_fields {
  contest_effect_id: Int
  id: Int
  language_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_contesteffecteffecttext"
"""
input contesteffecteffecttext_sum_order_by {
  contest_effect_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate var_pop on columns"""
type contesteffecteffecttext_var_pop_fields {
  contest_effect_id: Float
  id: Float
  language_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_contesteffecteffecttext"
"""
input contesteffecteffecttext_var_pop_order_by {
  contest_effect_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate var_samp on columns"""
type contesteffecteffecttext_var_samp_fields {
  contest_effect_id: Float
  id: Float
  language_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_contesteffecteffecttext"
"""
input contesteffecteffecttext_var_samp_order_by {
  contest_effect_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate variance on columns"""
type contesteffecteffecttext_variance_fields {
  contest_effect_id: Float
  id: Float
  language_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_contesteffecteffecttext"
"""
input contesteffecteffecttext_variance_order_by {
  contest_effect_id: order_by
  id: order_by
  language_id: order_by
}

"""
columns and relationships of "pokemon_v2_contesteffectflavortext"
"""
type contesteffectflavortext {
  contest_effect_id: Int

  """An object relationship"""
  contesteffect: contesteffect
  flavor_text: String!
  id: Int!

  """An object relationship"""
  language: language
  language_id: Int
}

"""
aggregated selection of "pokemon_v2_contesteffectflavortext"
"""
type contesteffectflavortext_aggregate {
  aggregate: contesteffectflavortext_aggregate_fields
  nodes: [contesteffectflavortext!]!
}

input contesteffectflavortext_aggregate_bool_exp {
  count: contesteffectflavortext_aggregate_bool_exp_count
}

input contesteffectflavortext_aggregate_bool_exp_count {
  arguments: [contesteffectflavortext_select_column!]
  distinct: Boolean
  filter: contesteffectflavortext_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_contesteffectflavortext"
"""
type contesteffectflavortext_aggregate_fields {
  avg: contesteffectflavortext_avg_fields
  count(columns: [contesteffectflavortext_select_column!], distinct: Boolean): Int!
  max: contesteffectflavortext_max_fields
  min: contesteffectflavortext_min_fields
  stddev: contesteffectflavortext_stddev_fields
  stddev_pop: contesteffectflavortext_stddev_pop_fields
  stddev_samp: contesteffectflavortext_stddev_samp_fields
  sum: contesteffectflavortext_sum_fields
  var_pop: contesteffectflavortext_var_pop_fields
  var_samp: contesteffectflavortext_var_samp_fields
  variance: contesteffectflavortext_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_contesteffectflavortext"
"""
input contesteffectflavortext_aggregate_order_by {
  avg: contesteffectflavortext_avg_order_by
  count: order_by
  max: contesteffectflavortext_max_order_by
  min: contesteffectflavortext_min_order_by
  stddev: contesteffectflavortext_stddev_order_by
  stddev_pop: contesteffectflavortext_stddev_pop_order_by
  stddev_samp: contesteffectflavortext_stddev_samp_order_by
  sum: contesteffectflavortext_sum_order_by
  var_pop: contesteffectflavortext_var_pop_order_by
  var_samp: contesteffectflavortext_var_samp_order_by
  variance: contesteffectflavortext_variance_order_by
}

"""aggregate avg on columns"""
type contesteffectflavortext_avg_fields {
  contest_effect_id: Float
  id: Float
  language_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_contesteffectflavortext"
"""
input contesteffectflavortext_avg_order_by {
  contest_effect_id: order_by
  id: order_by
  language_id: order_by
}

"""
Boolean expression to filter rows from the table
"pokemon_v2_contesteffectflavortext". All fields are combined with a logical 'AND'.
"""
input contesteffectflavortext_bool_exp {
  _and: [contesteffectflavortext_bool_exp!]
  _not: contesteffectflavortext_bool_exp
  _or: [contesteffectflavortext_bool_exp!]
  contest_effect_id: Int_comparison_exp
  contesteffect: contesteffect_bool_exp
  flavor_text: String_comparison_exp
  id: Int_comparison_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
}

"""aggregate max on columns"""
type contesteffectflavortext_max_fields {
  contest_effect_id: Int
  flavor_text: String
  id: Int
  language_id: Int
}

"""
order by max() on columns of table "pokemon_v2_contesteffectflavortext"
"""
input contesteffectflavortext_max_order_by {
  contest_effect_id: order_by
  flavor_text: order_by
  id: order_by
  language_id: order_by
}

"""aggregate min on columns"""
type contesteffectflavortext_min_fields {
  contest_effect_id: Int
  flavor_text: String
  id: Int
  language_id: Int
}

"""
order by min() on columns of table "pokemon_v2_contesteffectflavortext"
"""
input contesteffectflavortext_min_order_by {
  contest_effect_id: order_by
  flavor_text: order_by
  id: order_by
  language_id: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_contesteffectflavortext".
"""
input contesteffectflavortext_order_by {
  contest_effect_id: order_by
  contesteffect: contesteffect_order_by
  flavor_text: order_by
  id: order_by
  language: language_order_by
  language_id: order_by
}

"""
select columns of table "pokemon_v2_contesteffectflavortext"
"""
enum contesteffectflavortext_select_column {
  """column name"""
  contest_effect_id

  """column name"""
  flavor_text

  """column name"""
  id

  """column name"""
  language_id
}

"""aggregate stddev on columns"""
type contesteffectflavortext_stddev_fields {
  contest_effect_id: Float
  id: Float
  language_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_contesteffectflavortext"
"""
input contesteffectflavortext_stddev_order_by {
  contest_effect_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate stddev_pop on columns"""
type contesteffectflavortext_stddev_pop_fields {
  contest_effect_id: Float
  id: Float
  language_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_contesteffectflavortext"
"""
input contesteffectflavortext_stddev_pop_order_by {
  contest_effect_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate stddev_samp on columns"""
type contesteffectflavortext_stddev_samp_fields {
  contest_effect_id: Float
  id: Float
  language_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_contesteffectflavortext"
"""
input contesteffectflavortext_stddev_samp_order_by {
  contest_effect_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate sum on columns"""
type contesteffectflavortext_sum_fields {
  contest_effect_id: Int
  id: Int
  language_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_contesteffectflavortext"
"""
input contesteffectflavortext_sum_order_by {
  contest_effect_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate var_pop on columns"""
type contesteffectflavortext_var_pop_fields {
  contest_effect_id: Float
  id: Float
  language_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_contesteffectflavortext"
"""
input contesteffectflavortext_var_pop_order_by {
  contest_effect_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate var_samp on columns"""
type contesteffectflavortext_var_samp_fields {
  contest_effect_id: Float
  id: Float
  language_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_contesteffectflavortext"
"""
input contesteffectflavortext_var_samp_order_by {
  contest_effect_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate variance on columns"""
type contesteffectflavortext_variance_fields {
  contest_effect_id: Float
  id: Float
  language_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_contesteffectflavortext"
"""
input contesteffectflavortext_variance_order_by {
  contest_effect_id: order_by
  id: order_by
  language_id: order_by
}

"""
columns and relationships of "pokemon_v2_contesttype"
"""
type contesttype {
  """An object relationship"""
  berryflavor: berryflavor

  """An array relationship"""
  berryflavors(
    """distinct select on columns"""
    distinct_on: [berryflavor_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [berryflavor_order_by!]

    """filter the rows returned"""
    where: berryflavor_bool_exp
  ): [berryflavor!]!

  """An aggregate relationship"""
  berryflavors_aggregate(
    """distinct select on columns"""
    distinct_on: [berryflavor_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [berryflavor_order_by!]

    """filter the rows returned"""
    where: berryflavor_bool_exp
  ): berryflavor_aggregate!

  """An array relationship"""
  contesttypenames(
    """distinct select on columns"""
    distinct_on: [contesttypename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [contesttypename_order_by!]

    """filter the rows returned"""
    where: contesttypename_bool_exp
  ): [contesttypename!]!

  """An aggregate relationship"""
  contesttypenames_aggregate(
    """distinct select on columns"""
    distinct_on: [contesttypename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [contesttypename_order_by!]

    """filter the rows returned"""
    where: contesttypename_bool_exp
  ): contesttypename_aggregate!
  id: Int!

  """An array relationship"""
  moves(
    """distinct select on columns"""
    distinct_on: [move_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [move_order_by!]

    """filter the rows returned"""
    where: move_bool_exp
  ): [move!]!

  """An aggregate relationship"""
  moves_aggregate(
    """distinct select on columns"""
    distinct_on: [move_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [move_order_by!]

    """filter the rows returned"""
    where: move_bool_exp
  ): move_aggregate!
  name: String!
}

"""
aggregated selection of "pokemon_v2_contesttype"
"""
type contesttype_aggregate {
  aggregate: contesttype_aggregate_fields
  nodes: [contesttype!]!
}

"""
aggregate fields of "pokemon_v2_contesttype"
"""
type contesttype_aggregate_fields {
  avg: contesttype_avg_fields
  count(columns: [contesttype_select_column!], distinct: Boolean): Int!
  max: contesttype_max_fields
  min: contesttype_min_fields
  stddev: contesttype_stddev_fields
  stddev_pop: contesttype_stddev_pop_fields
  stddev_samp: contesttype_stddev_samp_fields
  sum: contesttype_sum_fields
  var_pop: contesttype_var_pop_fields
  var_samp: contesttype_var_samp_fields
  variance: contesttype_variance_fields
}

"""aggregate avg on columns"""
type contesttype_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "pokemon_v2_contesttype". All fields are combined with a logical 'AND'.
"""
input contesttype_bool_exp {
  _and: [contesttype_bool_exp!]
  _not: contesttype_bool_exp
  _or: [contesttype_bool_exp!]
  berryflavor: berryflavor_bool_exp
  berryflavors: berryflavor_bool_exp
  berryflavors_aggregate: berryflavor_aggregate_bool_exp
  contesttypenames: contesttypename_bool_exp
  contesttypenames_aggregate: contesttypename_aggregate_bool_exp
  id: Int_comparison_exp
  moves: move_bool_exp
  moves_aggregate: move_aggregate_bool_exp
  name: String_comparison_exp
}

"""aggregate max on columns"""
type contesttype_max_fields {
  id: Int
  name: String
}

"""aggregate min on columns"""
type contesttype_min_fields {
  id: Int
  name: String
}

"""Ordering options when selecting data from "pokemon_v2_contesttype"."""
input contesttype_order_by {
  berryflavor: berryflavor_order_by
  berryflavors_aggregate: berryflavor_aggregate_order_by
  contesttypenames_aggregate: contesttypename_aggregate_order_by
  id: order_by
  moves_aggregate: move_aggregate_order_by
  name: order_by
}

"""
select columns of table "pokemon_v2_contesttype"
"""
enum contesttype_select_column {
  """column name"""
  id

  """column name"""
  name
}

"""aggregate stddev on columns"""
type contesttype_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type contesttype_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type contesttype_stddev_samp_fields {
  id: Float
}

"""aggregate sum on columns"""
type contesttype_sum_fields {
  id: Int
}

"""aggregate var_pop on columns"""
type contesttype_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type contesttype_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type contesttype_variance_fields {
  id: Float
}

"""
columns and relationships of "pokemon_v2_contesttypename"
"""
type contesttypename {
  color: String!
  contest_type_id: Int

  """An object relationship"""
  contesttype: contesttype
  flavor: String!
  id: Int!

  """An object relationship"""
  language: language
  language_id: Int
  name: String!
}

"""
aggregated selection of "pokemon_v2_contesttypename"
"""
type contesttypename_aggregate {
  aggregate: contesttypename_aggregate_fields
  nodes: [contesttypename!]!
}

input contesttypename_aggregate_bool_exp {
  count: contesttypename_aggregate_bool_exp_count
}

input contesttypename_aggregate_bool_exp_count {
  arguments: [contesttypename_select_column!]
  distinct: Boolean
  filter: contesttypename_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_contesttypename"
"""
type contesttypename_aggregate_fields {
  avg: contesttypename_avg_fields
  count(columns: [contesttypename_select_column!], distinct: Boolean): Int!
  max: contesttypename_max_fields
  min: contesttypename_min_fields
  stddev: contesttypename_stddev_fields
  stddev_pop: contesttypename_stddev_pop_fields
  stddev_samp: contesttypename_stddev_samp_fields
  sum: contesttypename_sum_fields
  var_pop: contesttypename_var_pop_fields
  var_samp: contesttypename_var_samp_fields
  variance: contesttypename_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_contesttypename"
"""
input contesttypename_aggregate_order_by {
  avg: contesttypename_avg_order_by
  count: order_by
  max: contesttypename_max_order_by
  min: contesttypename_min_order_by
  stddev: contesttypename_stddev_order_by
  stddev_pop: contesttypename_stddev_pop_order_by
  stddev_samp: contesttypename_stddev_samp_order_by
  sum: contesttypename_sum_order_by
  var_pop: contesttypename_var_pop_order_by
  var_samp: contesttypename_var_samp_order_by
  variance: contesttypename_variance_order_by
}

"""aggregate avg on columns"""
type contesttypename_avg_fields {
  contest_type_id: Float
  id: Float
  language_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_contesttypename"
"""
input contesttypename_avg_order_by {
  contest_type_id: order_by
  id: order_by
  language_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_contesttypename". All fields are combined with a logical 'AND'.
"""
input contesttypename_bool_exp {
  _and: [contesttypename_bool_exp!]
  _not: contesttypename_bool_exp
  _or: [contesttypename_bool_exp!]
  color: String_comparison_exp
  contest_type_id: Int_comparison_exp
  contesttype: contesttype_bool_exp
  flavor: String_comparison_exp
  id: Int_comparison_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
  name: String_comparison_exp
}

"""aggregate max on columns"""
type contesttypename_max_fields {
  color: String
  contest_type_id: Int
  flavor: String
  id: Int
  language_id: Int
  name: String
}

"""
order by max() on columns of table "pokemon_v2_contesttypename"
"""
input contesttypename_max_order_by {
  color: order_by
  contest_type_id: order_by
  flavor: order_by
  id: order_by
  language_id: order_by
  name: order_by
}

"""aggregate min on columns"""
type contesttypename_min_fields {
  color: String
  contest_type_id: Int
  flavor: String
  id: Int
  language_id: Int
  name: String
}

"""
order by min() on columns of table "pokemon_v2_contesttypename"
"""
input contesttypename_min_order_by {
  color: order_by
  contest_type_id: order_by
  flavor: order_by
  id: order_by
  language_id: order_by
  name: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_contesttypename".
"""
input contesttypename_order_by {
  color: order_by
  contest_type_id: order_by
  contesttype: contesttype_order_by
  flavor: order_by
  id: order_by
  language: language_order_by
  language_id: order_by
  name: order_by
}

"""
select columns of table "pokemon_v2_contesttypename"
"""
enum contesttypename_select_column {
  """column name"""
  color

  """column name"""
  contest_type_id

  """column name"""
  flavor

  """column name"""
  id

  """column name"""
  language_id

  """column name"""
  name
}

"""aggregate stddev on columns"""
type contesttypename_stddev_fields {
  contest_type_id: Float
  id: Float
  language_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_contesttypename"
"""
input contesttypename_stddev_order_by {
  contest_type_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate stddev_pop on columns"""
type contesttypename_stddev_pop_fields {
  contest_type_id: Float
  id: Float
  language_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_contesttypename"
"""
input contesttypename_stddev_pop_order_by {
  contest_type_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate stddev_samp on columns"""
type contesttypename_stddev_samp_fields {
  contest_type_id: Float
  id: Float
  language_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_contesttypename"
"""
input contesttypename_stddev_samp_order_by {
  contest_type_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate sum on columns"""
type contesttypename_sum_fields {
  contest_type_id: Int
  id: Int
  language_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_contesttypename"
"""
input contesttypename_sum_order_by {
  contest_type_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate var_pop on columns"""
type contesttypename_var_pop_fields {
  contest_type_id: Float
  id: Float
  language_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_contesttypename"
"""
input contesttypename_var_pop_order_by {
  contest_type_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate var_samp on columns"""
type contesttypename_var_samp_fields {
  contest_type_id: Float
  id: Float
  language_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_contesttypename"
"""
input contesttypename_var_samp_order_by {
  contest_type_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate variance on columns"""
type contesttypename_variance_fields {
  contest_type_id: Float
  id: Float
  language_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_contesttypename"
"""
input contesttypename_variance_order_by {
  contest_type_id: order_by
  id: order_by
  language_id: order_by
}

"""
columns and relationships of "pokemon_v2_egggroup"
"""
type egggroup {
  """An array relationship"""
  egggroupnames(
    """distinct select on columns"""
    distinct_on: [egggroupname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [egggroupname_order_by!]

    """filter the rows returned"""
    where: egggroupname_bool_exp
  ): [egggroupname!]!

  """An aggregate relationship"""
  egggroupnames_aggregate(
    """distinct select on columns"""
    distinct_on: [egggroupname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [egggroupname_order_by!]

    """filter the rows returned"""
    where: egggroupname_bool_exp
  ): egggroupname_aggregate!
  id: Int!
  name: String!

  """An array relationship"""
  pokemonegggroups(
    """distinct select on columns"""
    distinct_on: [pokemonegggroup_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonegggroup_order_by!]

    """filter the rows returned"""
    where: pokemonegggroup_bool_exp
  ): [pokemonegggroup!]!

  """An aggregate relationship"""
  pokemonegggroups_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonegggroup_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonegggroup_order_by!]

    """filter the rows returned"""
    where: pokemonegggroup_bool_exp
  ): pokemonegggroup_aggregate!
}

"""
aggregated selection of "pokemon_v2_egggroup"
"""
type egggroup_aggregate {
  aggregate: egggroup_aggregate_fields
  nodes: [egggroup!]!
}

"""
aggregate fields of "pokemon_v2_egggroup"
"""
type egggroup_aggregate_fields {
  avg: egggroup_avg_fields
  count(columns: [egggroup_select_column!], distinct: Boolean): Int!
  max: egggroup_max_fields
  min: egggroup_min_fields
  stddev: egggroup_stddev_fields
  stddev_pop: egggroup_stddev_pop_fields
  stddev_samp: egggroup_stddev_samp_fields
  sum: egggroup_sum_fields
  var_pop: egggroup_var_pop_fields
  var_samp: egggroup_var_samp_fields
  variance: egggroup_variance_fields
}

"""aggregate avg on columns"""
type egggroup_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "pokemon_v2_egggroup". All fields are combined with a logical 'AND'.
"""
input egggroup_bool_exp {
  _and: [egggroup_bool_exp!]
  _not: egggroup_bool_exp
  _or: [egggroup_bool_exp!]
  egggroupnames: egggroupname_bool_exp
  egggroupnames_aggregate: egggroupname_aggregate_bool_exp
  id: Int_comparison_exp
  name: String_comparison_exp
  pokemonegggroups: pokemonegggroup_bool_exp
  pokemonegggroups_aggregate: pokemonegggroup_aggregate_bool_exp
}

"""aggregate max on columns"""
type egggroup_max_fields {
  id: Int
  name: String
}

"""aggregate min on columns"""
type egggroup_min_fields {
  id: Int
  name: String
}

"""Ordering options when selecting data from "pokemon_v2_egggroup"."""
input egggroup_order_by {
  egggroupnames_aggregate: egggroupname_aggregate_order_by
  id: order_by
  name: order_by
  pokemonegggroups_aggregate: pokemonegggroup_aggregate_order_by
}

"""
select columns of table "pokemon_v2_egggroup"
"""
enum egggroup_select_column {
  """column name"""
  id

  """column name"""
  name
}

"""aggregate stddev on columns"""
type egggroup_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type egggroup_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type egggroup_stddev_samp_fields {
  id: Float
}

"""aggregate sum on columns"""
type egggroup_sum_fields {
  id: Int
}

"""aggregate var_pop on columns"""
type egggroup_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type egggroup_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type egggroup_variance_fields {
  id: Float
}

"""
columns and relationships of "pokemon_v2_egggroupname"
"""
type egggroupname {
  egg_group_id: Int

  """An object relationship"""
  egggroup: egggroup
  id: Int!

  """An object relationship"""
  language: language
  language_id: Int
  name: String!
}

"""
aggregated selection of "pokemon_v2_egggroupname"
"""
type egggroupname_aggregate {
  aggregate: egggroupname_aggregate_fields
  nodes: [egggroupname!]!
}

input egggroupname_aggregate_bool_exp {
  count: egggroupname_aggregate_bool_exp_count
}

input egggroupname_aggregate_bool_exp_count {
  arguments: [egggroupname_select_column!]
  distinct: Boolean
  filter: egggroupname_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_egggroupname"
"""
type egggroupname_aggregate_fields {
  avg: egggroupname_avg_fields
  count(columns: [egggroupname_select_column!], distinct: Boolean): Int!
  max: egggroupname_max_fields
  min: egggroupname_min_fields
  stddev: egggroupname_stddev_fields
  stddev_pop: egggroupname_stddev_pop_fields
  stddev_samp: egggroupname_stddev_samp_fields
  sum: egggroupname_sum_fields
  var_pop: egggroupname_var_pop_fields
  var_samp: egggroupname_var_samp_fields
  variance: egggroupname_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_egggroupname"
"""
input egggroupname_aggregate_order_by {
  avg: egggroupname_avg_order_by
  count: order_by
  max: egggroupname_max_order_by
  min: egggroupname_min_order_by
  stddev: egggroupname_stddev_order_by
  stddev_pop: egggroupname_stddev_pop_order_by
  stddev_samp: egggroupname_stddev_samp_order_by
  sum: egggroupname_sum_order_by
  var_pop: egggroupname_var_pop_order_by
  var_samp: egggroupname_var_samp_order_by
  variance: egggroupname_variance_order_by
}

"""aggregate avg on columns"""
type egggroupname_avg_fields {
  egg_group_id: Float
  id: Float
  language_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_egggroupname"
"""
input egggroupname_avg_order_by {
  egg_group_id: order_by
  id: order_by
  language_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_egggroupname". All fields are combined with a logical 'AND'.
"""
input egggroupname_bool_exp {
  _and: [egggroupname_bool_exp!]
  _not: egggroupname_bool_exp
  _or: [egggroupname_bool_exp!]
  egg_group_id: Int_comparison_exp
  egggroup: egggroup_bool_exp
  id: Int_comparison_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
  name: String_comparison_exp
}

"""aggregate max on columns"""
type egggroupname_max_fields {
  egg_group_id: Int
  id: Int
  language_id: Int
  name: String
}

"""
order by max() on columns of table "pokemon_v2_egggroupname"
"""
input egggroupname_max_order_by {
  egg_group_id: order_by
  id: order_by
  language_id: order_by
  name: order_by
}

"""aggregate min on columns"""
type egggroupname_min_fields {
  egg_group_id: Int
  id: Int
  language_id: Int
  name: String
}

"""
order by min() on columns of table "pokemon_v2_egggroupname"
"""
input egggroupname_min_order_by {
  egg_group_id: order_by
  id: order_by
  language_id: order_by
  name: order_by
}

"""Ordering options when selecting data from "pokemon_v2_egggroupname"."""
input egggroupname_order_by {
  egg_group_id: order_by
  egggroup: egggroup_order_by
  id: order_by
  language: language_order_by
  language_id: order_by
  name: order_by
}

"""
select columns of table "pokemon_v2_egggroupname"
"""
enum egggroupname_select_column {
  """column name"""
  egg_group_id

  """column name"""
  id

  """column name"""
  language_id

  """column name"""
  name
}

"""aggregate stddev on columns"""
type egggroupname_stddev_fields {
  egg_group_id: Float
  id: Float
  language_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_egggroupname"
"""
input egggroupname_stddev_order_by {
  egg_group_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate stddev_pop on columns"""
type egggroupname_stddev_pop_fields {
  egg_group_id: Float
  id: Float
  language_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_egggroupname"
"""
input egggroupname_stddev_pop_order_by {
  egg_group_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate stddev_samp on columns"""
type egggroupname_stddev_samp_fields {
  egg_group_id: Float
  id: Float
  language_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_egggroupname"
"""
input egggroupname_stddev_samp_order_by {
  egg_group_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate sum on columns"""
type egggroupname_sum_fields {
  egg_group_id: Int
  id: Int
  language_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_egggroupname"
"""
input egggroupname_sum_order_by {
  egg_group_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate var_pop on columns"""
type egggroupname_var_pop_fields {
  egg_group_id: Float
  id: Float
  language_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_egggroupname"
"""
input egggroupname_var_pop_order_by {
  egg_group_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate var_samp on columns"""
type egggroupname_var_samp_fields {
  egg_group_id: Float
  id: Float
  language_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_egggroupname"
"""
input egggroupname_var_samp_order_by {
  egg_group_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate variance on columns"""
type egggroupname_variance_fields {
  egg_group_id: Float
  id: Float
  language_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_egggroupname"
"""
input egggroupname_variance_order_by {
  egg_group_id: order_by
  id: order_by
  language_id: order_by
}

"""
columns and relationships of "pokemon_v2_encounter"
"""
type encounter {
  encounter_slot_id: Int

  """An array relationship"""
  encounterconditionvaluemaps(
    """distinct select on columns"""
    distinct_on: [encounterconditionvaluemap_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [encounterconditionvaluemap_order_by!]

    """filter the rows returned"""
    where: encounterconditionvaluemap_bool_exp
  ): [encounterconditionvaluemap!]!

  """An aggregate relationship"""
  encounterconditionvaluemaps_aggregate(
    """distinct select on columns"""
    distinct_on: [encounterconditionvaluemap_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [encounterconditionvaluemap_order_by!]

    """filter the rows returned"""
    where: encounterconditionvaluemap_bool_exp
  ): encounterconditionvaluemap_aggregate!

  """An object relationship"""
  encounterslot: encounterslot
  id: Int!
  location_area_id: Int

  """An object relationship"""
  locationarea: locationarea
  max_level: Int!
  min_level: Int!

  """An object relationship"""
  pokemon: pokemon
  pokemon_id: Int

  """An object relationship"""
  version: version
  version_id: Int
}

"""
aggregated selection of "pokemon_v2_encounter"
"""
type encounter_aggregate {
  aggregate: encounter_aggregate_fields
  nodes: [encounter!]!
}

input encounter_aggregate_bool_exp {
  count: encounter_aggregate_bool_exp_count
}

input encounter_aggregate_bool_exp_count {
  arguments: [encounter_select_column!]
  distinct: Boolean
  filter: encounter_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_encounter"
"""
type encounter_aggregate_fields {
  avg: encounter_avg_fields
  count(columns: [encounter_select_column!], distinct: Boolean): Int!
  max: encounter_max_fields
  min: encounter_min_fields
  stddev: encounter_stddev_fields
  stddev_pop: encounter_stddev_pop_fields
  stddev_samp: encounter_stddev_samp_fields
  sum: encounter_sum_fields
  var_pop: encounter_var_pop_fields
  var_samp: encounter_var_samp_fields
  variance: encounter_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_encounter"
"""
input encounter_aggregate_order_by {
  avg: encounter_avg_order_by
  count: order_by
  max: encounter_max_order_by
  min: encounter_min_order_by
  stddev: encounter_stddev_order_by
  stddev_pop: encounter_stddev_pop_order_by
  stddev_samp: encounter_stddev_samp_order_by
  sum: encounter_sum_order_by
  var_pop: encounter_var_pop_order_by
  var_samp: encounter_var_samp_order_by
  variance: encounter_variance_order_by
}

"""aggregate avg on columns"""
type encounter_avg_fields {
  encounter_slot_id: Float
  id: Float
  location_area_id: Float
  max_level: Float
  min_level: Float
  pokemon_id: Float
  version_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_encounter"
"""
input encounter_avg_order_by {
  encounter_slot_id: order_by
  id: order_by
  location_area_id: order_by
  max_level: order_by
  min_level: order_by
  pokemon_id: order_by
  version_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_encounter". All fields are combined with a logical 'AND'.
"""
input encounter_bool_exp {
  _and: [encounter_bool_exp!]
  _not: encounter_bool_exp
  _or: [encounter_bool_exp!]
  encounter_slot_id: Int_comparison_exp
  encounterconditionvaluemaps: encounterconditionvaluemap_bool_exp
  encounterconditionvaluemaps_aggregate: encounterconditionvaluemap_aggregate_bool_exp
  encounterslot: encounterslot_bool_exp
  id: Int_comparison_exp
  location_area_id: Int_comparison_exp
  locationarea: locationarea_bool_exp
  max_level: Int_comparison_exp
  min_level: Int_comparison_exp
  pokemon: pokemon_bool_exp
  pokemon_id: Int_comparison_exp
  version: version_bool_exp
  version_id: Int_comparison_exp
}

"""aggregate max on columns"""
type encounter_max_fields {
  encounter_slot_id: Int
  id: Int
  location_area_id: Int
  max_level: Int
  min_level: Int
  pokemon_id: Int
  version_id: Int
}

"""
order by max() on columns of table "pokemon_v2_encounter"
"""
input encounter_max_order_by {
  encounter_slot_id: order_by
  id: order_by
  location_area_id: order_by
  max_level: order_by
  min_level: order_by
  pokemon_id: order_by
  version_id: order_by
}

"""aggregate min on columns"""
type encounter_min_fields {
  encounter_slot_id: Int
  id: Int
  location_area_id: Int
  max_level: Int
  min_level: Int
  pokemon_id: Int
  version_id: Int
}

"""
order by min() on columns of table "pokemon_v2_encounter"
"""
input encounter_min_order_by {
  encounter_slot_id: order_by
  id: order_by
  location_area_id: order_by
  max_level: order_by
  min_level: order_by
  pokemon_id: order_by
  version_id: order_by
}

"""Ordering options when selecting data from "pokemon_v2_encounter"."""
input encounter_order_by {
  encounter_slot_id: order_by
  encounterconditionvaluemaps_aggregate: encounterconditionvaluemap_aggregate_order_by
  encounterslot: encounterslot_order_by
  id: order_by
  location_area_id: order_by
  locationarea: locationarea_order_by
  max_level: order_by
  min_level: order_by
  pokemon: pokemon_order_by
  pokemon_id: order_by
  version: version_order_by
  version_id: order_by
}

"""
select columns of table "pokemon_v2_encounter"
"""
enum encounter_select_column {
  """column name"""
  encounter_slot_id

  """column name"""
  id

  """column name"""
  location_area_id

  """column name"""
  max_level

  """column name"""
  min_level

  """column name"""
  pokemon_id

  """column name"""
  version_id
}

"""aggregate stddev on columns"""
type encounter_stddev_fields {
  encounter_slot_id: Float
  id: Float
  location_area_id: Float
  max_level: Float
  min_level: Float
  pokemon_id: Float
  version_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_encounter"
"""
input encounter_stddev_order_by {
  encounter_slot_id: order_by
  id: order_by
  location_area_id: order_by
  max_level: order_by
  min_level: order_by
  pokemon_id: order_by
  version_id: order_by
}

"""aggregate stddev_pop on columns"""
type encounter_stddev_pop_fields {
  encounter_slot_id: Float
  id: Float
  location_area_id: Float
  max_level: Float
  min_level: Float
  pokemon_id: Float
  version_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_encounter"
"""
input encounter_stddev_pop_order_by {
  encounter_slot_id: order_by
  id: order_by
  location_area_id: order_by
  max_level: order_by
  min_level: order_by
  pokemon_id: order_by
  version_id: order_by
}

"""aggregate stddev_samp on columns"""
type encounter_stddev_samp_fields {
  encounter_slot_id: Float
  id: Float
  location_area_id: Float
  max_level: Float
  min_level: Float
  pokemon_id: Float
  version_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_encounter"
"""
input encounter_stddev_samp_order_by {
  encounter_slot_id: order_by
  id: order_by
  location_area_id: order_by
  max_level: order_by
  min_level: order_by
  pokemon_id: order_by
  version_id: order_by
}

"""aggregate sum on columns"""
type encounter_sum_fields {
  encounter_slot_id: Int
  id: Int
  location_area_id: Int
  max_level: Int
  min_level: Int
  pokemon_id: Int
  version_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_encounter"
"""
input encounter_sum_order_by {
  encounter_slot_id: order_by
  id: order_by
  location_area_id: order_by
  max_level: order_by
  min_level: order_by
  pokemon_id: order_by
  version_id: order_by
}

"""aggregate var_pop on columns"""
type encounter_var_pop_fields {
  encounter_slot_id: Float
  id: Float
  location_area_id: Float
  max_level: Float
  min_level: Float
  pokemon_id: Float
  version_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_encounter"
"""
input encounter_var_pop_order_by {
  encounter_slot_id: order_by
  id: order_by
  location_area_id: order_by
  max_level: order_by
  min_level: order_by
  pokemon_id: order_by
  version_id: order_by
}

"""aggregate var_samp on columns"""
type encounter_var_samp_fields {
  encounter_slot_id: Float
  id: Float
  location_area_id: Float
  max_level: Float
  min_level: Float
  pokemon_id: Float
  version_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_encounter"
"""
input encounter_var_samp_order_by {
  encounter_slot_id: order_by
  id: order_by
  location_area_id: order_by
  max_level: order_by
  min_level: order_by
  pokemon_id: order_by
  version_id: order_by
}

"""aggregate variance on columns"""
type encounter_variance_fields {
  encounter_slot_id: Float
  id: Float
  location_area_id: Float
  max_level: Float
  min_level: Float
  pokemon_id: Float
  version_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_encounter"
"""
input encounter_variance_order_by {
  encounter_slot_id: order_by
  id: order_by
  location_area_id: order_by
  max_level: order_by
  min_level: order_by
  pokemon_id: order_by
  version_id: order_by
}

"""
columns and relationships of "pokemon_v2_encountercondition"
"""
type encountercondition {
  """An array relationship"""
  encounterconditionnames(
    """distinct select on columns"""
    distinct_on: [encounterconditionname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [encounterconditionname_order_by!]

    """filter the rows returned"""
    where: encounterconditionname_bool_exp
  ): [encounterconditionname!]!

  """An aggregate relationship"""
  encounterconditionnames_aggregate(
    """distinct select on columns"""
    distinct_on: [encounterconditionname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [encounterconditionname_order_by!]

    """filter the rows returned"""
    where: encounterconditionname_bool_exp
  ): encounterconditionname_aggregate!

  """An array relationship"""
  encounterconditionvalues(
    """distinct select on columns"""
    distinct_on: [encounterconditionvalue_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [encounterconditionvalue_order_by!]

    """filter the rows returned"""
    where: encounterconditionvalue_bool_exp
  ): [encounterconditionvalue!]!

  """An aggregate relationship"""
  encounterconditionvalues_aggregate(
    """distinct select on columns"""
    distinct_on: [encounterconditionvalue_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [encounterconditionvalue_order_by!]

    """filter the rows returned"""
    where: encounterconditionvalue_bool_exp
  ): encounterconditionvalue_aggregate!
  id: Int!
  name: String!
}

"""
aggregated selection of "pokemon_v2_encountercondition"
"""
type encountercondition_aggregate {
  aggregate: encountercondition_aggregate_fields
  nodes: [encountercondition!]!
}

"""
aggregate fields of "pokemon_v2_encountercondition"
"""
type encountercondition_aggregate_fields {
  avg: encountercondition_avg_fields
  count(columns: [encountercondition_select_column!], distinct: Boolean): Int!
  max: encountercondition_max_fields
  min: encountercondition_min_fields
  stddev: encountercondition_stddev_fields
  stddev_pop: encountercondition_stddev_pop_fields
  stddev_samp: encountercondition_stddev_samp_fields
  sum: encountercondition_sum_fields
  var_pop: encountercondition_var_pop_fields
  var_samp: encountercondition_var_samp_fields
  variance: encountercondition_variance_fields
}

"""aggregate avg on columns"""
type encountercondition_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table
"pokemon_v2_encountercondition". All fields are combined with a logical 'AND'.
"""
input encountercondition_bool_exp {
  _and: [encountercondition_bool_exp!]
  _not: encountercondition_bool_exp
  _or: [encountercondition_bool_exp!]
  encounterconditionnames: encounterconditionname_bool_exp
  encounterconditionnames_aggregate: encounterconditionname_aggregate_bool_exp
  encounterconditionvalues: encounterconditionvalue_bool_exp
  encounterconditionvalues_aggregate: encounterconditionvalue_aggregate_bool_exp
  id: Int_comparison_exp
  name: String_comparison_exp
}

"""aggregate max on columns"""
type encountercondition_max_fields {
  id: Int
  name: String
}

"""aggregate min on columns"""
type encountercondition_min_fields {
  id: Int
  name: String
}

"""
Ordering options when selecting data from "pokemon_v2_encountercondition".
"""
input encountercondition_order_by {
  encounterconditionnames_aggregate: encounterconditionname_aggregate_order_by
  encounterconditionvalues_aggregate: encounterconditionvalue_aggregate_order_by
  id: order_by
  name: order_by
}

"""
select columns of table "pokemon_v2_encountercondition"
"""
enum encountercondition_select_column {
  """column name"""
  id

  """column name"""
  name
}

"""aggregate stddev on columns"""
type encountercondition_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type encountercondition_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type encountercondition_stddev_samp_fields {
  id: Float
}

"""aggregate sum on columns"""
type encountercondition_sum_fields {
  id: Int
}

"""aggregate var_pop on columns"""
type encountercondition_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type encountercondition_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type encountercondition_variance_fields {
  id: Float
}

"""
columns and relationships of "pokemon_v2_encounterconditionname"
"""
type encounterconditionname {
  encounter_condition_id: Int

  """An object relationship"""
  encountercondition: encountercondition
  id: Int!

  """An object relationship"""
  language: language
  language_id: Int
  name: String!
}

"""
aggregated selection of "pokemon_v2_encounterconditionname"
"""
type encounterconditionname_aggregate {
  aggregate: encounterconditionname_aggregate_fields
  nodes: [encounterconditionname!]!
}

input encounterconditionname_aggregate_bool_exp {
  count: encounterconditionname_aggregate_bool_exp_count
}

input encounterconditionname_aggregate_bool_exp_count {
  arguments: [encounterconditionname_select_column!]
  distinct: Boolean
  filter: encounterconditionname_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_encounterconditionname"
"""
type encounterconditionname_aggregate_fields {
  avg: encounterconditionname_avg_fields
  count(columns: [encounterconditionname_select_column!], distinct: Boolean): Int!
  max: encounterconditionname_max_fields
  min: encounterconditionname_min_fields
  stddev: encounterconditionname_stddev_fields
  stddev_pop: encounterconditionname_stddev_pop_fields
  stddev_samp: encounterconditionname_stddev_samp_fields
  sum: encounterconditionname_sum_fields
  var_pop: encounterconditionname_var_pop_fields
  var_samp: encounterconditionname_var_samp_fields
  variance: encounterconditionname_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_encounterconditionname"
"""
input encounterconditionname_aggregate_order_by {
  avg: encounterconditionname_avg_order_by
  count: order_by
  max: encounterconditionname_max_order_by
  min: encounterconditionname_min_order_by
  stddev: encounterconditionname_stddev_order_by
  stddev_pop: encounterconditionname_stddev_pop_order_by
  stddev_samp: encounterconditionname_stddev_samp_order_by
  sum: encounterconditionname_sum_order_by
  var_pop: encounterconditionname_var_pop_order_by
  var_samp: encounterconditionname_var_samp_order_by
  variance: encounterconditionname_variance_order_by
}

"""aggregate avg on columns"""
type encounterconditionname_avg_fields {
  encounter_condition_id: Float
  id: Float
  language_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_encounterconditionname"
"""
input encounterconditionname_avg_order_by {
  encounter_condition_id: order_by
  id: order_by
  language_id: order_by
}

"""
Boolean expression to filter rows from the table
"pokemon_v2_encounterconditionname". All fields are combined with a logical 'AND'.
"""
input encounterconditionname_bool_exp {
  _and: [encounterconditionname_bool_exp!]
  _not: encounterconditionname_bool_exp
  _or: [encounterconditionname_bool_exp!]
  encounter_condition_id: Int_comparison_exp
  encountercondition: encountercondition_bool_exp
  id: Int_comparison_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
  name: String_comparison_exp
}

"""aggregate max on columns"""
type encounterconditionname_max_fields {
  encounter_condition_id: Int
  id: Int
  language_id: Int
  name: String
}

"""
order by max() on columns of table "pokemon_v2_encounterconditionname"
"""
input encounterconditionname_max_order_by {
  encounter_condition_id: order_by
  id: order_by
  language_id: order_by
  name: order_by
}

"""aggregate min on columns"""
type encounterconditionname_min_fields {
  encounter_condition_id: Int
  id: Int
  language_id: Int
  name: String
}

"""
order by min() on columns of table "pokemon_v2_encounterconditionname"
"""
input encounterconditionname_min_order_by {
  encounter_condition_id: order_by
  id: order_by
  language_id: order_by
  name: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_encounterconditionname".
"""
input encounterconditionname_order_by {
  encounter_condition_id: order_by
  encountercondition: encountercondition_order_by
  id: order_by
  language: language_order_by
  language_id: order_by
  name: order_by
}

"""
select columns of table "pokemon_v2_encounterconditionname"
"""
enum encounterconditionname_select_column {
  """column name"""
  encounter_condition_id

  """column name"""
  id

  """column name"""
  language_id

  """column name"""
  name
}

"""aggregate stddev on columns"""
type encounterconditionname_stddev_fields {
  encounter_condition_id: Float
  id: Float
  language_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_encounterconditionname"
"""
input encounterconditionname_stddev_order_by {
  encounter_condition_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate stddev_pop on columns"""
type encounterconditionname_stddev_pop_fields {
  encounter_condition_id: Float
  id: Float
  language_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_encounterconditionname"
"""
input encounterconditionname_stddev_pop_order_by {
  encounter_condition_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate stddev_samp on columns"""
type encounterconditionname_stddev_samp_fields {
  encounter_condition_id: Float
  id: Float
  language_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_encounterconditionname"
"""
input encounterconditionname_stddev_samp_order_by {
  encounter_condition_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate sum on columns"""
type encounterconditionname_sum_fields {
  encounter_condition_id: Int
  id: Int
  language_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_encounterconditionname"
"""
input encounterconditionname_sum_order_by {
  encounter_condition_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate var_pop on columns"""
type encounterconditionname_var_pop_fields {
  encounter_condition_id: Float
  id: Float
  language_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_encounterconditionname"
"""
input encounterconditionname_var_pop_order_by {
  encounter_condition_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate var_samp on columns"""
type encounterconditionname_var_samp_fields {
  encounter_condition_id: Float
  id: Float
  language_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_encounterconditionname"
"""
input encounterconditionname_var_samp_order_by {
  encounter_condition_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate variance on columns"""
type encounterconditionname_variance_fields {
  encounter_condition_id: Float
  id: Float
  language_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_encounterconditionname"
"""
input encounterconditionname_variance_order_by {
  encounter_condition_id: order_by
  id: order_by
  language_id: order_by
}

"""
columns and relationships of "pokemon_v2_encounterconditionvalue"
"""
type encounterconditionvalue {
  encounter_condition_id: Int

  """An object relationship"""
  encountercondition: encountercondition

  """An array relationship"""
  encounterconditionvaluemaps(
    """distinct select on columns"""
    distinct_on: [encounterconditionvaluemap_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [encounterconditionvaluemap_order_by!]

    """filter the rows returned"""
    where: encounterconditionvaluemap_bool_exp
  ): [encounterconditionvaluemap!]!

  """An aggregate relationship"""
  encounterconditionvaluemaps_aggregate(
    """distinct select on columns"""
    distinct_on: [encounterconditionvaluemap_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [encounterconditionvaluemap_order_by!]

    """filter the rows returned"""
    where: encounterconditionvaluemap_bool_exp
  ): encounterconditionvaluemap_aggregate!

  """An array relationship"""
  encounterconditionvaluenames(
    """distinct select on columns"""
    distinct_on: [encounterconditionvaluename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [encounterconditionvaluename_order_by!]

    """filter the rows returned"""
    where: encounterconditionvaluename_bool_exp
  ): [encounterconditionvaluename!]!

  """An aggregate relationship"""
  encounterconditionvaluenames_aggregate(
    """distinct select on columns"""
    distinct_on: [encounterconditionvaluename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [encounterconditionvaluename_order_by!]

    """filter the rows returned"""
    where: encounterconditionvaluename_bool_exp
  ): encounterconditionvaluename_aggregate!
  id: Int!
  is_default: Boolean!
  name: String!
}

"""
aggregated selection of "pokemon_v2_encounterconditionvalue"
"""
type encounterconditionvalue_aggregate {
  aggregate: encounterconditionvalue_aggregate_fields
  nodes: [encounterconditionvalue!]!
}

input encounterconditionvalue_aggregate_bool_exp {
  bool_and: encounterconditionvalue_aggregate_bool_exp_bool_and
  bool_or: encounterconditionvalue_aggregate_bool_exp_bool_or
  count: encounterconditionvalue_aggregate_bool_exp_count
}

input encounterconditionvalue_aggregate_bool_exp_bool_and {
  arguments: encounterconditionvalue_select_column_encounterconditionvalue_aggregate_bool_exp_bool_and_arguments_columns!
  distinct: Boolean
  filter: encounterconditionvalue_bool_exp
  predicate: Boolean_comparison_exp!
}

input encounterconditionvalue_aggregate_bool_exp_bool_or {
  arguments: encounterconditionvalue_select_column_encounterconditionvalue_aggregate_bool_exp_bool_or_arguments_columns!
  distinct: Boolean
  filter: encounterconditionvalue_bool_exp
  predicate: Boolean_comparison_exp!
}

input encounterconditionvalue_aggregate_bool_exp_count {
  arguments: [encounterconditionvalue_select_column!]
  distinct: Boolean
  filter: encounterconditionvalue_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_encounterconditionvalue"
"""
type encounterconditionvalue_aggregate_fields {
  avg: encounterconditionvalue_avg_fields
  count(columns: [encounterconditionvalue_select_column!], distinct: Boolean): Int!
  max: encounterconditionvalue_max_fields
  min: encounterconditionvalue_min_fields
  stddev: encounterconditionvalue_stddev_fields
  stddev_pop: encounterconditionvalue_stddev_pop_fields
  stddev_samp: encounterconditionvalue_stddev_samp_fields
  sum: encounterconditionvalue_sum_fields
  var_pop: encounterconditionvalue_var_pop_fields
  var_samp: encounterconditionvalue_var_samp_fields
  variance: encounterconditionvalue_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_encounterconditionvalue"
"""
input encounterconditionvalue_aggregate_order_by {
  avg: encounterconditionvalue_avg_order_by
  count: order_by
  max: encounterconditionvalue_max_order_by
  min: encounterconditionvalue_min_order_by
  stddev: encounterconditionvalue_stddev_order_by
  stddev_pop: encounterconditionvalue_stddev_pop_order_by
  stddev_samp: encounterconditionvalue_stddev_samp_order_by
  sum: encounterconditionvalue_sum_order_by
  var_pop: encounterconditionvalue_var_pop_order_by
  var_samp: encounterconditionvalue_var_samp_order_by
  variance: encounterconditionvalue_variance_order_by
}

"""aggregate avg on columns"""
type encounterconditionvalue_avg_fields {
  encounter_condition_id: Float
  id: Float
}

"""
order by avg() on columns of table "pokemon_v2_encounterconditionvalue"
"""
input encounterconditionvalue_avg_order_by {
  encounter_condition_id: order_by
  id: order_by
}

"""
Boolean expression to filter rows from the table
"pokemon_v2_encounterconditionvalue". All fields are combined with a logical 'AND'.
"""
input encounterconditionvalue_bool_exp {
  _and: [encounterconditionvalue_bool_exp!]
  _not: encounterconditionvalue_bool_exp
  _or: [encounterconditionvalue_bool_exp!]
  encounter_condition_id: Int_comparison_exp
  encountercondition: encountercondition_bool_exp
  encounterconditionvaluemaps: encounterconditionvaluemap_bool_exp
  encounterconditionvaluemaps_aggregate: encounterconditionvaluemap_aggregate_bool_exp
  encounterconditionvaluenames: encounterconditionvaluename_bool_exp
  encounterconditionvaluenames_aggregate: encounterconditionvaluename_aggregate_bool_exp
  id: Int_comparison_exp
  is_default: Boolean_comparison_exp
  name: String_comparison_exp
}

"""aggregate max on columns"""
type encounterconditionvalue_max_fields {
  encounter_condition_id: Int
  id: Int
  name: String
}

"""
order by max() on columns of table "pokemon_v2_encounterconditionvalue"
"""
input encounterconditionvalue_max_order_by {
  encounter_condition_id: order_by
  id: order_by
  name: order_by
}

"""aggregate min on columns"""
type encounterconditionvalue_min_fields {
  encounter_condition_id: Int
  id: Int
  name: String
}

"""
order by min() on columns of table "pokemon_v2_encounterconditionvalue"
"""
input encounterconditionvalue_min_order_by {
  encounter_condition_id: order_by
  id: order_by
  name: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_encounterconditionvalue".
"""
input encounterconditionvalue_order_by {
  encounter_condition_id: order_by
  encountercondition: encountercondition_order_by
  encounterconditionvaluemaps_aggregate: encounterconditionvaluemap_aggregate_order_by
  encounterconditionvaluenames_aggregate: encounterconditionvaluename_aggregate_order_by
  id: order_by
  is_default: order_by
  name: order_by
}

"""
select columns of table "pokemon_v2_encounterconditionvalue"
"""
enum encounterconditionvalue_select_column {
  """column name"""
  encounter_condition_id

  """column name"""
  id

  """column name"""
  is_default

  """column name"""
  name
}

"""
select "encounterconditionvalue_aggregate_bool_exp_bool_and_arguments_columns"
columns of table "pokemon_v2_encounterconditionvalue"
"""
enum encounterconditionvalue_select_column_encounterconditionvalue_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
  is_default
}

"""
select "encounterconditionvalue_aggregate_bool_exp_bool_or_arguments_columns"
columns of table "pokemon_v2_encounterconditionvalue"
"""
enum encounterconditionvalue_select_column_encounterconditionvalue_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
  is_default
}

"""aggregate stddev on columns"""
type encounterconditionvalue_stddev_fields {
  encounter_condition_id: Float
  id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_encounterconditionvalue"
"""
input encounterconditionvalue_stddev_order_by {
  encounter_condition_id: order_by
  id: order_by
}

"""aggregate stddev_pop on columns"""
type encounterconditionvalue_stddev_pop_fields {
  encounter_condition_id: Float
  id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_encounterconditionvalue"
"""
input encounterconditionvalue_stddev_pop_order_by {
  encounter_condition_id: order_by
  id: order_by
}

"""aggregate stddev_samp on columns"""
type encounterconditionvalue_stddev_samp_fields {
  encounter_condition_id: Float
  id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_encounterconditionvalue"
"""
input encounterconditionvalue_stddev_samp_order_by {
  encounter_condition_id: order_by
  id: order_by
}

"""aggregate sum on columns"""
type encounterconditionvalue_sum_fields {
  encounter_condition_id: Int
  id: Int
}

"""
order by sum() on columns of table "pokemon_v2_encounterconditionvalue"
"""
input encounterconditionvalue_sum_order_by {
  encounter_condition_id: order_by
  id: order_by
}

"""aggregate var_pop on columns"""
type encounterconditionvalue_var_pop_fields {
  encounter_condition_id: Float
  id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_encounterconditionvalue"
"""
input encounterconditionvalue_var_pop_order_by {
  encounter_condition_id: order_by
  id: order_by
}

"""aggregate var_samp on columns"""
type encounterconditionvalue_var_samp_fields {
  encounter_condition_id: Float
  id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_encounterconditionvalue"
"""
input encounterconditionvalue_var_samp_order_by {
  encounter_condition_id: order_by
  id: order_by
}

"""aggregate variance on columns"""
type encounterconditionvalue_variance_fields {
  encounter_condition_id: Float
  id: Float
}

"""
order by variance() on columns of table "pokemon_v2_encounterconditionvalue"
"""
input encounterconditionvalue_variance_order_by {
  encounter_condition_id: order_by
  id: order_by
}

"""
columns and relationships of "pokemon_v2_encounterconditionvaluemap"
"""
type encounterconditionvaluemap {
  """An object relationship"""
  encounter: encounter
  encounter_condition_value_id: Int
  encounter_id: Int

  """An object relationship"""
  encounterconditionvalue: encounterconditionvalue
  id: Int!
}

"""
aggregated selection of "pokemon_v2_encounterconditionvaluemap"
"""
type encounterconditionvaluemap_aggregate {
  aggregate: encounterconditionvaluemap_aggregate_fields
  nodes: [encounterconditionvaluemap!]!
}

input encounterconditionvaluemap_aggregate_bool_exp {
  count: encounterconditionvaluemap_aggregate_bool_exp_count
}

input encounterconditionvaluemap_aggregate_bool_exp_count {
  arguments: [encounterconditionvaluemap_select_column!]
  distinct: Boolean
  filter: encounterconditionvaluemap_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_encounterconditionvaluemap"
"""
type encounterconditionvaluemap_aggregate_fields {
  avg: encounterconditionvaluemap_avg_fields
  count(columns: [encounterconditionvaluemap_select_column!], distinct: Boolean): Int!
  max: encounterconditionvaluemap_max_fields
  min: encounterconditionvaluemap_min_fields
  stddev: encounterconditionvaluemap_stddev_fields
  stddev_pop: encounterconditionvaluemap_stddev_pop_fields
  stddev_samp: encounterconditionvaluemap_stddev_samp_fields
  sum: encounterconditionvaluemap_sum_fields
  var_pop: encounterconditionvaluemap_var_pop_fields
  var_samp: encounterconditionvaluemap_var_samp_fields
  variance: encounterconditionvaluemap_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_encounterconditionvaluemap"
"""
input encounterconditionvaluemap_aggregate_order_by {
  avg: encounterconditionvaluemap_avg_order_by
  count: order_by
  max: encounterconditionvaluemap_max_order_by
  min: encounterconditionvaluemap_min_order_by
  stddev: encounterconditionvaluemap_stddev_order_by
  stddev_pop: encounterconditionvaluemap_stddev_pop_order_by
  stddev_samp: encounterconditionvaluemap_stddev_samp_order_by
  sum: encounterconditionvaluemap_sum_order_by
  var_pop: encounterconditionvaluemap_var_pop_order_by
  var_samp: encounterconditionvaluemap_var_samp_order_by
  variance: encounterconditionvaluemap_variance_order_by
}

"""aggregate avg on columns"""
type encounterconditionvaluemap_avg_fields {
  encounter_condition_value_id: Float
  encounter_id: Float
  id: Float
}

"""
order by avg() on columns of table "pokemon_v2_encounterconditionvaluemap"
"""
input encounterconditionvaluemap_avg_order_by {
  encounter_condition_value_id: order_by
  encounter_id: order_by
  id: order_by
}

"""
Boolean expression to filter rows from the table
"pokemon_v2_encounterconditionvaluemap". All fields are combined with a logical 'AND'.
"""
input encounterconditionvaluemap_bool_exp {
  _and: [encounterconditionvaluemap_bool_exp!]
  _not: encounterconditionvaluemap_bool_exp
  _or: [encounterconditionvaluemap_bool_exp!]
  encounter: encounter_bool_exp
  encounter_condition_value_id: Int_comparison_exp
  encounter_id: Int_comparison_exp
  encounterconditionvalue: encounterconditionvalue_bool_exp
  id: Int_comparison_exp
}

"""aggregate max on columns"""
type encounterconditionvaluemap_max_fields {
  encounter_condition_value_id: Int
  encounter_id: Int
  id: Int
}

"""
order by max() on columns of table "pokemon_v2_encounterconditionvaluemap"
"""
input encounterconditionvaluemap_max_order_by {
  encounter_condition_value_id: order_by
  encounter_id: order_by
  id: order_by
}

"""aggregate min on columns"""
type encounterconditionvaluemap_min_fields {
  encounter_condition_value_id: Int
  encounter_id: Int
  id: Int
}

"""
order by min() on columns of table "pokemon_v2_encounterconditionvaluemap"
"""
input encounterconditionvaluemap_min_order_by {
  encounter_condition_value_id: order_by
  encounter_id: order_by
  id: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_encounterconditionvaluemap".
"""
input encounterconditionvaluemap_order_by {
  encounter: encounter_order_by
  encounter_condition_value_id: order_by
  encounter_id: order_by
  encounterconditionvalue: encounterconditionvalue_order_by
  id: order_by
}

"""
select columns of table "pokemon_v2_encounterconditionvaluemap"
"""
enum encounterconditionvaluemap_select_column {
  """column name"""
  encounter_condition_value_id

  """column name"""
  encounter_id

  """column name"""
  id
}

"""aggregate stddev on columns"""
type encounterconditionvaluemap_stddev_fields {
  encounter_condition_value_id: Float
  encounter_id: Float
  id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_encounterconditionvaluemap"
"""
input encounterconditionvaluemap_stddev_order_by {
  encounter_condition_value_id: order_by
  encounter_id: order_by
  id: order_by
}

"""aggregate stddev_pop on columns"""
type encounterconditionvaluemap_stddev_pop_fields {
  encounter_condition_value_id: Float
  encounter_id: Float
  id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_encounterconditionvaluemap"
"""
input encounterconditionvaluemap_stddev_pop_order_by {
  encounter_condition_value_id: order_by
  encounter_id: order_by
  id: order_by
}

"""aggregate stddev_samp on columns"""
type encounterconditionvaluemap_stddev_samp_fields {
  encounter_condition_value_id: Float
  encounter_id: Float
  id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_encounterconditionvaluemap"
"""
input encounterconditionvaluemap_stddev_samp_order_by {
  encounter_condition_value_id: order_by
  encounter_id: order_by
  id: order_by
}

"""aggregate sum on columns"""
type encounterconditionvaluemap_sum_fields {
  encounter_condition_value_id: Int
  encounter_id: Int
  id: Int
}

"""
order by sum() on columns of table "pokemon_v2_encounterconditionvaluemap"
"""
input encounterconditionvaluemap_sum_order_by {
  encounter_condition_value_id: order_by
  encounter_id: order_by
  id: order_by
}

"""aggregate var_pop on columns"""
type encounterconditionvaluemap_var_pop_fields {
  encounter_condition_value_id: Float
  encounter_id: Float
  id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_encounterconditionvaluemap"
"""
input encounterconditionvaluemap_var_pop_order_by {
  encounter_condition_value_id: order_by
  encounter_id: order_by
  id: order_by
}

"""aggregate var_samp on columns"""
type encounterconditionvaluemap_var_samp_fields {
  encounter_condition_value_id: Float
  encounter_id: Float
  id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_encounterconditionvaluemap"
"""
input encounterconditionvaluemap_var_samp_order_by {
  encounter_condition_value_id: order_by
  encounter_id: order_by
  id: order_by
}

"""aggregate variance on columns"""
type encounterconditionvaluemap_variance_fields {
  encounter_condition_value_id: Float
  encounter_id: Float
  id: Float
}

"""
order by variance() on columns of table "pokemon_v2_encounterconditionvaluemap"
"""
input encounterconditionvaluemap_variance_order_by {
  encounter_condition_value_id: order_by
  encounter_id: order_by
  id: order_by
}

"""
columns and relationships of "pokemon_v2_encounterconditionvaluename"
"""
type encounterconditionvaluename {
  encounter_condition_value_id: Int

  """An object relationship"""
  encounterconditionvalue: encounterconditionvalue
  id: Int!

  """An object relationship"""
  language: language
  language_id: Int
  name: String!
}

"""
aggregated selection of "pokemon_v2_encounterconditionvaluename"
"""
type encounterconditionvaluename_aggregate {
  aggregate: encounterconditionvaluename_aggregate_fields
  nodes: [encounterconditionvaluename!]!
}

input encounterconditionvaluename_aggregate_bool_exp {
  count: encounterconditionvaluename_aggregate_bool_exp_count
}

input encounterconditionvaluename_aggregate_bool_exp_count {
  arguments: [encounterconditionvaluename_select_column!]
  distinct: Boolean
  filter: encounterconditionvaluename_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_encounterconditionvaluename"
"""
type encounterconditionvaluename_aggregate_fields {
  avg: encounterconditionvaluename_avg_fields
  count(columns: [encounterconditionvaluename_select_column!], distinct: Boolean): Int!
  max: encounterconditionvaluename_max_fields
  min: encounterconditionvaluename_min_fields
  stddev: encounterconditionvaluename_stddev_fields
  stddev_pop: encounterconditionvaluename_stddev_pop_fields
  stddev_samp: encounterconditionvaluename_stddev_samp_fields
  sum: encounterconditionvaluename_sum_fields
  var_pop: encounterconditionvaluename_var_pop_fields
  var_samp: encounterconditionvaluename_var_samp_fields
  variance: encounterconditionvaluename_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_encounterconditionvaluename"
"""
input encounterconditionvaluename_aggregate_order_by {
  avg: encounterconditionvaluename_avg_order_by
  count: order_by
  max: encounterconditionvaluename_max_order_by
  min: encounterconditionvaluename_min_order_by
  stddev: encounterconditionvaluename_stddev_order_by
  stddev_pop: encounterconditionvaluename_stddev_pop_order_by
  stddev_samp: encounterconditionvaluename_stddev_samp_order_by
  sum: encounterconditionvaluename_sum_order_by
  var_pop: encounterconditionvaluename_var_pop_order_by
  var_samp: encounterconditionvaluename_var_samp_order_by
  variance: encounterconditionvaluename_variance_order_by
}

"""aggregate avg on columns"""
type encounterconditionvaluename_avg_fields {
  encounter_condition_value_id: Float
  id: Float
  language_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_encounterconditionvaluename"
"""
input encounterconditionvaluename_avg_order_by {
  encounter_condition_value_id: order_by
  id: order_by
  language_id: order_by
}

"""
Boolean expression to filter rows from the table
"pokemon_v2_encounterconditionvaluename". All fields are combined with a logical 'AND'.
"""
input encounterconditionvaluename_bool_exp {
  _and: [encounterconditionvaluename_bool_exp!]
  _not: encounterconditionvaluename_bool_exp
  _or: [encounterconditionvaluename_bool_exp!]
  encounter_condition_value_id: Int_comparison_exp
  encounterconditionvalue: encounterconditionvalue_bool_exp
  id: Int_comparison_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
  name: String_comparison_exp
}

"""aggregate max on columns"""
type encounterconditionvaluename_max_fields {
  encounter_condition_value_id: Int
  id: Int
  language_id: Int
  name: String
}

"""
order by max() on columns of table "pokemon_v2_encounterconditionvaluename"
"""
input encounterconditionvaluename_max_order_by {
  encounter_condition_value_id: order_by
  id: order_by
  language_id: order_by
  name: order_by
}

"""aggregate min on columns"""
type encounterconditionvaluename_min_fields {
  encounter_condition_value_id: Int
  id: Int
  language_id: Int
  name: String
}

"""
order by min() on columns of table "pokemon_v2_encounterconditionvaluename"
"""
input encounterconditionvaluename_min_order_by {
  encounter_condition_value_id: order_by
  id: order_by
  language_id: order_by
  name: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_encounterconditionvaluename".
"""
input encounterconditionvaluename_order_by {
  encounter_condition_value_id: order_by
  encounterconditionvalue: encounterconditionvalue_order_by
  id: order_by
  language: language_order_by
  language_id: order_by
  name: order_by
}

"""
select columns of table "pokemon_v2_encounterconditionvaluename"
"""
enum encounterconditionvaluename_select_column {
  """column name"""
  encounter_condition_value_id

  """column name"""
  id

  """column name"""
  language_id

  """column name"""
  name
}

"""aggregate stddev on columns"""
type encounterconditionvaluename_stddev_fields {
  encounter_condition_value_id: Float
  id: Float
  language_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_encounterconditionvaluename"
"""
input encounterconditionvaluename_stddev_order_by {
  encounter_condition_value_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate stddev_pop on columns"""
type encounterconditionvaluename_stddev_pop_fields {
  encounter_condition_value_id: Float
  id: Float
  language_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_encounterconditionvaluename"
"""
input encounterconditionvaluename_stddev_pop_order_by {
  encounter_condition_value_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate stddev_samp on columns"""
type encounterconditionvaluename_stddev_samp_fields {
  encounter_condition_value_id: Float
  id: Float
  language_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_encounterconditionvaluename"
"""
input encounterconditionvaluename_stddev_samp_order_by {
  encounter_condition_value_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate sum on columns"""
type encounterconditionvaluename_sum_fields {
  encounter_condition_value_id: Int
  id: Int
  language_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_encounterconditionvaluename"
"""
input encounterconditionvaluename_sum_order_by {
  encounter_condition_value_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate var_pop on columns"""
type encounterconditionvaluename_var_pop_fields {
  encounter_condition_value_id: Float
  id: Float
  language_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_encounterconditionvaluename"
"""
input encounterconditionvaluename_var_pop_order_by {
  encounter_condition_value_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate var_samp on columns"""
type encounterconditionvaluename_var_samp_fields {
  encounter_condition_value_id: Float
  id: Float
  language_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_encounterconditionvaluename"
"""
input encounterconditionvaluename_var_samp_order_by {
  encounter_condition_value_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate variance on columns"""
type encounterconditionvaluename_variance_fields {
  encounter_condition_value_id: Float
  id: Float
  language_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_encounterconditionvaluename"
"""
input encounterconditionvaluename_variance_order_by {
  encounter_condition_value_id: order_by
  id: order_by
  language_id: order_by
}

"""
columns and relationships of "pokemon_v2_encountermethod"
"""
type encountermethod {
  """An array relationship"""
  encountermethodnames(
    """distinct select on columns"""
    distinct_on: [encountermethodname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [encountermethodname_order_by!]

    """filter the rows returned"""
    where: encountermethodname_bool_exp
  ): [encountermethodname!]!

  """An aggregate relationship"""
  encountermethodnames_aggregate(
    """distinct select on columns"""
    distinct_on: [encountermethodname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [encountermethodname_order_by!]

    """filter the rows returned"""
    where: encountermethodname_bool_exp
  ): encountermethodname_aggregate!

  """An array relationship"""
  encounterslots(
    """distinct select on columns"""
    distinct_on: [encounterslot_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [encounterslot_order_by!]

    """filter the rows returned"""
    where: encounterslot_bool_exp
  ): [encounterslot!]!

  """An aggregate relationship"""
  encounterslots_aggregate(
    """distinct select on columns"""
    distinct_on: [encounterslot_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [encounterslot_order_by!]

    """filter the rows returned"""
    where: encounterslot_bool_exp
  ): encounterslot_aggregate!
  id: Int!

  """An array relationship"""
  locationareaencounterrates(
    """distinct select on columns"""
    distinct_on: [locationareaencounterrate_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [locationareaencounterrate_order_by!]

    """filter the rows returned"""
    where: locationareaencounterrate_bool_exp
  ): [locationareaencounterrate!]!

  """An aggregate relationship"""
  locationareaencounterrates_aggregate(
    """distinct select on columns"""
    distinct_on: [locationareaencounterrate_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [locationareaencounterrate_order_by!]

    """filter the rows returned"""
    where: locationareaencounterrate_bool_exp
  ): locationareaencounterrate_aggregate!
  name: String!
  order: Int
}

"""
aggregated selection of "pokemon_v2_encountermethod"
"""
type encountermethod_aggregate {
  aggregate: encountermethod_aggregate_fields
  nodes: [encountermethod!]!
}

"""
aggregate fields of "pokemon_v2_encountermethod"
"""
type encountermethod_aggregate_fields {
  avg: encountermethod_avg_fields
  count(columns: [encountermethod_select_column!], distinct: Boolean): Int!
  max: encountermethod_max_fields
  min: encountermethod_min_fields
  stddev: encountermethod_stddev_fields
  stddev_pop: encountermethod_stddev_pop_fields
  stddev_samp: encountermethod_stddev_samp_fields
  sum: encountermethod_sum_fields
  var_pop: encountermethod_var_pop_fields
  var_samp: encountermethod_var_samp_fields
  variance: encountermethod_variance_fields
}

"""aggregate avg on columns"""
type encountermethod_avg_fields {
  id: Float
  order: Float
}

"""
Boolean expression to filter rows from the table "pokemon_v2_encountermethod". All fields are combined with a logical 'AND'.
"""
input encountermethod_bool_exp {
  _and: [encountermethod_bool_exp!]
  _not: encountermethod_bool_exp
  _or: [encountermethod_bool_exp!]
  encountermethodnames: encountermethodname_bool_exp
  encountermethodnames_aggregate: encountermethodname_aggregate_bool_exp
  encounterslots: encounterslot_bool_exp
  encounterslots_aggregate: encounterslot_aggregate_bool_exp
  id: Int_comparison_exp
  locationareaencounterrates: locationareaencounterrate_bool_exp
  locationareaencounterrates_aggregate: locationareaencounterrate_aggregate_bool_exp
  name: String_comparison_exp
  order: Int_comparison_exp
}

"""aggregate max on columns"""
type encountermethod_max_fields {
  id: Int
  name: String
  order: Int
}

"""aggregate min on columns"""
type encountermethod_min_fields {
  id: Int
  name: String
  order: Int
}

"""
Ordering options when selecting data from "pokemon_v2_encountermethod".
"""
input encountermethod_order_by {
  encountermethodnames_aggregate: encountermethodname_aggregate_order_by
  encounterslots_aggregate: encounterslot_aggregate_order_by
  id: order_by
  locationareaencounterrates_aggregate: locationareaencounterrate_aggregate_order_by
  name: order_by
  order: order_by
}

"""
select columns of table "pokemon_v2_encountermethod"
"""
enum encountermethod_select_column {
  """column name"""
  id

  """column name"""
  name

  """column name"""
  order
}

"""aggregate stddev on columns"""
type encountermethod_stddev_fields {
  id: Float
  order: Float
}

"""aggregate stddev_pop on columns"""
type encountermethod_stddev_pop_fields {
  id: Float
  order: Float
}

"""aggregate stddev_samp on columns"""
type encountermethod_stddev_samp_fields {
  id: Float
  order: Float
}

"""aggregate sum on columns"""
type encountermethod_sum_fields {
  id: Int
  order: Int
}

"""aggregate var_pop on columns"""
type encountermethod_var_pop_fields {
  id: Float
  order: Float
}

"""aggregate var_samp on columns"""
type encountermethod_var_samp_fields {
  id: Float
  order: Float
}

"""aggregate variance on columns"""
type encountermethod_variance_fields {
  id: Float
  order: Float
}

"""
columns and relationships of "pokemon_v2_encountermethodname"
"""
type encountermethodname {
  encounter_method_id: Int

  """An object relationship"""
  encountermethod: encountermethod
  id: Int!

  """An object relationship"""
  language: language
  language_id: Int
  name: String!
}

"""
aggregated selection of "pokemon_v2_encountermethodname"
"""
type encountermethodname_aggregate {
  aggregate: encountermethodname_aggregate_fields
  nodes: [encountermethodname!]!
}

input encountermethodname_aggregate_bool_exp {
  count: encountermethodname_aggregate_bool_exp_count
}

input encountermethodname_aggregate_bool_exp_count {
  arguments: [encountermethodname_select_column!]
  distinct: Boolean
  filter: encountermethodname_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_encountermethodname"
"""
type encountermethodname_aggregate_fields {
  avg: encountermethodname_avg_fields
  count(columns: [encountermethodname_select_column!], distinct: Boolean): Int!
  max: encountermethodname_max_fields
  min: encountermethodname_min_fields
  stddev: encountermethodname_stddev_fields
  stddev_pop: encountermethodname_stddev_pop_fields
  stddev_samp: encountermethodname_stddev_samp_fields
  sum: encountermethodname_sum_fields
  var_pop: encountermethodname_var_pop_fields
  var_samp: encountermethodname_var_samp_fields
  variance: encountermethodname_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_encountermethodname"
"""
input encountermethodname_aggregate_order_by {
  avg: encountermethodname_avg_order_by
  count: order_by
  max: encountermethodname_max_order_by
  min: encountermethodname_min_order_by
  stddev: encountermethodname_stddev_order_by
  stddev_pop: encountermethodname_stddev_pop_order_by
  stddev_samp: encountermethodname_stddev_samp_order_by
  sum: encountermethodname_sum_order_by
  var_pop: encountermethodname_var_pop_order_by
  var_samp: encountermethodname_var_samp_order_by
  variance: encountermethodname_variance_order_by
}

"""aggregate avg on columns"""
type encountermethodname_avg_fields {
  encounter_method_id: Float
  id: Float
  language_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_encountermethodname"
"""
input encountermethodname_avg_order_by {
  encounter_method_id: order_by
  id: order_by
  language_id: order_by
}

"""
Boolean expression to filter rows from the table
"pokemon_v2_encountermethodname". All fields are combined with a logical 'AND'.
"""
input encountermethodname_bool_exp {
  _and: [encountermethodname_bool_exp!]
  _not: encountermethodname_bool_exp
  _or: [encountermethodname_bool_exp!]
  encounter_method_id: Int_comparison_exp
  encountermethod: encountermethod_bool_exp
  id: Int_comparison_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
  name: String_comparison_exp
}

"""aggregate max on columns"""
type encountermethodname_max_fields {
  encounter_method_id: Int
  id: Int
  language_id: Int
  name: String
}

"""
order by max() on columns of table "pokemon_v2_encountermethodname"
"""
input encountermethodname_max_order_by {
  encounter_method_id: order_by
  id: order_by
  language_id: order_by
  name: order_by
}

"""aggregate min on columns"""
type encountermethodname_min_fields {
  encounter_method_id: Int
  id: Int
  language_id: Int
  name: String
}

"""
order by min() on columns of table "pokemon_v2_encountermethodname"
"""
input encountermethodname_min_order_by {
  encounter_method_id: order_by
  id: order_by
  language_id: order_by
  name: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_encountermethodname".
"""
input encountermethodname_order_by {
  encounter_method_id: order_by
  encountermethod: encountermethod_order_by
  id: order_by
  language: language_order_by
  language_id: order_by
  name: order_by
}

"""
select columns of table "pokemon_v2_encountermethodname"
"""
enum encountermethodname_select_column {
  """column name"""
  encounter_method_id

  """column name"""
  id

  """column name"""
  language_id

  """column name"""
  name
}

"""aggregate stddev on columns"""
type encountermethodname_stddev_fields {
  encounter_method_id: Float
  id: Float
  language_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_encountermethodname"
"""
input encountermethodname_stddev_order_by {
  encounter_method_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate stddev_pop on columns"""
type encountermethodname_stddev_pop_fields {
  encounter_method_id: Float
  id: Float
  language_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_encountermethodname"
"""
input encountermethodname_stddev_pop_order_by {
  encounter_method_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate stddev_samp on columns"""
type encountermethodname_stddev_samp_fields {
  encounter_method_id: Float
  id: Float
  language_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_encountermethodname"
"""
input encountermethodname_stddev_samp_order_by {
  encounter_method_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate sum on columns"""
type encountermethodname_sum_fields {
  encounter_method_id: Int
  id: Int
  language_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_encountermethodname"
"""
input encountermethodname_sum_order_by {
  encounter_method_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate var_pop on columns"""
type encountermethodname_var_pop_fields {
  encounter_method_id: Float
  id: Float
  language_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_encountermethodname"
"""
input encountermethodname_var_pop_order_by {
  encounter_method_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate var_samp on columns"""
type encountermethodname_var_samp_fields {
  encounter_method_id: Float
  id: Float
  language_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_encountermethodname"
"""
input encountermethodname_var_samp_order_by {
  encounter_method_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate variance on columns"""
type encountermethodname_variance_fields {
  encounter_method_id: Float
  id: Float
  language_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_encountermethodname"
"""
input encountermethodname_variance_order_by {
  encounter_method_id: order_by
  id: order_by
  language_id: order_by
}

"""
columns and relationships of "pokemon_v2_encounterslot"
"""
type encounterslot {
  encounter_method_id: Int

  """An object relationship"""
  encountermethod: encountermethod

  """An array relationship"""
  encounters(
    """distinct select on columns"""
    distinct_on: [encounter_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [encounter_order_by!]

    """filter the rows returned"""
    where: encounter_bool_exp
  ): [encounter!]!

  """An aggregate relationship"""
  encounters_aggregate(
    """distinct select on columns"""
    distinct_on: [encounter_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [encounter_order_by!]

    """filter the rows returned"""
    where: encounter_bool_exp
  ): encounter_aggregate!
  id: Int!
  rarity: Int!
  slot: Int
  version_group_id: Int

  """An object relationship"""
  versiongroup: versiongroup
}

"""
aggregated selection of "pokemon_v2_encounterslot"
"""
type encounterslot_aggregate {
  aggregate: encounterslot_aggregate_fields
  nodes: [encounterslot!]!
}

input encounterslot_aggregate_bool_exp {
  count: encounterslot_aggregate_bool_exp_count
}

input encounterslot_aggregate_bool_exp_count {
  arguments: [encounterslot_select_column!]
  distinct: Boolean
  filter: encounterslot_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_encounterslot"
"""
type encounterslot_aggregate_fields {
  avg: encounterslot_avg_fields
  count(columns: [encounterslot_select_column!], distinct: Boolean): Int!
  max: encounterslot_max_fields
  min: encounterslot_min_fields
  stddev: encounterslot_stddev_fields
  stddev_pop: encounterslot_stddev_pop_fields
  stddev_samp: encounterslot_stddev_samp_fields
  sum: encounterslot_sum_fields
  var_pop: encounterslot_var_pop_fields
  var_samp: encounterslot_var_samp_fields
  variance: encounterslot_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_encounterslot"
"""
input encounterslot_aggregate_order_by {
  avg: encounterslot_avg_order_by
  count: order_by
  max: encounterslot_max_order_by
  min: encounterslot_min_order_by
  stddev: encounterslot_stddev_order_by
  stddev_pop: encounterslot_stddev_pop_order_by
  stddev_samp: encounterslot_stddev_samp_order_by
  sum: encounterslot_sum_order_by
  var_pop: encounterslot_var_pop_order_by
  var_samp: encounterslot_var_samp_order_by
  variance: encounterslot_variance_order_by
}

"""aggregate avg on columns"""
type encounterslot_avg_fields {
  encounter_method_id: Float
  id: Float
  rarity: Float
  slot: Float
  version_group_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_encounterslot"
"""
input encounterslot_avg_order_by {
  encounter_method_id: order_by
  id: order_by
  rarity: order_by
  slot: order_by
  version_group_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_encounterslot". All fields are combined with a logical 'AND'.
"""
input encounterslot_bool_exp {
  _and: [encounterslot_bool_exp!]
  _not: encounterslot_bool_exp
  _or: [encounterslot_bool_exp!]
  encounter_method_id: Int_comparison_exp
  encountermethod: encountermethod_bool_exp
  encounters: encounter_bool_exp
  encounters_aggregate: encounter_aggregate_bool_exp
  id: Int_comparison_exp
  rarity: Int_comparison_exp
  slot: Int_comparison_exp
  version_group_id: Int_comparison_exp
  versiongroup: versiongroup_bool_exp
}

"""aggregate max on columns"""
type encounterslot_max_fields {
  encounter_method_id: Int
  id: Int
  rarity: Int
  slot: Int
  version_group_id: Int
}

"""
order by max() on columns of table "pokemon_v2_encounterslot"
"""
input encounterslot_max_order_by {
  encounter_method_id: order_by
  id: order_by
  rarity: order_by
  slot: order_by
  version_group_id: order_by
}

"""aggregate min on columns"""
type encounterslot_min_fields {
  encounter_method_id: Int
  id: Int
  rarity: Int
  slot: Int
  version_group_id: Int
}

"""
order by min() on columns of table "pokemon_v2_encounterslot"
"""
input encounterslot_min_order_by {
  encounter_method_id: order_by
  id: order_by
  rarity: order_by
  slot: order_by
  version_group_id: order_by
}

"""Ordering options when selecting data from "pokemon_v2_encounterslot"."""
input encounterslot_order_by {
  encounter_method_id: order_by
  encountermethod: encountermethod_order_by
  encounters_aggregate: encounter_aggregate_order_by
  id: order_by
  rarity: order_by
  slot: order_by
  version_group_id: order_by
  versiongroup: versiongroup_order_by
}

"""
select columns of table "pokemon_v2_encounterslot"
"""
enum encounterslot_select_column {
  """column name"""
  encounter_method_id

  """column name"""
  id

  """column name"""
  rarity

  """column name"""
  slot

  """column name"""
  version_group_id
}

"""aggregate stddev on columns"""
type encounterslot_stddev_fields {
  encounter_method_id: Float
  id: Float
  rarity: Float
  slot: Float
  version_group_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_encounterslot"
"""
input encounterslot_stddev_order_by {
  encounter_method_id: order_by
  id: order_by
  rarity: order_by
  slot: order_by
  version_group_id: order_by
}

"""aggregate stddev_pop on columns"""
type encounterslot_stddev_pop_fields {
  encounter_method_id: Float
  id: Float
  rarity: Float
  slot: Float
  version_group_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_encounterslot"
"""
input encounterslot_stddev_pop_order_by {
  encounter_method_id: order_by
  id: order_by
  rarity: order_by
  slot: order_by
  version_group_id: order_by
}

"""aggregate stddev_samp on columns"""
type encounterslot_stddev_samp_fields {
  encounter_method_id: Float
  id: Float
  rarity: Float
  slot: Float
  version_group_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_encounterslot"
"""
input encounterslot_stddev_samp_order_by {
  encounter_method_id: order_by
  id: order_by
  rarity: order_by
  slot: order_by
  version_group_id: order_by
}

"""aggregate sum on columns"""
type encounterslot_sum_fields {
  encounter_method_id: Int
  id: Int
  rarity: Int
  slot: Int
  version_group_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_encounterslot"
"""
input encounterslot_sum_order_by {
  encounter_method_id: order_by
  id: order_by
  rarity: order_by
  slot: order_by
  version_group_id: order_by
}

"""aggregate var_pop on columns"""
type encounterslot_var_pop_fields {
  encounter_method_id: Float
  id: Float
  rarity: Float
  slot: Float
  version_group_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_encounterslot"
"""
input encounterslot_var_pop_order_by {
  encounter_method_id: order_by
  id: order_by
  rarity: order_by
  slot: order_by
  version_group_id: order_by
}

"""aggregate var_samp on columns"""
type encounterslot_var_samp_fields {
  encounter_method_id: Float
  id: Float
  rarity: Float
  slot: Float
  version_group_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_encounterslot"
"""
input encounterslot_var_samp_order_by {
  encounter_method_id: order_by
  id: order_by
  rarity: order_by
  slot: order_by
  version_group_id: order_by
}

"""aggregate variance on columns"""
type encounterslot_variance_fields {
  encounter_method_id: Float
  id: Float
  rarity: Float
  slot: Float
  version_group_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_encounterslot"
"""
input encounterslot_variance_order_by {
  encounter_method_id: order_by
  id: order_by
  rarity: order_by
  slot: order_by
  version_group_id: order_by
}

"""
columns and relationships of "pokemon_v2_evolutionchain"
"""
type evolutionchain {
  baby_trigger_item_id: Int
  id: Int!

  """An object relationship"""
  item: item

  """An array relationship"""
  pokemonspecies(
    """distinct select on columns"""
    distinct_on: [pokemonspecies_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonspecies_order_by!]

    """filter the rows returned"""
    where: pokemonspecies_bool_exp
  ): [pokemonspecies!]!

  """An aggregate relationship"""
  pokemonspecies_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonspecies_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonspecies_order_by!]

    """filter the rows returned"""
    where: pokemonspecies_bool_exp
  ): pokemonspecies_aggregate!
}

"""
aggregated selection of "pokemon_v2_evolutionchain"
"""
type evolutionchain_aggregate {
  aggregate: evolutionchain_aggregate_fields
  nodes: [evolutionchain!]!
}

input evolutionchain_aggregate_bool_exp {
  count: evolutionchain_aggregate_bool_exp_count
}

input evolutionchain_aggregate_bool_exp_count {
  arguments: [evolutionchain_select_column!]
  distinct: Boolean
  filter: evolutionchain_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_evolutionchain"
"""
type evolutionchain_aggregate_fields {
  avg: evolutionchain_avg_fields
  count(columns: [evolutionchain_select_column!], distinct: Boolean): Int!
  max: evolutionchain_max_fields
  min: evolutionchain_min_fields
  stddev: evolutionchain_stddev_fields
  stddev_pop: evolutionchain_stddev_pop_fields
  stddev_samp: evolutionchain_stddev_samp_fields
  sum: evolutionchain_sum_fields
  var_pop: evolutionchain_var_pop_fields
  var_samp: evolutionchain_var_samp_fields
  variance: evolutionchain_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_evolutionchain"
"""
input evolutionchain_aggregate_order_by {
  avg: evolutionchain_avg_order_by
  count: order_by
  max: evolutionchain_max_order_by
  min: evolutionchain_min_order_by
  stddev: evolutionchain_stddev_order_by
  stddev_pop: evolutionchain_stddev_pop_order_by
  stddev_samp: evolutionchain_stddev_samp_order_by
  sum: evolutionchain_sum_order_by
  var_pop: evolutionchain_var_pop_order_by
  var_samp: evolutionchain_var_samp_order_by
  variance: evolutionchain_variance_order_by
}

"""aggregate avg on columns"""
type evolutionchain_avg_fields {
  baby_trigger_item_id: Float
  id: Float
}

"""
order by avg() on columns of table "pokemon_v2_evolutionchain"
"""
input evolutionchain_avg_order_by {
  baby_trigger_item_id: order_by
  id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_evolutionchain". All fields are combined with a logical 'AND'.
"""
input evolutionchain_bool_exp {
  _and: [evolutionchain_bool_exp!]
  _not: evolutionchain_bool_exp
  _or: [evolutionchain_bool_exp!]
  baby_trigger_item_id: Int_comparison_exp
  id: Int_comparison_exp
  item: item_bool_exp
  pokemonspecies: pokemonspecies_bool_exp
  pokemonspecies_aggregate: pokemonspecies_aggregate_bool_exp
}

"""aggregate max on columns"""
type evolutionchain_max_fields {
  baby_trigger_item_id: Int
  id: Int
}

"""
order by max() on columns of table "pokemon_v2_evolutionchain"
"""
input evolutionchain_max_order_by {
  baby_trigger_item_id: order_by
  id: order_by
}

"""aggregate min on columns"""
type evolutionchain_min_fields {
  baby_trigger_item_id: Int
  id: Int
}

"""
order by min() on columns of table "pokemon_v2_evolutionchain"
"""
input evolutionchain_min_order_by {
  baby_trigger_item_id: order_by
  id: order_by
}

"""Ordering options when selecting data from "pokemon_v2_evolutionchain"."""
input evolutionchain_order_by {
  baby_trigger_item_id: order_by
  id: order_by
  item: item_order_by
  pokemonspecies_aggregate: pokemonspecies_aggregate_order_by
}

"""
select columns of table "pokemon_v2_evolutionchain"
"""
enum evolutionchain_select_column {
  """column name"""
  baby_trigger_item_id

  """column name"""
  id
}

"""aggregate stddev on columns"""
type evolutionchain_stddev_fields {
  baby_trigger_item_id: Float
  id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_evolutionchain"
"""
input evolutionchain_stddev_order_by {
  baby_trigger_item_id: order_by
  id: order_by
}

"""aggregate stddev_pop on columns"""
type evolutionchain_stddev_pop_fields {
  baby_trigger_item_id: Float
  id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_evolutionchain"
"""
input evolutionchain_stddev_pop_order_by {
  baby_trigger_item_id: order_by
  id: order_by
}

"""aggregate stddev_samp on columns"""
type evolutionchain_stddev_samp_fields {
  baby_trigger_item_id: Float
  id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_evolutionchain"
"""
input evolutionchain_stddev_samp_order_by {
  baby_trigger_item_id: order_by
  id: order_by
}

"""aggregate sum on columns"""
type evolutionchain_sum_fields {
  baby_trigger_item_id: Int
  id: Int
}

"""
order by sum() on columns of table "pokemon_v2_evolutionchain"
"""
input evolutionchain_sum_order_by {
  baby_trigger_item_id: order_by
  id: order_by
}

"""aggregate var_pop on columns"""
type evolutionchain_var_pop_fields {
  baby_trigger_item_id: Float
  id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_evolutionchain"
"""
input evolutionchain_var_pop_order_by {
  baby_trigger_item_id: order_by
  id: order_by
}

"""aggregate var_samp on columns"""
type evolutionchain_var_samp_fields {
  baby_trigger_item_id: Float
  id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_evolutionchain"
"""
input evolutionchain_var_samp_order_by {
  baby_trigger_item_id: order_by
  id: order_by
}

"""aggregate variance on columns"""
type evolutionchain_variance_fields {
  baby_trigger_item_id: Float
  id: Float
}

"""
order by variance() on columns of table "pokemon_v2_evolutionchain"
"""
input evolutionchain_variance_order_by {
  baby_trigger_item_id: order_by
  id: order_by
}

"""
columns and relationships of "pokemon_v2_evolutiontrigger"
"""
type evolutiontrigger {
  """An array relationship"""
  evolutiontriggernames(
    """distinct select on columns"""
    distinct_on: [evolutiontriggername_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [evolutiontriggername_order_by!]

    """filter the rows returned"""
    where: evolutiontriggername_bool_exp
  ): [evolutiontriggername!]!

  """An aggregate relationship"""
  evolutiontriggernames_aggregate(
    """distinct select on columns"""
    distinct_on: [evolutiontriggername_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [evolutiontriggername_order_by!]

    """filter the rows returned"""
    where: evolutiontriggername_bool_exp
  ): evolutiontriggername_aggregate!
  id: Int!
  name: String!

  """An array relationship"""
  pokemonevolutions(
    """distinct select on columns"""
    distinct_on: [pokemonevolution_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonevolution_order_by!]

    """filter the rows returned"""
    where: pokemonevolution_bool_exp
  ): [pokemonevolution!]!

  """An aggregate relationship"""
  pokemonevolutions_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonevolution_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonevolution_order_by!]

    """filter the rows returned"""
    where: pokemonevolution_bool_exp
  ): pokemonevolution_aggregate!
}

"""
aggregated selection of "pokemon_v2_evolutiontrigger"
"""
type evolutiontrigger_aggregate {
  aggregate: evolutiontrigger_aggregate_fields
  nodes: [evolutiontrigger!]!
}

"""
aggregate fields of "pokemon_v2_evolutiontrigger"
"""
type evolutiontrigger_aggregate_fields {
  avg: evolutiontrigger_avg_fields
  count(columns: [evolutiontrigger_select_column!], distinct: Boolean): Int!
  max: evolutiontrigger_max_fields
  min: evolutiontrigger_min_fields
  stddev: evolutiontrigger_stddev_fields
  stddev_pop: evolutiontrigger_stddev_pop_fields
  stddev_samp: evolutiontrigger_stddev_samp_fields
  sum: evolutiontrigger_sum_fields
  var_pop: evolutiontrigger_var_pop_fields
  var_samp: evolutiontrigger_var_samp_fields
  variance: evolutiontrigger_variance_fields
}

"""aggregate avg on columns"""
type evolutiontrigger_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "pokemon_v2_evolutiontrigger".
All fields are combined with a logical 'AND'.
"""
input evolutiontrigger_bool_exp {
  _and: [evolutiontrigger_bool_exp!]
  _not: evolutiontrigger_bool_exp
  _or: [evolutiontrigger_bool_exp!]
  evolutiontriggernames: evolutiontriggername_bool_exp
  evolutiontriggernames_aggregate: evolutiontriggername_aggregate_bool_exp
  id: Int_comparison_exp
  name: String_comparison_exp
  pokemonevolutions: pokemonevolution_bool_exp
  pokemonevolutions_aggregate: pokemonevolution_aggregate_bool_exp
}

"""aggregate max on columns"""
type evolutiontrigger_max_fields {
  id: Int
  name: String
}

"""aggregate min on columns"""
type evolutiontrigger_min_fields {
  id: Int
  name: String
}

"""
Ordering options when selecting data from "pokemon_v2_evolutiontrigger".
"""
input evolutiontrigger_order_by {
  evolutiontriggernames_aggregate: evolutiontriggername_aggregate_order_by
  id: order_by
  name: order_by
  pokemonevolutions_aggregate: pokemonevolution_aggregate_order_by
}

"""
select columns of table "pokemon_v2_evolutiontrigger"
"""
enum evolutiontrigger_select_column {
  """column name"""
  id

  """column name"""
  name
}

"""aggregate stddev on columns"""
type evolutiontrigger_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type evolutiontrigger_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type evolutiontrigger_stddev_samp_fields {
  id: Float
}

"""aggregate sum on columns"""
type evolutiontrigger_sum_fields {
  id: Int
}

"""aggregate var_pop on columns"""
type evolutiontrigger_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type evolutiontrigger_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type evolutiontrigger_variance_fields {
  id: Float
}

"""
columns and relationships of "pokemon_v2_evolutiontriggername"
"""
type evolutiontriggername {
  evolution_trigger_id: Int

  """An object relationship"""
  evolutiontrigger: evolutiontrigger
  id: Int!

  """An object relationship"""
  language: language
  language_id: Int
  name: String!
}

"""
aggregated selection of "pokemon_v2_evolutiontriggername"
"""
type evolutiontriggername_aggregate {
  aggregate: evolutiontriggername_aggregate_fields
  nodes: [evolutiontriggername!]!
}

input evolutiontriggername_aggregate_bool_exp {
  count: evolutiontriggername_aggregate_bool_exp_count
}

input evolutiontriggername_aggregate_bool_exp_count {
  arguments: [evolutiontriggername_select_column!]
  distinct: Boolean
  filter: evolutiontriggername_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_evolutiontriggername"
"""
type evolutiontriggername_aggregate_fields {
  avg: evolutiontriggername_avg_fields
  count(columns: [evolutiontriggername_select_column!], distinct: Boolean): Int!
  max: evolutiontriggername_max_fields
  min: evolutiontriggername_min_fields
  stddev: evolutiontriggername_stddev_fields
  stddev_pop: evolutiontriggername_stddev_pop_fields
  stddev_samp: evolutiontriggername_stddev_samp_fields
  sum: evolutiontriggername_sum_fields
  var_pop: evolutiontriggername_var_pop_fields
  var_samp: evolutiontriggername_var_samp_fields
  variance: evolutiontriggername_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_evolutiontriggername"
"""
input evolutiontriggername_aggregate_order_by {
  avg: evolutiontriggername_avg_order_by
  count: order_by
  max: evolutiontriggername_max_order_by
  min: evolutiontriggername_min_order_by
  stddev: evolutiontriggername_stddev_order_by
  stddev_pop: evolutiontriggername_stddev_pop_order_by
  stddev_samp: evolutiontriggername_stddev_samp_order_by
  sum: evolutiontriggername_sum_order_by
  var_pop: evolutiontriggername_var_pop_order_by
  var_samp: evolutiontriggername_var_samp_order_by
  variance: evolutiontriggername_variance_order_by
}

"""aggregate avg on columns"""
type evolutiontriggername_avg_fields {
  evolution_trigger_id: Float
  id: Float
  language_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_evolutiontriggername"
"""
input evolutiontriggername_avg_order_by {
  evolution_trigger_id: order_by
  id: order_by
  language_id: order_by
}

"""
Boolean expression to filter rows from the table
"pokemon_v2_evolutiontriggername". All fields are combined with a logical 'AND'.
"""
input evolutiontriggername_bool_exp {
  _and: [evolutiontriggername_bool_exp!]
  _not: evolutiontriggername_bool_exp
  _or: [evolutiontriggername_bool_exp!]
  evolution_trigger_id: Int_comparison_exp
  evolutiontrigger: evolutiontrigger_bool_exp
  id: Int_comparison_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
  name: String_comparison_exp
}

"""aggregate max on columns"""
type evolutiontriggername_max_fields {
  evolution_trigger_id: Int
  id: Int
  language_id: Int
  name: String
}

"""
order by max() on columns of table "pokemon_v2_evolutiontriggername"
"""
input evolutiontriggername_max_order_by {
  evolution_trigger_id: order_by
  id: order_by
  language_id: order_by
  name: order_by
}

"""aggregate min on columns"""
type evolutiontriggername_min_fields {
  evolution_trigger_id: Int
  id: Int
  language_id: Int
  name: String
}

"""
order by min() on columns of table "pokemon_v2_evolutiontriggername"
"""
input evolutiontriggername_min_order_by {
  evolution_trigger_id: order_by
  id: order_by
  language_id: order_by
  name: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_evolutiontriggername".
"""
input evolutiontriggername_order_by {
  evolution_trigger_id: order_by
  evolutiontrigger: evolutiontrigger_order_by
  id: order_by
  language: language_order_by
  language_id: order_by
  name: order_by
}

"""
select columns of table "pokemon_v2_evolutiontriggername"
"""
enum evolutiontriggername_select_column {
  """column name"""
  evolution_trigger_id

  """column name"""
  id

  """column name"""
  language_id

  """column name"""
  name
}

"""aggregate stddev on columns"""
type evolutiontriggername_stddev_fields {
  evolution_trigger_id: Float
  id: Float
  language_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_evolutiontriggername"
"""
input evolutiontriggername_stddev_order_by {
  evolution_trigger_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate stddev_pop on columns"""
type evolutiontriggername_stddev_pop_fields {
  evolution_trigger_id: Float
  id: Float
  language_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_evolutiontriggername"
"""
input evolutiontriggername_stddev_pop_order_by {
  evolution_trigger_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate stddev_samp on columns"""
type evolutiontriggername_stddev_samp_fields {
  evolution_trigger_id: Float
  id: Float
  language_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_evolutiontriggername"
"""
input evolutiontriggername_stddev_samp_order_by {
  evolution_trigger_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate sum on columns"""
type evolutiontriggername_sum_fields {
  evolution_trigger_id: Int
  id: Int
  language_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_evolutiontriggername"
"""
input evolutiontriggername_sum_order_by {
  evolution_trigger_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate var_pop on columns"""
type evolutiontriggername_var_pop_fields {
  evolution_trigger_id: Float
  id: Float
  language_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_evolutiontriggername"
"""
input evolutiontriggername_var_pop_order_by {
  evolution_trigger_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate var_samp on columns"""
type evolutiontriggername_var_samp_fields {
  evolution_trigger_id: Float
  id: Float
  language_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_evolutiontriggername"
"""
input evolutiontriggername_var_samp_order_by {
  evolution_trigger_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate variance on columns"""
type evolutiontriggername_variance_fields {
  evolution_trigger_id: Float
  id: Float
  language_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_evolutiontriggername"
"""
input evolutiontriggername_variance_order_by {
  evolution_trigger_id: order_by
  id: order_by
  language_id: order_by
}

"""
columns and relationships of "pokemon_v2_experience"
"""
type experience {
  experience: Int!
  growth_rate_id: Int

  """An object relationship"""
  growthrate: growthrate
  id: Int!
  level: Int!
}

"""
aggregated selection of "pokemon_v2_experience"
"""
type experience_aggregate {
  aggregate: experience_aggregate_fields
  nodes: [experience!]!
}

input experience_aggregate_bool_exp {
  count: experience_aggregate_bool_exp_count
}

input experience_aggregate_bool_exp_count {
  arguments: [experience_select_column!]
  distinct: Boolean
  filter: experience_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_experience"
"""
type experience_aggregate_fields {
  avg: experience_avg_fields
  count(columns: [experience_select_column!], distinct: Boolean): Int!
  max: experience_max_fields
  min: experience_min_fields
  stddev: experience_stddev_fields
  stddev_pop: experience_stddev_pop_fields
  stddev_samp: experience_stddev_samp_fields
  sum: experience_sum_fields
  var_pop: experience_var_pop_fields
  var_samp: experience_var_samp_fields
  variance: experience_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_experience"
"""
input experience_aggregate_order_by {
  avg: experience_avg_order_by
  count: order_by
  max: experience_max_order_by
  min: experience_min_order_by
  stddev: experience_stddev_order_by
  stddev_pop: experience_stddev_pop_order_by
  stddev_samp: experience_stddev_samp_order_by
  sum: experience_sum_order_by
  var_pop: experience_var_pop_order_by
  var_samp: experience_var_samp_order_by
  variance: experience_variance_order_by
}

"""aggregate avg on columns"""
type experience_avg_fields {
  experience: Float
  growth_rate_id: Float
  id: Float
  level: Float
}

"""
order by avg() on columns of table "pokemon_v2_experience"
"""
input experience_avg_order_by {
  experience: order_by
  growth_rate_id: order_by
  id: order_by
  level: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_experience". All fields are combined with a logical 'AND'.
"""
input experience_bool_exp {
  _and: [experience_bool_exp!]
  _not: experience_bool_exp
  _or: [experience_bool_exp!]
  experience: Int_comparison_exp
  growth_rate_id: Int_comparison_exp
  growthrate: growthrate_bool_exp
  id: Int_comparison_exp
  level: Int_comparison_exp
}

"""aggregate max on columns"""
type experience_max_fields {
  experience: Int
  growth_rate_id: Int
  id: Int
  level: Int
}

"""
order by max() on columns of table "pokemon_v2_experience"
"""
input experience_max_order_by {
  experience: order_by
  growth_rate_id: order_by
  id: order_by
  level: order_by
}

"""aggregate min on columns"""
type experience_min_fields {
  experience: Int
  growth_rate_id: Int
  id: Int
  level: Int
}

"""
order by min() on columns of table "pokemon_v2_experience"
"""
input experience_min_order_by {
  experience: order_by
  growth_rate_id: order_by
  id: order_by
  level: order_by
}

"""Ordering options when selecting data from "pokemon_v2_experience"."""
input experience_order_by {
  experience: order_by
  growth_rate_id: order_by
  growthrate: growthrate_order_by
  id: order_by
  level: order_by
}

"""
select columns of table "pokemon_v2_experience"
"""
enum experience_select_column {
  """column name"""
  experience

  """column name"""
  growth_rate_id

  """column name"""
  id

  """column name"""
  level
}

"""aggregate stddev on columns"""
type experience_stddev_fields {
  experience: Float
  growth_rate_id: Float
  id: Float
  level: Float
}

"""
order by stddev() on columns of table "pokemon_v2_experience"
"""
input experience_stddev_order_by {
  experience: order_by
  growth_rate_id: order_by
  id: order_by
  level: order_by
}

"""aggregate stddev_pop on columns"""
type experience_stddev_pop_fields {
  experience: Float
  growth_rate_id: Float
  id: Float
  level: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_experience"
"""
input experience_stddev_pop_order_by {
  experience: order_by
  growth_rate_id: order_by
  id: order_by
  level: order_by
}

"""aggregate stddev_samp on columns"""
type experience_stddev_samp_fields {
  experience: Float
  growth_rate_id: Float
  id: Float
  level: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_experience"
"""
input experience_stddev_samp_order_by {
  experience: order_by
  growth_rate_id: order_by
  id: order_by
  level: order_by
}

"""aggregate sum on columns"""
type experience_sum_fields {
  experience: Int
  growth_rate_id: Int
  id: Int
  level: Int
}

"""
order by sum() on columns of table "pokemon_v2_experience"
"""
input experience_sum_order_by {
  experience: order_by
  growth_rate_id: order_by
  id: order_by
  level: order_by
}

"""aggregate var_pop on columns"""
type experience_var_pop_fields {
  experience: Float
  growth_rate_id: Float
  id: Float
  level: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_experience"
"""
input experience_var_pop_order_by {
  experience: order_by
  growth_rate_id: order_by
  id: order_by
  level: order_by
}

"""aggregate var_samp on columns"""
type experience_var_samp_fields {
  experience: Float
  growth_rate_id: Float
  id: Float
  level: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_experience"
"""
input experience_var_samp_order_by {
  experience: order_by
  growth_rate_id: order_by
  id: order_by
  level: order_by
}

"""aggregate variance on columns"""
type experience_variance_fields {
  experience: Float
  growth_rate_id: Float
  id: Float
  level: Float
}

"""
order by variance() on columns of table "pokemon_v2_experience"
"""
input experience_variance_order_by {
  experience: order_by
  growth_rate_id: order_by
  id: order_by
  level: order_by
}

"""
columns and relationships of "pokemon_v2_gender"
"""
type gender {
  id: Int!
  name: String!

  """An array relationship"""
  pokemonevolutions(
    """distinct select on columns"""
    distinct_on: [pokemonevolution_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonevolution_order_by!]

    """filter the rows returned"""
    where: pokemonevolution_bool_exp
  ): [pokemonevolution!]!

  """An aggregate relationship"""
  pokemonevolutions_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonevolution_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonevolution_order_by!]

    """filter the rows returned"""
    where: pokemonevolution_bool_exp
  ): pokemonevolution_aggregate!
}

"""
aggregated selection of "pokemon_v2_gender"
"""
type gender_aggregate {
  aggregate: gender_aggregate_fields
  nodes: [gender!]!
}

"""
aggregate fields of "pokemon_v2_gender"
"""
type gender_aggregate_fields {
  avg: gender_avg_fields
  count(columns: [gender_select_column!], distinct: Boolean): Int!
  max: gender_max_fields
  min: gender_min_fields
  stddev: gender_stddev_fields
  stddev_pop: gender_stddev_pop_fields
  stddev_samp: gender_stddev_samp_fields
  sum: gender_sum_fields
  var_pop: gender_var_pop_fields
  var_samp: gender_var_samp_fields
  variance: gender_variance_fields
}

"""aggregate avg on columns"""
type gender_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "pokemon_v2_gender". All fields are combined with a logical 'AND'.
"""
input gender_bool_exp {
  _and: [gender_bool_exp!]
  _not: gender_bool_exp
  _or: [gender_bool_exp!]
  id: Int_comparison_exp
  name: String_comparison_exp
  pokemonevolutions: pokemonevolution_bool_exp
  pokemonevolutions_aggregate: pokemonevolution_aggregate_bool_exp
}

"""aggregate max on columns"""
type gender_max_fields {
  id: Int
  name: String
}

"""aggregate min on columns"""
type gender_min_fields {
  id: Int
  name: String
}

"""Ordering options when selecting data from "pokemon_v2_gender"."""
input gender_order_by {
  id: order_by
  name: order_by
  pokemonevolutions_aggregate: pokemonevolution_aggregate_order_by
}

"""
select columns of table "pokemon_v2_gender"
"""
enum gender_select_column {
  """column name"""
  id

  """column name"""
  name
}

"""aggregate stddev on columns"""
type gender_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type gender_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type gender_stddev_samp_fields {
  id: Float
}

"""aggregate sum on columns"""
type gender_sum_fields {
  id: Int
}

"""aggregate var_pop on columns"""
type gender_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type gender_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type gender_variance_fields {
  id: Float
}

"""
columns and relationships of "pokemon_v2_generation"
"""
type generation {
  """An array relationship"""
  abilities(
    """distinct select on columns"""
    distinct_on: [ability_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ability_order_by!]

    """filter the rows returned"""
    where: ability_bool_exp
  ): [ability!]!

  """An aggregate relationship"""
  abilities_aggregate(
    """distinct select on columns"""
    distinct_on: [ability_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ability_order_by!]

    """filter the rows returned"""
    where: ability_bool_exp
  ): ability_aggregate!

  """An array relationship"""
  generationnames(
    """distinct select on columns"""
    distinct_on: [generationname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [generationname_order_by!]

    """filter the rows returned"""
    where: generationname_bool_exp
  ): [generationname!]!

  """An aggregate relationship"""
  generationnames_aggregate(
    """distinct select on columns"""
    distinct_on: [generationname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [generationname_order_by!]

    """filter the rows returned"""
    where: generationname_bool_exp
  ): generationname_aggregate!
  id: Int!

  """An array relationship"""
  itemgameindices(
    """distinct select on columns"""
    distinct_on: [itemgameindex_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemgameindex_order_by!]

    """filter the rows returned"""
    where: itemgameindex_bool_exp
  ): [itemgameindex!]!

  """An aggregate relationship"""
  itemgameindices_aggregate(
    """distinct select on columns"""
    distinct_on: [itemgameindex_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemgameindex_order_by!]

    """filter the rows returned"""
    where: itemgameindex_bool_exp
  ): itemgameindex_aggregate!

  """An array relationship"""
  locationgameindices(
    """distinct select on columns"""
    distinct_on: [locationgameindex_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [locationgameindex_order_by!]

    """filter the rows returned"""
    where: locationgameindex_bool_exp
  ): [locationgameindex!]!

  """An aggregate relationship"""
  locationgameindices_aggregate(
    """distinct select on columns"""
    distinct_on: [locationgameindex_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [locationgameindex_order_by!]

    """filter the rows returned"""
    where: locationgameindex_bool_exp
  ): locationgameindex_aggregate!

  """An array relationship"""
  moves(
    """distinct select on columns"""
    distinct_on: [move_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [move_order_by!]

    """filter the rows returned"""
    where: move_bool_exp
  ): [move!]!

  """An aggregate relationship"""
  moves_aggregate(
    """distinct select on columns"""
    distinct_on: [move_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [move_order_by!]

    """filter the rows returned"""
    where: move_bool_exp
  ): move_aggregate!
  name: String!

  """An array relationship"""
  pokemonabilitypasts(
    """distinct select on columns"""
    distinct_on: [pokemonabilitypast_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonabilitypast_order_by!]

    """filter the rows returned"""
    where: pokemonabilitypast_bool_exp
  ): [pokemonabilitypast!]!

  """An aggregate relationship"""
  pokemonabilitypasts_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonabilitypast_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonabilitypast_order_by!]

    """filter the rows returned"""
    where: pokemonabilitypast_bool_exp
  ): pokemonabilitypast_aggregate!

  """An array relationship"""
  pokemonformgenerations(
    """distinct select on columns"""
    distinct_on: [pokemonformgeneration_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonformgeneration_order_by!]

    """filter the rows returned"""
    where: pokemonformgeneration_bool_exp
  ): [pokemonformgeneration!]!

  """An aggregate relationship"""
  pokemonformgenerations_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonformgeneration_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonformgeneration_order_by!]

    """filter the rows returned"""
    where: pokemonformgeneration_bool_exp
  ): pokemonformgeneration_aggregate!

  """An array relationship"""
  pokemonspecies(
    """distinct select on columns"""
    distinct_on: [pokemonspecies_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonspecies_order_by!]

    """filter the rows returned"""
    where: pokemonspecies_bool_exp
  ): [pokemonspecies!]!

  """An aggregate relationship"""
  pokemonspecies_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonspecies_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonspecies_order_by!]

    """filter the rows returned"""
    where: pokemonspecies_bool_exp
  ): pokemonspecies_aggregate!

  """An array relationship"""
  pokemontypepasts(
    """distinct select on columns"""
    distinct_on: [pokemontypepast_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemontypepast_order_by!]

    """filter the rows returned"""
    where: pokemontypepast_bool_exp
  ): [pokemontypepast!]!

  """An aggregate relationship"""
  pokemontypepasts_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemontypepast_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemontypepast_order_by!]

    """filter the rows returned"""
    where: pokemontypepast_bool_exp
  ): pokemontypepast_aggregate!

  """An object relationship"""
  region: region
  region_id: Int

  """An array relationship"""
  typeefficacypasts(
    """distinct select on columns"""
    distinct_on: [typeefficacypast_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [typeefficacypast_order_by!]

    """filter the rows returned"""
    where: typeefficacypast_bool_exp
  ): [typeefficacypast!]!

  """An aggregate relationship"""
  typeefficacypasts_aggregate(
    """distinct select on columns"""
    distinct_on: [typeefficacypast_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [typeefficacypast_order_by!]

    """filter the rows returned"""
    where: typeefficacypast_bool_exp
  ): typeefficacypast_aggregate!

  """An array relationship"""
  typegameindices(
    """distinct select on columns"""
    distinct_on: [typegameindex_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [typegameindex_order_by!]

    """filter the rows returned"""
    where: typegameindex_bool_exp
  ): [typegameindex!]!

  """An aggregate relationship"""
  typegameindices_aggregate(
    """distinct select on columns"""
    distinct_on: [typegameindex_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [typegameindex_order_by!]

    """filter the rows returned"""
    where: typegameindex_bool_exp
  ): typegameindex_aggregate!

  """An array relationship"""
  types(
    """distinct select on columns"""
    distinct_on: [type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [type_order_by!]

    """filter the rows returned"""
    where: type_bool_exp
  ): [type!]!

  """An aggregate relationship"""
  types_aggregate(
    """distinct select on columns"""
    distinct_on: [type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [type_order_by!]

    """filter the rows returned"""
    where: type_bool_exp
  ): type_aggregate!

  """An array relationship"""
  versiongroups(
    """distinct select on columns"""
    distinct_on: [versiongroup_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [versiongroup_order_by!]

    """filter the rows returned"""
    where: versiongroup_bool_exp
  ): [versiongroup!]!

  """An aggregate relationship"""
  versiongroups_aggregate(
    """distinct select on columns"""
    distinct_on: [versiongroup_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [versiongroup_order_by!]

    """filter the rows returned"""
    where: versiongroup_bool_exp
  ): versiongroup_aggregate!
}

"""
aggregated selection of "pokemon_v2_generation"
"""
type generation_aggregate {
  aggregate: generation_aggregate_fields
  nodes: [generation!]!
}

input generation_aggregate_bool_exp {
  count: generation_aggregate_bool_exp_count
}

input generation_aggregate_bool_exp_count {
  arguments: [generation_select_column!]
  distinct: Boolean
  filter: generation_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_generation"
"""
type generation_aggregate_fields {
  avg: generation_avg_fields
  count(columns: [generation_select_column!], distinct: Boolean): Int!
  max: generation_max_fields
  min: generation_min_fields
  stddev: generation_stddev_fields
  stddev_pop: generation_stddev_pop_fields
  stddev_samp: generation_stddev_samp_fields
  sum: generation_sum_fields
  var_pop: generation_var_pop_fields
  var_samp: generation_var_samp_fields
  variance: generation_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_generation"
"""
input generation_aggregate_order_by {
  avg: generation_avg_order_by
  count: order_by
  max: generation_max_order_by
  min: generation_min_order_by
  stddev: generation_stddev_order_by
  stddev_pop: generation_stddev_pop_order_by
  stddev_samp: generation_stddev_samp_order_by
  sum: generation_sum_order_by
  var_pop: generation_var_pop_order_by
  var_samp: generation_var_samp_order_by
  variance: generation_variance_order_by
}

"""aggregate avg on columns"""
type generation_avg_fields {
  id: Float
  region_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_generation"
"""
input generation_avg_order_by {
  id: order_by
  region_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_generation". All fields are combined with a logical 'AND'.
"""
input generation_bool_exp {
  _and: [generation_bool_exp!]
  _not: generation_bool_exp
  _or: [generation_bool_exp!]
  abilities: ability_bool_exp
  abilities_aggregate: ability_aggregate_bool_exp
  generationnames: generationname_bool_exp
  generationnames_aggregate: generationname_aggregate_bool_exp
  id: Int_comparison_exp
  itemgameindices: itemgameindex_bool_exp
  itemgameindices_aggregate: itemgameindex_aggregate_bool_exp
  locationgameindices: locationgameindex_bool_exp
  locationgameindices_aggregate: locationgameindex_aggregate_bool_exp
  moves: move_bool_exp
  moves_aggregate: move_aggregate_bool_exp
  name: String_comparison_exp
  pokemonabilitypasts: pokemonabilitypast_bool_exp
  pokemonabilitypasts_aggregate: pokemonabilitypast_aggregate_bool_exp
  pokemonformgenerations: pokemonformgeneration_bool_exp
  pokemonformgenerations_aggregate: pokemonformgeneration_aggregate_bool_exp
  pokemonspecies: pokemonspecies_bool_exp
  pokemonspecies_aggregate: pokemonspecies_aggregate_bool_exp
  pokemontypepasts: pokemontypepast_bool_exp
  pokemontypepasts_aggregate: pokemontypepast_aggregate_bool_exp
  region: region_bool_exp
  region_id: Int_comparison_exp
  typeefficacypasts: typeefficacypast_bool_exp
  typeefficacypasts_aggregate: typeefficacypast_aggregate_bool_exp
  typegameindices: typegameindex_bool_exp
  typegameindices_aggregate: typegameindex_aggregate_bool_exp
  types: type_bool_exp
  types_aggregate: type_aggregate_bool_exp
  versiongroups: versiongroup_bool_exp
  versiongroups_aggregate: versiongroup_aggregate_bool_exp
}

"""aggregate max on columns"""
type generation_max_fields {
  id: Int
  name: String
  region_id: Int
}

"""
order by max() on columns of table "pokemon_v2_generation"
"""
input generation_max_order_by {
  id: order_by
  name: order_by
  region_id: order_by
}

"""aggregate min on columns"""
type generation_min_fields {
  id: Int
  name: String
  region_id: Int
}

"""
order by min() on columns of table "pokemon_v2_generation"
"""
input generation_min_order_by {
  id: order_by
  name: order_by
  region_id: order_by
}

"""Ordering options when selecting data from "pokemon_v2_generation"."""
input generation_order_by {
  abilities_aggregate: ability_aggregate_order_by
  generationnames_aggregate: generationname_aggregate_order_by
  id: order_by
  itemgameindices_aggregate: itemgameindex_aggregate_order_by
  locationgameindices_aggregate: locationgameindex_aggregate_order_by
  moves_aggregate: move_aggregate_order_by
  name: order_by
  pokemonabilitypasts_aggregate: pokemonabilitypast_aggregate_order_by
  pokemonformgenerations_aggregate: pokemonformgeneration_aggregate_order_by
  pokemonspecies_aggregate: pokemonspecies_aggregate_order_by
  pokemontypepasts_aggregate: pokemontypepast_aggregate_order_by
  region: region_order_by
  region_id: order_by
  typeefficacypasts_aggregate: typeefficacypast_aggregate_order_by
  typegameindices_aggregate: typegameindex_aggregate_order_by
  types_aggregate: type_aggregate_order_by
  versiongroups_aggregate: versiongroup_aggregate_order_by
}

"""
select columns of table "pokemon_v2_generation"
"""
enum generation_select_column {
  """column name"""
  id

  """column name"""
  name

  """column name"""
  region_id
}

"""aggregate stddev on columns"""
type generation_stddev_fields {
  id: Float
  region_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_generation"
"""
input generation_stddev_order_by {
  id: order_by
  region_id: order_by
}

"""aggregate stddev_pop on columns"""
type generation_stddev_pop_fields {
  id: Float
  region_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_generation"
"""
input generation_stddev_pop_order_by {
  id: order_by
  region_id: order_by
}

"""aggregate stddev_samp on columns"""
type generation_stddev_samp_fields {
  id: Float
  region_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_generation"
"""
input generation_stddev_samp_order_by {
  id: order_by
  region_id: order_by
}

"""aggregate sum on columns"""
type generation_sum_fields {
  id: Int
  region_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_generation"
"""
input generation_sum_order_by {
  id: order_by
  region_id: order_by
}

"""aggregate var_pop on columns"""
type generation_var_pop_fields {
  id: Float
  region_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_generation"
"""
input generation_var_pop_order_by {
  id: order_by
  region_id: order_by
}

"""aggregate var_samp on columns"""
type generation_var_samp_fields {
  id: Float
  region_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_generation"
"""
input generation_var_samp_order_by {
  id: order_by
  region_id: order_by
}

"""aggregate variance on columns"""
type generation_variance_fields {
  id: Float
  region_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_generation"
"""
input generation_variance_order_by {
  id: order_by
  region_id: order_by
}

"""
columns and relationships of "pokemon_v2_generationname"
"""
type generationname {
  """An object relationship"""
  generation: generation
  generation_id: Int
  id: Int!

  """An object relationship"""
  language: language
  language_id: Int
  name: String!
}

"""
aggregated selection of "pokemon_v2_generationname"
"""
type generationname_aggregate {
  aggregate: generationname_aggregate_fields
  nodes: [generationname!]!
}

input generationname_aggregate_bool_exp {
  count: generationname_aggregate_bool_exp_count
}

input generationname_aggregate_bool_exp_count {
  arguments: [generationname_select_column!]
  distinct: Boolean
  filter: generationname_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_generationname"
"""
type generationname_aggregate_fields {
  avg: generationname_avg_fields
  count(columns: [generationname_select_column!], distinct: Boolean): Int!
  max: generationname_max_fields
  min: generationname_min_fields
  stddev: generationname_stddev_fields
  stddev_pop: generationname_stddev_pop_fields
  stddev_samp: generationname_stddev_samp_fields
  sum: generationname_sum_fields
  var_pop: generationname_var_pop_fields
  var_samp: generationname_var_samp_fields
  variance: generationname_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_generationname"
"""
input generationname_aggregate_order_by {
  avg: generationname_avg_order_by
  count: order_by
  max: generationname_max_order_by
  min: generationname_min_order_by
  stddev: generationname_stddev_order_by
  stddev_pop: generationname_stddev_pop_order_by
  stddev_samp: generationname_stddev_samp_order_by
  sum: generationname_sum_order_by
  var_pop: generationname_var_pop_order_by
  var_samp: generationname_var_samp_order_by
  variance: generationname_variance_order_by
}

"""aggregate avg on columns"""
type generationname_avg_fields {
  generation_id: Float
  id: Float
  language_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_generationname"
"""
input generationname_avg_order_by {
  generation_id: order_by
  id: order_by
  language_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_generationname". All fields are combined with a logical 'AND'.
"""
input generationname_bool_exp {
  _and: [generationname_bool_exp!]
  _not: generationname_bool_exp
  _or: [generationname_bool_exp!]
  generation: generation_bool_exp
  generation_id: Int_comparison_exp
  id: Int_comparison_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
  name: String_comparison_exp
}

"""aggregate max on columns"""
type generationname_max_fields {
  generation_id: Int
  id: Int
  language_id: Int
  name: String
}

"""
order by max() on columns of table "pokemon_v2_generationname"
"""
input generationname_max_order_by {
  generation_id: order_by
  id: order_by
  language_id: order_by
  name: order_by
}

"""aggregate min on columns"""
type generationname_min_fields {
  generation_id: Int
  id: Int
  language_id: Int
  name: String
}

"""
order by min() on columns of table "pokemon_v2_generationname"
"""
input generationname_min_order_by {
  generation_id: order_by
  id: order_by
  language_id: order_by
  name: order_by
}

"""Ordering options when selecting data from "pokemon_v2_generationname"."""
input generationname_order_by {
  generation: generation_order_by
  generation_id: order_by
  id: order_by
  language: language_order_by
  language_id: order_by
  name: order_by
}

"""
select columns of table "pokemon_v2_generationname"
"""
enum generationname_select_column {
  """column name"""
  generation_id

  """column name"""
  id

  """column name"""
  language_id

  """column name"""
  name
}

"""aggregate stddev on columns"""
type generationname_stddev_fields {
  generation_id: Float
  id: Float
  language_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_generationname"
"""
input generationname_stddev_order_by {
  generation_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate stddev_pop on columns"""
type generationname_stddev_pop_fields {
  generation_id: Float
  id: Float
  language_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_generationname"
"""
input generationname_stddev_pop_order_by {
  generation_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate stddev_samp on columns"""
type generationname_stddev_samp_fields {
  generation_id: Float
  id: Float
  language_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_generationname"
"""
input generationname_stddev_samp_order_by {
  generation_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate sum on columns"""
type generationname_sum_fields {
  generation_id: Int
  id: Int
  language_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_generationname"
"""
input generationname_sum_order_by {
  generation_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate var_pop on columns"""
type generationname_var_pop_fields {
  generation_id: Float
  id: Float
  language_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_generationname"
"""
input generationname_var_pop_order_by {
  generation_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate var_samp on columns"""
type generationname_var_samp_fields {
  generation_id: Float
  id: Float
  language_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_generationname"
"""
input generationname_var_samp_order_by {
  generation_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate variance on columns"""
type generationname_variance_fields {
  generation_id: Float
  id: Float
  language_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_generationname"
"""
input generationname_variance_order_by {
  generation_id: order_by
  id: order_by
  language_id: order_by
}

"""
columns and relationships of "pokemon_v2_growthrate"
"""
type growthrate {
  """An array relationship"""
  experiences(
    """distinct select on columns"""
    distinct_on: [experience_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [experience_order_by!]

    """filter the rows returned"""
    where: experience_bool_exp
  ): [experience!]!

  """An aggregate relationship"""
  experiences_aggregate(
    """distinct select on columns"""
    distinct_on: [experience_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [experience_order_by!]

    """filter the rows returned"""
    where: experience_bool_exp
  ): experience_aggregate!
  formula: String!

  """An array relationship"""
  growthratedescriptions(
    """distinct select on columns"""
    distinct_on: [growthratedescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [growthratedescription_order_by!]

    """filter the rows returned"""
    where: growthratedescription_bool_exp
  ): [growthratedescription!]!

  """An aggregate relationship"""
  growthratedescriptions_aggregate(
    """distinct select on columns"""
    distinct_on: [growthratedescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [growthratedescription_order_by!]

    """filter the rows returned"""
    where: growthratedescription_bool_exp
  ): growthratedescription_aggregate!
  id: Int!

  """An array relationship"""
  machines(
    """distinct select on columns"""
    distinct_on: [machine_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [machine_order_by!]

    """filter the rows returned"""
    where: machine_bool_exp
  ): [machine!]!

  """An aggregate relationship"""
  machines_aggregate(
    """distinct select on columns"""
    distinct_on: [machine_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [machine_order_by!]

    """filter the rows returned"""
    where: machine_bool_exp
  ): machine_aggregate!
  name: String!

  """An array relationship"""
  pokemonspecies(
    """distinct select on columns"""
    distinct_on: [pokemonspecies_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonspecies_order_by!]

    """filter the rows returned"""
    where: pokemonspecies_bool_exp
  ): [pokemonspecies!]!

  """An aggregate relationship"""
  pokemonspecies_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonspecies_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonspecies_order_by!]

    """filter the rows returned"""
    where: pokemonspecies_bool_exp
  ): pokemonspecies_aggregate!
}

"""
aggregated selection of "pokemon_v2_growthrate"
"""
type growthrate_aggregate {
  aggregate: growthrate_aggregate_fields
  nodes: [growthrate!]!
}

"""
aggregate fields of "pokemon_v2_growthrate"
"""
type growthrate_aggregate_fields {
  avg: growthrate_avg_fields
  count(columns: [growthrate_select_column!], distinct: Boolean): Int!
  max: growthrate_max_fields
  min: growthrate_min_fields
  stddev: growthrate_stddev_fields
  stddev_pop: growthrate_stddev_pop_fields
  stddev_samp: growthrate_stddev_samp_fields
  sum: growthrate_sum_fields
  var_pop: growthrate_var_pop_fields
  var_samp: growthrate_var_samp_fields
  variance: growthrate_variance_fields
}

"""aggregate avg on columns"""
type growthrate_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "pokemon_v2_growthrate". All fields are combined with a logical 'AND'.
"""
input growthrate_bool_exp {
  _and: [growthrate_bool_exp!]
  _not: growthrate_bool_exp
  _or: [growthrate_bool_exp!]
  experiences: experience_bool_exp
  experiences_aggregate: experience_aggregate_bool_exp
  formula: String_comparison_exp
  growthratedescriptions: growthratedescription_bool_exp
  growthratedescriptions_aggregate: growthratedescription_aggregate_bool_exp
  id: Int_comparison_exp
  machines: machine_bool_exp
  machines_aggregate: machine_aggregate_bool_exp
  name: String_comparison_exp
  pokemonspecies: pokemonspecies_bool_exp
  pokemonspecies_aggregate: pokemonspecies_aggregate_bool_exp
}

"""aggregate max on columns"""
type growthrate_max_fields {
  formula: String
  id: Int
  name: String
}

"""aggregate min on columns"""
type growthrate_min_fields {
  formula: String
  id: Int
  name: String
}

"""Ordering options when selecting data from "pokemon_v2_growthrate"."""
input growthrate_order_by {
  experiences_aggregate: experience_aggregate_order_by
  formula: order_by
  growthratedescriptions_aggregate: growthratedescription_aggregate_order_by
  id: order_by
  machines_aggregate: machine_aggregate_order_by
  name: order_by
  pokemonspecies_aggregate: pokemonspecies_aggregate_order_by
}

"""
select columns of table "pokemon_v2_growthrate"
"""
enum growthrate_select_column {
  """column name"""
  formula

  """column name"""
  id

  """column name"""
  name
}

"""aggregate stddev on columns"""
type growthrate_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type growthrate_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type growthrate_stddev_samp_fields {
  id: Float
}

"""aggregate sum on columns"""
type growthrate_sum_fields {
  id: Int
}

"""aggregate var_pop on columns"""
type growthrate_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type growthrate_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type growthrate_variance_fields {
  id: Float
}

"""
columns and relationships of "pokemon_v2_growthratedescription"
"""
type growthratedescription {
  description: String!
  growth_rate_id: Int

  """An object relationship"""
  growthrate: growthrate
  id: Int!

  """An object relationship"""
  language: language
  language_id: Int
}

"""
aggregated selection of "pokemon_v2_growthratedescription"
"""
type growthratedescription_aggregate {
  aggregate: growthratedescription_aggregate_fields
  nodes: [growthratedescription!]!
}

input growthratedescription_aggregate_bool_exp {
  count: growthratedescription_aggregate_bool_exp_count
}

input growthratedescription_aggregate_bool_exp_count {
  arguments: [growthratedescription_select_column!]
  distinct: Boolean
  filter: growthratedescription_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_growthratedescription"
"""
type growthratedescription_aggregate_fields {
  avg: growthratedescription_avg_fields
  count(columns: [growthratedescription_select_column!], distinct: Boolean): Int!
  max: growthratedescription_max_fields
  min: growthratedescription_min_fields
  stddev: growthratedescription_stddev_fields
  stddev_pop: growthratedescription_stddev_pop_fields
  stddev_samp: growthratedescription_stddev_samp_fields
  sum: growthratedescription_sum_fields
  var_pop: growthratedescription_var_pop_fields
  var_samp: growthratedescription_var_samp_fields
  variance: growthratedescription_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_growthratedescription"
"""
input growthratedescription_aggregate_order_by {
  avg: growthratedescription_avg_order_by
  count: order_by
  max: growthratedescription_max_order_by
  min: growthratedescription_min_order_by
  stddev: growthratedescription_stddev_order_by
  stddev_pop: growthratedescription_stddev_pop_order_by
  stddev_samp: growthratedescription_stddev_samp_order_by
  sum: growthratedescription_sum_order_by
  var_pop: growthratedescription_var_pop_order_by
  var_samp: growthratedescription_var_samp_order_by
  variance: growthratedescription_variance_order_by
}

"""aggregate avg on columns"""
type growthratedescription_avg_fields {
  growth_rate_id: Float
  id: Float
  language_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_growthratedescription"
"""
input growthratedescription_avg_order_by {
  growth_rate_id: order_by
  id: order_by
  language_id: order_by
}

"""
Boolean expression to filter rows from the table
"pokemon_v2_growthratedescription". All fields are combined with a logical 'AND'.
"""
input growthratedescription_bool_exp {
  _and: [growthratedescription_bool_exp!]
  _not: growthratedescription_bool_exp
  _or: [growthratedescription_bool_exp!]
  description: String_comparison_exp
  growth_rate_id: Int_comparison_exp
  growthrate: growthrate_bool_exp
  id: Int_comparison_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
}

"""aggregate max on columns"""
type growthratedescription_max_fields {
  description: String
  growth_rate_id: Int
  id: Int
  language_id: Int
}

"""
order by max() on columns of table "pokemon_v2_growthratedescription"
"""
input growthratedescription_max_order_by {
  description: order_by
  growth_rate_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate min on columns"""
type growthratedescription_min_fields {
  description: String
  growth_rate_id: Int
  id: Int
  language_id: Int
}

"""
order by min() on columns of table "pokemon_v2_growthratedescription"
"""
input growthratedescription_min_order_by {
  description: order_by
  growth_rate_id: order_by
  id: order_by
  language_id: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_growthratedescription".
"""
input growthratedescription_order_by {
  description: order_by
  growth_rate_id: order_by
  growthrate: growthrate_order_by
  id: order_by
  language: language_order_by
  language_id: order_by
}

"""
select columns of table "pokemon_v2_growthratedescription"
"""
enum growthratedescription_select_column {
  """column name"""
  description

  """column name"""
  growth_rate_id

  """column name"""
  id

  """column name"""
  language_id
}

"""aggregate stddev on columns"""
type growthratedescription_stddev_fields {
  growth_rate_id: Float
  id: Float
  language_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_growthratedescription"
"""
input growthratedescription_stddev_order_by {
  growth_rate_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate stddev_pop on columns"""
type growthratedescription_stddev_pop_fields {
  growth_rate_id: Float
  id: Float
  language_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_growthratedescription"
"""
input growthratedescription_stddev_pop_order_by {
  growth_rate_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate stddev_samp on columns"""
type growthratedescription_stddev_samp_fields {
  growth_rate_id: Float
  id: Float
  language_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_growthratedescription"
"""
input growthratedescription_stddev_samp_order_by {
  growth_rate_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate sum on columns"""
type growthratedescription_sum_fields {
  growth_rate_id: Int
  id: Int
  language_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_growthratedescription"
"""
input growthratedescription_sum_order_by {
  growth_rate_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate var_pop on columns"""
type growthratedescription_var_pop_fields {
  growth_rate_id: Float
  id: Float
  language_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_growthratedescription"
"""
input growthratedescription_var_pop_order_by {
  growth_rate_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate var_samp on columns"""
type growthratedescription_var_samp_fields {
  growth_rate_id: Float
  id: Float
  language_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_growthratedescription"
"""
input growthratedescription_var_samp_order_by {
  growth_rate_id: order_by
  id: order_by
  language_id: order_by
}

"""aggregate variance on columns"""
type growthratedescription_variance_fields {
  growth_rate_id: Float
  id: Float
  language_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_growthratedescription"
"""
input growthratedescription_variance_order_by {
  growth_rate_id: order_by
  id: order_by
  language_id: order_by
}

"""
Boolean expression to compare columns of type "Int". All fields are combined with logical 'AND'.
"""
input Int_comparison_exp {
  _eq: Int
  _gt: Int
  _gte: Int
  _in: [Int!]
  _is_null: Boolean
  _lt: Int
  _lte: Int
  _neq: Int
  _nin: [Int!]
}

"""
columns and relationships of "pokemon_v2_item"
"""
type item {
  """An array relationship"""
  PokemonevolutionsByHeldItemId(
    """distinct select on columns"""
    distinct_on: [pokemonevolution_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonevolution_order_by!]

    """filter the rows returned"""
    where: pokemonevolution_bool_exp
  ): [pokemonevolution!]!

  """An aggregate relationship"""
  PokemonevolutionsByHeldItemId_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonevolution_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonevolution_order_by!]

    """filter the rows returned"""
    where: pokemonevolution_bool_exp
  ): pokemonevolution_aggregate!

  """An array relationship"""
  berries(
    """distinct select on columns"""
    distinct_on: [berry_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [berry_order_by!]

    """filter the rows returned"""
    where: berry_bool_exp
  ): [berry!]!

  """An aggregate relationship"""
  berries_aggregate(
    """distinct select on columns"""
    distinct_on: [berry_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [berry_order_by!]

    """filter the rows returned"""
    where: berry_bool_exp
  ): berry_aggregate!
  cost: Int

  """An array relationship"""
  evolutionchains(
    """distinct select on columns"""
    distinct_on: [evolutionchain_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [evolutionchain_order_by!]

    """filter the rows returned"""
    where: evolutionchain_bool_exp
  ): [evolutionchain!]!

  """An aggregate relationship"""
  evolutionchains_aggregate(
    """distinct select on columns"""
    distinct_on: [evolutionchain_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [evolutionchain_order_by!]

    """filter the rows returned"""
    where: evolutionchain_bool_exp
  ): evolutionchain_aggregate!
  fling_power: Int
  id: Int!
  item_category_id: Int
  item_fling_effect_id: Int

  """An array relationship"""
  itemattributemaps(
    """distinct select on columns"""
    distinct_on: [itemattributemap_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemattributemap_order_by!]

    """filter the rows returned"""
    where: itemattributemap_bool_exp
  ): [itemattributemap!]!

  """An aggregate relationship"""
  itemattributemaps_aggregate(
    """distinct select on columns"""
    distinct_on: [itemattributemap_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemattributemap_order_by!]

    """filter the rows returned"""
    where: itemattributemap_bool_exp
  ): itemattributemap_aggregate!

  """An object relationship"""
  itemcategory: itemcategory

  """An array relationship"""
  itemeffecttexts(
    """distinct select on columns"""
    distinct_on: [itemeffecttext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemeffecttext_order_by!]

    """filter the rows returned"""
    where: itemeffecttext_bool_exp
  ): [itemeffecttext!]!

  """An aggregate relationship"""
  itemeffecttexts_aggregate(
    """distinct select on columns"""
    distinct_on: [itemeffecttext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemeffecttext_order_by!]

    """filter the rows returned"""
    where: itemeffecttext_bool_exp
  ): itemeffecttext_aggregate!

  """An array relationship"""
  itemflavortexts(
    """distinct select on columns"""
    distinct_on: [itemflavortext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemflavortext_order_by!]

    """filter the rows returned"""
    where: itemflavortext_bool_exp
  ): [itemflavortext!]!

  """An aggregate relationship"""
  itemflavortexts_aggregate(
    """distinct select on columns"""
    distinct_on: [itemflavortext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemflavortext_order_by!]

    """filter the rows returned"""
    where: itemflavortext_bool_exp
  ): itemflavortext_aggregate!

  """An object relationship"""
  itemflingeffect: itemflingeffect

  """An array relationship"""
  itemgameindices(
    """distinct select on columns"""
    distinct_on: [itemgameindex_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemgameindex_order_by!]

    """filter the rows returned"""
    where: itemgameindex_bool_exp
  ): [itemgameindex!]!

  """An aggregate relationship"""
  itemgameindices_aggregate(
    """distinct select on columns"""
    distinct_on: [itemgameindex_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemgameindex_order_by!]

    """filter the rows returned"""
    where: itemgameindex_bool_exp
  ): itemgameindex_aggregate!

  """An array relationship"""
  itemnames(
    """distinct select on columns"""
    distinct_on: [itemname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemname_order_by!]

    """filter the rows returned"""
    where: itemname_bool_exp
  ): [itemname!]!

  """An aggregate relationship"""
  itemnames_aggregate(
    """distinct select on columns"""
    distinct_on: [itemname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemname_order_by!]

    """filter the rows returned"""
    where: itemname_bool_exp
  ): itemname_aggregate!

  """An array relationship"""
  itemsprites(
    """distinct select on columns"""
    distinct_on: [itemsprites_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemsprites_order_by!]

    """filter the rows returned"""
    where: itemsprites_bool_exp
  ): [itemsprites!]!

  """An aggregate relationship"""
  itemsprites_aggregate(
    """distinct select on columns"""
    distinct_on: [itemsprites_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemsprites_order_by!]

    """filter the rows returned"""
    where: itemsprites_bool_exp
  ): itemsprites_aggregate!

  """An array relationship"""
  machines(
    """distinct select on columns"""
    distinct_on: [machine_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [machine_order_by!]

    """filter the rows returned"""
    where: machine_bool_exp
  ): [machine!]!

  """An aggregate relationship"""
  machines_aggregate(
    """distinct select on columns"""
    distinct_on: [machine_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [machine_order_by!]

    """filter the rows returned"""
    where: machine_bool_exp
  ): machine_aggregate!
  name: String!

  """An array relationship"""
  pokemonevolutions(
    """distinct select on columns"""
    distinct_on: [pokemonevolution_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonevolution_order_by!]

    """filter the rows returned"""
    where: pokemonevolution_bool_exp
  ): [pokemonevolution!]!

  """An aggregate relationship"""
  pokemonevolutions_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonevolution_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonevolution_order_by!]

    """filter the rows returned"""
    where: pokemonevolution_bool_exp
  ): pokemonevolution_aggregate!

  """An array relationship"""
  pokemonitems(
    """distinct select on columns"""
    distinct_on: [pokemonitem_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonitem_order_by!]

    """filter the rows returned"""
    where: pokemonitem_bool_exp
  ): [pokemonitem!]!

  """An aggregate relationship"""
  pokemonitems_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonitem_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonitem_order_by!]

    """filter the rows returned"""
    where: pokemonitem_bool_exp
  ): pokemonitem_aggregate!
}

"""
aggregated selection of "pokemon_v2_item"
"""
type item_aggregate {
  aggregate: item_aggregate_fields
  nodes: [item!]!
}

input item_aggregate_bool_exp {
  count: item_aggregate_bool_exp_count
}

input item_aggregate_bool_exp_count {
  arguments: [item_select_column!]
  distinct: Boolean
  filter: item_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_item"
"""
type item_aggregate_fields {
  avg: item_avg_fields
  count(columns: [item_select_column!], distinct: Boolean): Int!
  max: item_max_fields
  min: item_min_fields
  stddev: item_stddev_fields
  stddev_pop: item_stddev_pop_fields
  stddev_samp: item_stddev_samp_fields
  sum: item_sum_fields
  var_pop: item_var_pop_fields
  var_samp: item_var_samp_fields
  variance: item_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_item"
"""
input item_aggregate_order_by {
  avg: item_avg_order_by
  count: order_by
  max: item_max_order_by
  min: item_min_order_by
  stddev: item_stddev_order_by
  stddev_pop: item_stddev_pop_order_by
  stddev_samp: item_stddev_samp_order_by
  sum: item_sum_order_by
  var_pop: item_var_pop_order_by
  var_samp: item_var_samp_order_by
  variance: item_variance_order_by
}

"""aggregate avg on columns"""
type item_avg_fields {
  cost: Float
  fling_power: Float
  id: Float
  item_category_id: Float
  item_fling_effect_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_item"
"""
input item_avg_order_by {
  cost: order_by
  fling_power: order_by
  id: order_by
  item_category_id: order_by
  item_fling_effect_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_item". All fields are combined with a logical 'AND'.
"""
input item_bool_exp {
  PokemonevolutionsByHeldItemId: pokemonevolution_bool_exp
  PokemonevolutionsByHeldItemId_aggregate: pokemonevolution_aggregate_bool_exp
  _and: [item_bool_exp!]
  _not: item_bool_exp
  _or: [item_bool_exp!]
  berries: berry_bool_exp
  berries_aggregate: berry_aggregate_bool_exp
  cost: Int_comparison_exp
  evolutionchains: evolutionchain_bool_exp
  evolutionchains_aggregate: evolutionchain_aggregate_bool_exp
  fling_power: Int_comparison_exp
  id: Int_comparison_exp
  item_category_id: Int_comparison_exp
  item_fling_effect_id: Int_comparison_exp
  itemattributemaps: itemattributemap_bool_exp
  itemattributemaps_aggregate: itemattributemap_aggregate_bool_exp
  itemcategory: itemcategory_bool_exp
  itemeffecttexts: itemeffecttext_bool_exp
  itemeffecttexts_aggregate: itemeffecttext_aggregate_bool_exp
  itemflavortexts: itemflavortext_bool_exp
  itemflavortexts_aggregate: itemflavortext_aggregate_bool_exp
  itemflingeffect: itemflingeffect_bool_exp
  itemgameindices: itemgameindex_bool_exp
  itemgameindices_aggregate: itemgameindex_aggregate_bool_exp
  itemnames: itemname_bool_exp
  itemnames_aggregate: itemname_aggregate_bool_exp
  itemsprites: itemsprites_bool_exp
  itemsprites_aggregate: itemsprites_aggregate_bool_exp
  machines: machine_bool_exp
  machines_aggregate: machine_aggregate_bool_exp
  name: String_comparison_exp
  pokemonevolutions: pokemonevolution_bool_exp
  pokemonevolutions_aggregate: pokemonevolution_aggregate_bool_exp
  pokemonitems: pokemonitem_bool_exp
  pokemonitems_aggregate: pokemonitem_aggregate_bool_exp
}

"""aggregate max on columns"""
type item_max_fields {
  cost: Int
  fling_power: Int
  id: Int
  item_category_id: Int
  item_fling_effect_id: Int
  name: String
}

"""
order by max() on columns of table "pokemon_v2_item"
"""
input item_max_order_by {
  cost: order_by
  fling_power: order_by
  id: order_by
  item_category_id: order_by
  item_fling_effect_id: order_by
  name: order_by
}

"""aggregate min on columns"""
type item_min_fields {
  cost: Int
  fling_power: Int
  id: Int
  item_category_id: Int
  item_fling_effect_id: Int
  name: String
}

"""
order by min() on columns of table "pokemon_v2_item"
"""
input item_min_order_by {
  cost: order_by
  fling_power: order_by
  id: order_by
  item_category_id: order_by
  item_fling_effect_id: order_by
  name: order_by
}

"""Ordering options when selecting data from "pokemon_v2_item"."""
input item_order_by {
  PokemonevolutionsByHeldItemId_aggregate: pokemonevolution_aggregate_order_by
  berries_aggregate: berry_aggregate_order_by
  cost: order_by
  evolutionchains_aggregate: evolutionchain_aggregate_order_by
  fling_power: order_by
  id: order_by
  item_category_id: order_by
  item_fling_effect_id: order_by
  itemattributemaps_aggregate: itemattributemap_aggregate_order_by
  itemcategory: itemcategory_order_by
  itemeffecttexts_aggregate: itemeffecttext_aggregate_order_by
  itemflavortexts_aggregate: itemflavortext_aggregate_order_by
  itemflingeffect: itemflingeffect_order_by
  itemgameindices_aggregate: itemgameindex_aggregate_order_by
  itemnames_aggregate: itemname_aggregate_order_by
  itemsprites_aggregate: itemsprites_aggregate_order_by
  machines_aggregate: machine_aggregate_order_by
  name: order_by
  pokemonevolutions_aggregate: pokemonevolution_aggregate_order_by
  pokemonitems_aggregate: pokemonitem_aggregate_order_by
}

"""
select columns of table "pokemon_v2_item"
"""
enum item_select_column {
  """column name"""
  cost

  """column name"""
  fling_power

  """column name"""
  id

  """column name"""
  item_category_id

  """column name"""
  item_fling_effect_id

  """column name"""
  name
}

"""aggregate stddev on columns"""
type item_stddev_fields {
  cost: Float
  fling_power: Float
  id: Float
  item_category_id: Float
  item_fling_effect_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_item"
"""
input item_stddev_order_by {
  cost: order_by
  fling_power: order_by
  id: order_by
  item_category_id: order_by
  item_fling_effect_id: order_by
}

"""aggregate stddev_pop on columns"""
type item_stddev_pop_fields {
  cost: Float
  fling_power: Float
  id: Float
  item_category_id: Float
  item_fling_effect_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_item"
"""
input item_stddev_pop_order_by {
  cost: order_by
  fling_power: order_by
  id: order_by
  item_category_id: order_by
  item_fling_effect_id: order_by
}

"""aggregate stddev_samp on columns"""
type item_stddev_samp_fields {
  cost: Float
  fling_power: Float
  id: Float
  item_category_id: Float
  item_fling_effect_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_item"
"""
input item_stddev_samp_order_by {
  cost: order_by
  fling_power: order_by
  id: order_by
  item_category_id: order_by
  item_fling_effect_id: order_by
}

"""aggregate sum on columns"""
type item_sum_fields {
  cost: Int
  fling_power: Int
  id: Int
  item_category_id: Int
  item_fling_effect_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_item"
"""
input item_sum_order_by {
  cost: order_by
  fling_power: order_by
  id: order_by
  item_category_id: order_by
  item_fling_effect_id: order_by
}

"""aggregate var_pop on columns"""
type item_var_pop_fields {
  cost: Float
  fling_power: Float
  id: Float
  item_category_id: Float
  item_fling_effect_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_item"
"""
input item_var_pop_order_by {
  cost: order_by
  fling_power: order_by
  id: order_by
  item_category_id: order_by
  item_fling_effect_id: order_by
}

"""aggregate var_samp on columns"""
type item_var_samp_fields {
  cost: Float
  fling_power: Float
  id: Float
  item_category_id: Float
  item_fling_effect_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_item"
"""
input item_var_samp_order_by {
  cost: order_by
  fling_power: order_by
  id: order_by
  item_category_id: order_by
  item_fling_effect_id: order_by
}

"""aggregate variance on columns"""
type item_variance_fields {
  cost: Float
  fling_power: Float
  id: Float
  item_category_id: Float
  item_fling_effect_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_item"
"""
input item_variance_order_by {
  cost: order_by
  fling_power: order_by
  id: order_by
  item_category_id: order_by
  item_fling_effect_id: order_by
}

"""
columns and relationships of "pokemon_v2_itemattribute"
"""
type itemattribute {
  id: Int!

  """An array relationship"""
  itemattributedescriptions(
    """distinct select on columns"""
    distinct_on: [itemattributedescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemattributedescription_order_by!]

    """filter the rows returned"""
    where: itemattributedescription_bool_exp
  ): [itemattributedescription!]!

  """An aggregate relationship"""
  itemattributedescriptions_aggregate(
    """distinct select on columns"""
    distinct_on: [itemattributedescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemattributedescription_order_by!]

    """filter the rows returned"""
    where: itemattributedescription_bool_exp
  ): itemattributedescription_aggregate!

  """An array relationship"""
  itemattributemaps(
    """distinct select on columns"""
    distinct_on: [itemattributemap_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemattributemap_order_by!]

    """filter the rows returned"""
    where: itemattributemap_bool_exp
  ): [itemattributemap!]!

  """An aggregate relationship"""
  itemattributemaps_aggregate(
    """distinct select on columns"""
    distinct_on: [itemattributemap_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemattributemap_order_by!]

    """filter the rows returned"""
    where: itemattributemap_bool_exp
  ): itemattributemap_aggregate!

  """An array relationship"""
  itemattributenames(
    """distinct select on columns"""
    distinct_on: [itemattributename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemattributename_order_by!]

    """filter the rows returned"""
    where: itemattributename_bool_exp
  ): [itemattributename!]!

  """An aggregate relationship"""
  itemattributenames_aggregate(
    """distinct select on columns"""
    distinct_on: [itemattributename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemattributename_order_by!]

    """filter the rows returned"""
    where: itemattributename_bool_exp
  ): itemattributename_aggregate!
  name: String!
}

"""
aggregated selection of "pokemon_v2_itemattribute"
"""
type itemattribute_aggregate {
  aggregate: itemattribute_aggregate_fields
  nodes: [itemattribute!]!
}

"""
aggregate fields of "pokemon_v2_itemattribute"
"""
type itemattribute_aggregate_fields {
  avg: itemattribute_avg_fields
  count(columns: [itemattribute_select_column!], distinct: Boolean): Int!
  max: itemattribute_max_fields
  min: itemattribute_min_fields
  stddev: itemattribute_stddev_fields
  stddev_pop: itemattribute_stddev_pop_fields
  stddev_samp: itemattribute_stddev_samp_fields
  sum: itemattribute_sum_fields
  var_pop: itemattribute_var_pop_fields
  var_samp: itemattribute_var_samp_fields
  variance: itemattribute_variance_fields
}

"""aggregate avg on columns"""
type itemattribute_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "pokemon_v2_itemattribute". All fields are combined with a logical 'AND'.
"""
input itemattribute_bool_exp {
  _and: [itemattribute_bool_exp!]
  _not: itemattribute_bool_exp
  _or: [itemattribute_bool_exp!]
  id: Int_comparison_exp
  itemattributedescriptions: itemattributedescription_bool_exp
  itemattributedescriptions_aggregate: itemattributedescription_aggregate_bool_exp
  itemattributemaps: itemattributemap_bool_exp
  itemattributemaps_aggregate: itemattributemap_aggregate_bool_exp
  itemattributenames: itemattributename_bool_exp
  itemattributenames_aggregate: itemattributename_aggregate_bool_exp
  name: String_comparison_exp
}

"""aggregate max on columns"""
type itemattribute_max_fields {
  id: Int
  name: String
}

"""aggregate min on columns"""
type itemattribute_min_fields {
  id: Int
  name: String
}

"""Ordering options when selecting data from "pokemon_v2_itemattribute"."""
input itemattribute_order_by {
  id: order_by
  itemattributedescriptions_aggregate: itemattributedescription_aggregate_order_by
  itemattributemaps_aggregate: itemattributemap_aggregate_order_by
  itemattributenames_aggregate: itemattributename_aggregate_order_by
  name: order_by
}

"""
select columns of table "pokemon_v2_itemattribute"
"""
enum itemattribute_select_column {
  """column name"""
  id

  """column name"""
  name
}

"""aggregate stddev on columns"""
type itemattribute_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type itemattribute_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type itemattribute_stddev_samp_fields {
  id: Float
}

"""aggregate sum on columns"""
type itemattribute_sum_fields {
  id: Int
}

"""aggregate var_pop on columns"""
type itemattribute_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type itemattribute_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type itemattribute_variance_fields {
  id: Float
}

"""
columns and relationships of "pokemon_v2_itemattributedescription"
"""
type itemattributedescription {
  description: String!
  id: Int!
  item_attribute_id: Int

  """An object relationship"""
  itemattribute: itemattribute

  """An object relationship"""
  language: language
  language_id: Int
}

"""
aggregated selection of "pokemon_v2_itemattributedescription"
"""
type itemattributedescription_aggregate {
  aggregate: itemattributedescription_aggregate_fields
  nodes: [itemattributedescription!]!
}

input itemattributedescription_aggregate_bool_exp {
  count: itemattributedescription_aggregate_bool_exp_count
}

input itemattributedescription_aggregate_bool_exp_count {
  arguments: [itemattributedescription_select_column!]
  distinct: Boolean
  filter: itemattributedescription_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_itemattributedescription"
"""
type itemattributedescription_aggregate_fields {
  avg: itemattributedescription_avg_fields
  count(columns: [itemattributedescription_select_column!], distinct: Boolean): Int!
  max: itemattributedescription_max_fields
  min: itemattributedescription_min_fields
  stddev: itemattributedescription_stddev_fields
  stddev_pop: itemattributedescription_stddev_pop_fields
  stddev_samp: itemattributedescription_stddev_samp_fields
  sum: itemattributedescription_sum_fields
  var_pop: itemattributedescription_var_pop_fields
  var_samp: itemattributedescription_var_samp_fields
  variance: itemattributedescription_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_itemattributedescription"
"""
input itemattributedescription_aggregate_order_by {
  avg: itemattributedescription_avg_order_by
  count: order_by
  max: itemattributedescription_max_order_by
  min: itemattributedescription_min_order_by
  stddev: itemattributedescription_stddev_order_by
  stddev_pop: itemattributedescription_stddev_pop_order_by
  stddev_samp: itemattributedescription_stddev_samp_order_by
  sum: itemattributedescription_sum_order_by
  var_pop: itemattributedescription_var_pop_order_by
  var_samp: itemattributedescription_var_samp_order_by
  variance: itemattributedescription_variance_order_by
}

"""aggregate avg on columns"""
type itemattributedescription_avg_fields {
  id: Float
  item_attribute_id: Float
  language_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_itemattributedescription"
"""
input itemattributedescription_avg_order_by {
  id: order_by
  item_attribute_id: order_by
  language_id: order_by
}

"""
Boolean expression to filter rows from the table
"pokemon_v2_itemattributedescription". All fields are combined with a logical 'AND'.
"""
input itemattributedescription_bool_exp {
  _and: [itemattributedescription_bool_exp!]
  _not: itemattributedescription_bool_exp
  _or: [itemattributedescription_bool_exp!]
  description: String_comparison_exp
  id: Int_comparison_exp
  item_attribute_id: Int_comparison_exp
  itemattribute: itemattribute_bool_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
}

"""aggregate max on columns"""
type itemattributedescription_max_fields {
  description: String
  id: Int
  item_attribute_id: Int
  language_id: Int
}

"""
order by max() on columns of table "pokemon_v2_itemattributedescription"
"""
input itemattributedescription_max_order_by {
  description: order_by
  id: order_by
  item_attribute_id: order_by
  language_id: order_by
}

"""aggregate min on columns"""
type itemattributedescription_min_fields {
  description: String
  id: Int
  item_attribute_id: Int
  language_id: Int
}

"""
order by min() on columns of table "pokemon_v2_itemattributedescription"
"""
input itemattributedescription_min_order_by {
  description: order_by
  id: order_by
  item_attribute_id: order_by
  language_id: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_itemattributedescription".
"""
input itemattributedescription_order_by {
  description: order_by
  id: order_by
  item_attribute_id: order_by
  itemattribute: itemattribute_order_by
  language: language_order_by
  language_id: order_by
}

"""
select columns of table "pokemon_v2_itemattributedescription"
"""
enum itemattributedescription_select_column {
  """column name"""
  description

  """column name"""
  id

  """column name"""
  item_attribute_id

  """column name"""
  language_id
}

"""aggregate stddev on columns"""
type itemattributedescription_stddev_fields {
  id: Float
  item_attribute_id: Float
  language_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_itemattributedescription"
"""
input itemattributedescription_stddev_order_by {
  id: order_by
  item_attribute_id: order_by
  language_id: order_by
}

"""aggregate stddev_pop on columns"""
type itemattributedescription_stddev_pop_fields {
  id: Float
  item_attribute_id: Float
  language_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_itemattributedescription"
"""
input itemattributedescription_stddev_pop_order_by {
  id: order_by
  item_attribute_id: order_by
  language_id: order_by
}

"""aggregate stddev_samp on columns"""
type itemattributedescription_stddev_samp_fields {
  id: Float
  item_attribute_id: Float
  language_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_itemattributedescription"
"""
input itemattributedescription_stddev_samp_order_by {
  id: order_by
  item_attribute_id: order_by
  language_id: order_by
}

"""aggregate sum on columns"""
type itemattributedescription_sum_fields {
  id: Int
  item_attribute_id: Int
  language_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_itemattributedescription"
"""
input itemattributedescription_sum_order_by {
  id: order_by
  item_attribute_id: order_by
  language_id: order_by
}

"""aggregate var_pop on columns"""
type itemattributedescription_var_pop_fields {
  id: Float
  item_attribute_id: Float
  language_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_itemattributedescription"
"""
input itemattributedescription_var_pop_order_by {
  id: order_by
  item_attribute_id: order_by
  language_id: order_by
}

"""aggregate var_samp on columns"""
type itemattributedescription_var_samp_fields {
  id: Float
  item_attribute_id: Float
  language_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_itemattributedescription"
"""
input itemattributedescription_var_samp_order_by {
  id: order_by
  item_attribute_id: order_by
  language_id: order_by
}

"""aggregate variance on columns"""
type itemattributedescription_variance_fields {
  id: Float
  item_attribute_id: Float
  language_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_itemattributedescription"
"""
input itemattributedescription_variance_order_by {
  id: order_by
  item_attribute_id: order_by
  language_id: order_by
}

"""
columns and relationships of "pokemon_v2_itemattributemap"
"""
type itemattributemap {
  id: Int!

  """An object relationship"""
  item: item
  item_attribute_id: Int
  item_id: Int

  """An object relationship"""
  itemattribute: itemattribute
}

"""
aggregated selection of "pokemon_v2_itemattributemap"
"""
type itemattributemap_aggregate {
  aggregate: itemattributemap_aggregate_fields
  nodes: [itemattributemap!]!
}

input itemattributemap_aggregate_bool_exp {
  count: itemattributemap_aggregate_bool_exp_count
}

input itemattributemap_aggregate_bool_exp_count {
  arguments: [itemattributemap_select_column!]
  distinct: Boolean
  filter: itemattributemap_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_itemattributemap"
"""
type itemattributemap_aggregate_fields {
  avg: itemattributemap_avg_fields
  count(columns: [itemattributemap_select_column!], distinct: Boolean): Int!
  max: itemattributemap_max_fields
  min: itemattributemap_min_fields
  stddev: itemattributemap_stddev_fields
  stddev_pop: itemattributemap_stddev_pop_fields
  stddev_samp: itemattributemap_stddev_samp_fields
  sum: itemattributemap_sum_fields
  var_pop: itemattributemap_var_pop_fields
  var_samp: itemattributemap_var_samp_fields
  variance: itemattributemap_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_itemattributemap"
"""
input itemattributemap_aggregate_order_by {
  avg: itemattributemap_avg_order_by
  count: order_by
  max: itemattributemap_max_order_by
  min: itemattributemap_min_order_by
  stddev: itemattributemap_stddev_order_by
  stddev_pop: itemattributemap_stddev_pop_order_by
  stddev_samp: itemattributemap_stddev_samp_order_by
  sum: itemattributemap_sum_order_by
  var_pop: itemattributemap_var_pop_order_by
  var_samp: itemattributemap_var_samp_order_by
  variance: itemattributemap_variance_order_by
}

"""aggregate avg on columns"""
type itemattributemap_avg_fields {
  id: Float
  item_attribute_id: Float
  item_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_itemattributemap"
"""
input itemattributemap_avg_order_by {
  id: order_by
  item_attribute_id: order_by
  item_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_itemattributemap".
All fields are combined with a logical 'AND'.
"""
input itemattributemap_bool_exp {
  _and: [itemattributemap_bool_exp!]
  _not: itemattributemap_bool_exp
  _or: [itemattributemap_bool_exp!]
  id: Int_comparison_exp
  item: item_bool_exp
  item_attribute_id: Int_comparison_exp
  item_id: Int_comparison_exp
  itemattribute: itemattribute_bool_exp
}

"""aggregate max on columns"""
type itemattributemap_max_fields {
  id: Int
  item_attribute_id: Int
  item_id: Int
}

"""
order by max() on columns of table "pokemon_v2_itemattributemap"
"""
input itemattributemap_max_order_by {
  id: order_by
  item_attribute_id: order_by
  item_id: order_by
}

"""aggregate min on columns"""
type itemattributemap_min_fields {
  id: Int
  item_attribute_id: Int
  item_id: Int
}

"""
order by min() on columns of table "pokemon_v2_itemattributemap"
"""
input itemattributemap_min_order_by {
  id: order_by
  item_attribute_id: order_by
  item_id: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_itemattributemap".
"""
input itemattributemap_order_by {
  id: order_by
  item: item_order_by
  item_attribute_id: order_by
  item_id: order_by
  itemattribute: itemattribute_order_by
}

"""
select columns of table "pokemon_v2_itemattributemap"
"""
enum itemattributemap_select_column {
  """column name"""
  id

  """column name"""
  item_attribute_id

  """column name"""
  item_id
}

"""aggregate stddev on columns"""
type itemattributemap_stddev_fields {
  id: Float
  item_attribute_id: Float
  item_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_itemattributemap"
"""
input itemattributemap_stddev_order_by {
  id: order_by
  item_attribute_id: order_by
  item_id: order_by
}

"""aggregate stddev_pop on columns"""
type itemattributemap_stddev_pop_fields {
  id: Float
  item_attribute_id: Float
  item_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_itemattributemap"
"""
input itemattributemap_stddev_pop_order_by {
  id: order_by
  item_attribute_id: order_by
  item_id: order_by
}

"""aggregate stddev_samp on columns"""
type itemattributemap_stddev_samp_fields {
  id: Float
  item_attribute_id: Float
  item_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_itemattributemap"
"""
input itemattributemap_stddev_samp_order_by {
  id: order_by
  item_attribute_id: order_by
  item_id: order_by
}

"""aggregate sum on columns"""
type itemattributemap_sum_fields {
  id: Int
  item_attribute_id: Int
  item_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_itemattributemap"
"""
input itemattributemap_sum_order_by {
  id: order_by
  item_attribute_id: order_by
  item_id: order_by
}

"""aggregate var_pop on columns"""
type itemattributemap_var_pop_fields {
  id: Float
  item_attribute_id: Float
  item_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_itemattributemap"
"""
input itemattributemap_var_pop_order_by {
  id: order_by
  item_attribute_id: order_by
  item_id: order_by
}

"""aggregate var_samp on columns"""
type itemattributemap_var_samp_fields {
  id: Float
  item_attribute_id: Float
  item_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_itemattributemap"
"""
input itemattributemap_var_samp_order_by {
  id: order_by
  item_attribute_id: order_by
  item_id: order_by
}

"""aggregate variance on columns"""
type itemattributemap_variance_fields {
  id: Float
  item_attribute_id: Float
  item_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_itemattributemap"
"""
input itemattributemap_variance_order_by {
  id: order_by
  item_attribute_id: order_by
  item_id: order_by
}

"""
columns and relationships of "pokemon_v2_itemattributename"
"""
type itemattributename {
  id: Int!
  item_attribute_id: Int

  """An object relationship"""
  itemattribute: itemattribute

  """An object relationship"""
  language: language
  language_id: Int
  name: String!
}

"""
aggregated selection of "pokemon_v2_itemattributename"
"""
type itemattributename_aggregate {
  aggregate: itemattributename_aggregate_fields
  nodes: [itemattributename!]!
}

input itemattributename_aggregate_bool_exp {
  count: itemattributename_aggregate_bool_exp_count
}

input itemattributename_aggregate_bool_exp_count {
  arguments: [itemattributename_select_column!]
  distinct: Boolean
  filter: itemattributename_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_itemattributename"
"""
type itemattributename_aggregate_fields {
  avg: itemattributename_avg_fields
  count(columns: [itemattributename_select_column!], distinct: Boolean): Int!
  max: itemattributename_max_fields
  min: itemattributename_min_fields
  stddev: itemattributename_stddev_fields
  stddev_pop: itemattributename_stddev_pop_fields
  stddev_samp: itemattributename_stddev_samp_fields
  sum: itemattributename_sum_fields
  var_pop: itemattributename_var_pop_fields
  var_samp: itemattributename_var_samp_fields
  variance: itemattributename_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_itemattributename"
"""
input itemattributename_aggregate_order_by {
  avg: itemattributename_avg_order_by
  count: order_by
  max: itemattributename_max_order_by
  min: itemattributename_min_order_by
  stddev: itemattributename_stddev_order_by
  stddev_pop: itemattributename_stddev_pop_order_by
  stddev_samp: itemattributename_stddev_samp_order_by
  sum: itemattributename_sum_order_by
  var_pop: itemattributename_var_pop_order_by
  var_samp: itemattributename_var_samp_order_by
  variance: itemattributename_variance_order_by
}

"""aggregate avg on columns"""
type itemattributename_avg_fields {
  id: Float
  item_attribute_id: Float
  language_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_itemattributename"
"""
input itemattributename_avg_order_by {
  id: order_by
  item_attribute_id: order_by
  language_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_itemattributename".
All fields are combined with a logical 'AND'.
"""
input itemattributename_bool_exp {
  _and: [itemattributename_bool_exp!]
  _not: itemattributename_bool_exp
  _or: [itemattributename_bool_exp!]
  id: Int_comparison_exp
  item_attribute_id: Int_comparison_exp
  itemattribute: itemattribute_bool_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
  name: String_comparison_exp
}

"""aggregate max on columns"""
type itemattributename_max_fields {
  id: Int
  item_attribute_id: Int
  language_id: Int
  name: String
}

"""
order by max() on columns of table "pokemon_v2_itemattributename"
"""
input itemattributename_max_order_by {
  id: order_by
  item_attribute_id: order_by
  language_id: order_by
  name: order_by
}

"""aggregate min on columns"""
type itemattributename_min_fields {
  id: Int
  item_attribute_id: Int
  language_id: Int
  name: String
}

"""
order by min() on columns of table "pokemon_v2_itemattributename"
"""
input itemattributename_min_order_by {
  id: order_by
  item_attribute_id: order_by
  language_id: order_by
  name: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_itemattributename".
"""
input itemattributename_order_by {
  id: order_by
  item_attribute_id: order_by
  itemattribute: itemattribute_order_by
  language: language_order_by
  language_id: order_by
  name: order_by
}

"""
select columns of table "pokemon_v2_itemattributename"
"""
enum itemattributename_select_column {
  """column name"""
  id

  """column name"""
  item_attribute_id

  """column name"""
  language_id

  """column name"""
  name
}

"""aggregate stddev on columns"""
type itemattributename_stddev_fields {
  id: Float
  item_attribute_id: Float
  language_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_itemattributename"
"""
input itemattributename_stddev_order_by {
  id: order_by
  item_attribute_id: order_by
  language_id: order_by
}

"""aggregate stddev_pop on columns"""
type itemattributename_stddev_pop_fields {
  id: Float
  item_attribute_id: Float
  language_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_itemattributename"
"""
input itemattributename_stddev_pop_order_by {
  id: order_by
  item_attribute_id: order_by
  language_id: order_by
}

"""aggregate stddev_samp on columns"""
type itemattributename_stddev_samp_fields {
  id: Float
  item_attribute_id: Float
  language_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_itemattributename"
"""
input itemattributename_stddev_samp_order_by {
  id: order_by
  item_attribute_id: order_by
  language_id: order_by
}

"""aggregate sum on columns"""
type itemattributename_sum_fields {
  id: Int
  item_attribute_id: Int
  language_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_itemattributename"
"""
input itemattributename_sum_order_by {
  id: order_by
  item_attribute_id: order_by
  language_id: order_by
}

"""aggregate var_pop on columns"""
type itemattributename_var_pop_fields {
  id: Float
  item_attribute_id: Float
  language_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_itemattributename"
"""
input itemattributename_var_pop_order_by {
  id: order_by
  item_attribute_id: order_by
  language_id: order_by
}

"""aggregate var_samp on columns"""
type itemattributename_var_samp_fields {
  id: Float
  item_attribute_id: Float
  language_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_itemattributename"
"""
input itemattributename_var_samp_order_by {
  id: order_by
  item_attribute_id: order_by
  language_id: order_by
}

"""aggregate variance on columns"""
type itemattributename_variance_fields {
  id: Float
  item_attribute_id: Float
  language_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_itemattributename"
"""
input itemattributename_variance_order_by {
  id: order_by
  item_attribute_id: order_by
  language_id: order_by
}

"""
columns and relationships of "pokemon_v2_itemcategory"
"""
type itemcategory {
  id: Int!
  item_pocket_id: Int

  """An array relationship"""
  itemcategorynames(
    """distinct select on columns"""
    distinct_on: [itemcategoryname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemcategoryname_order_by!]

    """filter the rows returned"""
    where: itemcategoryname_bool_exp
  ): [itemcategoryname!]!

  """An aggregate relationship"""
  itemcategorynames_aggregate(
    """distinct select on columns"""
    distinct_on: [itemcategoryname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemcategoryname_order_by!]

    """filter the rows returned"""
    where: itemcategoryname_bool_exp
  ): itemcategoryname_aggregate!

  """An object relationship"""
  itempocket: itempocket

  """An array relationship"""
  items(
    """distinct select on columns"""
    distinct_on: [item_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [item_order_by!]

    """filter the rows returned"""
    where: item_bool_exp
  ): [item!]!

  """An aggregate relationship"""
  items_aggregate(
    """distinct select on columns"""
    distinct_on: [item_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [item_order_by!]

    """filter the rows returned"""
    where: item_bool_exp
  ): item_aggregate!
  name: String!
}

"""
aggregated selection of "pokemon_v2_itemcategory"
"""
type itemcategory_aggregate {
  aggregate: itemcategory_aggregate_fields
  nodes: [itemcategory!]!
}

input itemcategory_aggregate_bool_exp {
  count: itemcategory_aggregate_bool_exp_count
}

input itemcategory_aggregate_bool_exp_count {
  arguments: [itemcategory_select_column!]
  distinct: Boolean
  filter: itemcategory_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_itemcategory"
"""
type itemcategory_aggregate_fields {
  avg: itemcategory_avg_fields
  count(columns: [itemcategory_select_column!], distinct: Boolean): Int!
  max: itemcategory_max_fields
  min: itemcategory_min_fields
  stddev: itemcategory_stddev_fields
  stddev_pop: itemcategory_stddev_pop_fields
  stddev_samp: itemcategory_stddev_samp_fields
  sum: itemcategory_sum_fields
  var_pop: itemcategory_var_pop_fields
  var_samp: itemcategory_var_samp_fields
  variance: itemcategory_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_itemcategory"
"""
input itemcategory_aggregate_order_by {
  avg: itemcategory_avg_order_by
  count: order_by
  max: itemcategory_max_order_by
  min: itemcategory_min_order_by
  stddev: itemcategory_stddev_order_by
  stddev_pop: itemcategory_stddev_pop_order_by
  stddev_samp: itemcategory_stddev_samp_order_by
  sum: itemcategory_sum_order_by
  var_pop: itemcategory_var_pop_order_by
  var_samp: itemcategory_var_samp_order_by
  variance: itemcategory_variance_order_by
}

"""aggregate avg on columns"""
type itemcategory_avg_fields {
  id: Float
  item_pocket_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_itemcategory"
"""
input itemcategory_avg_order_by {
  id: order_by
  item_pocket_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_itemcategory". All fields are combined with a logical 'AND'.
"""
input itemcategory_bool_exp {
  _and: [itemcategory_bool_exp!]
  _not: itemcategory_bool_exp
  _or: [itemcategory_bool_exp!]
  id: Int_comparison_exp
  item_pocket_id: Int_comparison_exp
  itemcategorynames: itemcategoryname_bool_exp
  itemcategorynames_aggregate: itemcategoryname_aggregate_bool_exp
  itempocket: itempocket_bool_exp
  items: item_bool_exp
  items_aggregate: item_aggregate_bool_exp
  name: String_comparison_exp
}

"""aggregate max on columns"""
type itemcategory_max_fields {
  id: Int
  item_pocket_id: Int
  name: String
}

"""
order by max() on columns of table "pokemon_v2_itemcategory"
"""
input itemcategory_max_order_by {
  id: order_by
  item_pocket_id: order_by
  name: order_by
}

"""aggregate min on columns"""
type itemcategory_min_fields {
  id: Int
  item_pocket_id: Int
  name: String
}

"""
order by min() on columns of table "pokemon_v2_itemcategory"
"""
input itemcategory_min_order_by {
  id: order_by
  item_pocket_id: order_by
  name: order_by
}

"""Ordering options when selecting data from "pokemon_v2_itemcategory"."""
input itemcategory_order_by {
  id: order_by
  item_pocket_id: order_by
  itemcategorynames_aggregate: itemcategoryname_aggregate_order_by
  itempocket: itempocket_order_by
  items_aggregate: item_aggregate_order_by
  name: order_by
}

"""
select columns of table "pokemon_v2_itemcategory"
"""
enum itemcategory_select_column {
  """column name"""
  id

  """column name"""
  item_pocket_id

  """column name"""
  name
}

"""aggregate stddev on columns"""
type itemcategory_stddev_fields {
  id: Float
  item_pocket_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_itemcategory"
"""
input itemcategory_stddev_order_by {
  id: order_by
  item_pocket_id: order_by
}

"""aggregate stddev_pop on columns"""
type itemcategory_stddev_pop_fields {
  id: Float
  item_pocket_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_itemcategory"
"""
input itemcategory_stddev_pop_order_by {
  id: order_by
  item_pocket_id: order_by
}

"""aggregate stddev_samp on columns"""
type itemcategory_stddev_samp_fields {
  id: Float
  item_pocket_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_itemcategory"
"""
input itemcategory_stddev_samp_order_by {
  id: order_by
  item_pocket_id: order_by
}

"""aggregate sum on columns"""
type itemcategory_sum_fields {
  id: Int
  item_pocket_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_itemcategory"
"""
input itemcategory_sum_order_by {
  id: order_by
  item_pocket_id: order_by
}

"""aggregate var_pop on columns"""
type itemcategory_var_pop_fields {
  id: Float
  item_pocket_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_itemcategory"
"""
input itemcategory_var_pop_order_by {
  id: order_by
  item_pocket_id: order_by
}

"""aggregate var_samp on columns"""
type itemcategory_var_samp_fields {
  id: Float
  item_pocket_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_itemcategory"
"""
input itemcategory_var_samp_order_by {
  id: order_by
  item_pocket_id: order_by
}

"""aggregate variance on columns"""
type itemcategory_variance_fields {
  id: Float
  item_pocket_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_itemcategory"
"""
input itemcategory_variance_order_by {
  id: order_by
  item_pocket_id: order_by
}

"""
columns and relationships of "pokemon_v2_itemcategoryname"
"""
type itemcategoryname {
  id: Int!
  item_category_id: Int

  """An object relationship"""
  itemcategory: itemcategory

  """An object relationship"""
  language: language
  language_id: Int
  name: String!
}

"""
aggregated selection of "pokemon_v2_itemcategoryname"
"""
type itemcategoryname_aggregate {
  aggregate: itemcategoryname_aggregate_fields
  nodes: [itemcategoryname!]!
}

input itemcategoryname_aggregate_bool_exp {
  count: itemcategoryname_aggregate_bool_exp_count
}

input itemcategoryname_aggregate_bool_exp_count {
  arguments: [itemcategoryname_select_column!]
  distinct: Boolean
  filter: itemcategoryname_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_itemcategoryname"
"""
type itemcategoryname_aggregate_fields {
  avg: itemcategoryname_avg_fields
  count(columns: [itemcategoryname_select_column!], distinct: Boolean): Int!
  max: itemcategoryname_max_fields
  min: itemcategoryname_min_fields
  stddev: itemcategoryname_stddev_fields
  stddev_pop: itemcategoryname_stddev_pop_fields
  stddev_samp: itemcategoryname_stddev_samp_fields
  sum: itemcategoryname_sum_fields
  var_pop: itemcategoryname_var_pop_fields
  var_samp: itemcategoryname_var_samp_fields
  variance: itemcategoryname_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_itemcategoryname"
"""
input itemcategoryname_aggregate_order_by {
  avg: itemcategoryname_avg_order_by
  count: order_by
  max: itemcategoryname_max_order_by
  min: itemcategoryname_min_order_by
  stddev: itemcategoryname_stddev_order_by
  stddev_pop: itemcategoryname_stddev_pop_order_by
  stddev_samp: itemcategoryname_stddev_samp_order_by
  sum: itemcategoryname_sum_order_by
  var_pop: itemcategoryname_var_pop_order_by
  var_samp: itemcategoryname_var_samp_order_by
  variance: itemcategoryname_variance_order_by
}

"""aggregate avg on columns"""
type itemcategoryname_avg_fields {
  id: Float
  item_category_id: Float
  language_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_itemcategoryname"
"""
input itemcategoryname_avg_order_by {
  id: order_by
  item_category_id: order_by
  language_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_itemcategoryname".
All fields are combined with a logical 'AND'.
"""
input itemcategoryname_bool_exp {
  _and: [itemcategoryname_bool_exp!]
  _not: itemcategoryname_bool_exp
  _or: [itemcategoryname_bool_exp!]
  id: Int_comparison_exp
  item_category_id: Int_comparison_exp
  itemcategory: itemcategory_bool_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
  name: String_comparison_exp
}

"""aggregate max on columns"""
type itemcategoryname_max_fields {
  id: Int
  item_category_id: Int
  language_id: Int
  name: String
}

"""
order by max() on columns of table "pokemon_v2_itemcategoryname"
"""
input itemcategoryname_max_order_by {
  id: order_by
  item_category_id: order_by
  language_id: order_by
  name: order_by
}

"""aggregate min on columns"""
type itemcategoryname_min_fields {
  id: Int
  item_category_id: Int
  language_id: Int
  name: String
}

"""
order by min() on columns of table "pokemon_v2_itemcategoryname"
"""
input itemcategoryname_min_order_by {
  id: order_by
  item_category_id: order_by
  language_id: order_by
  name: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_itemcategoryname".
"""
input itemcategoryname_order_by {
  id: order_by
  item_category_id: order_by
  itemcategory: itemcategory_order_by
  language: language_order_by
  language_id: order_by
  name: order_by
}

"""
select columns of table "pokemon_v2_itemcategoryname"
"""
enum itemcategoryname_select_column {
  """column name"""
  id

  """column name"""
  item_category_id

  """column name"""
  language_id

  """column name"""
  name
}

"""aggregate stddev on columns"""
type itemcategoryname_stddev_fields {
  id: Float
  item_category_id: Float
  language_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_itemcategoryname"
"""
input itemcategoryname_stddev_order_by {
  id: order_by
  item_category_id: order_by
  language_id: order_by
}

"""aggregate stddev_pop on columns"""
type itemcategoryname_stddev_pop_fields {
  id: Float
  item_category_id: Float
  language_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_itemcategoryname"
"""
input itemcategoryname_stddev_pop_order_by {
  id: order_by
  item_category_id: order_by
  language_id: order_by
}

"""aggregate stddev_samp on columns"""
type itemcategoryname_stddev_samp_fields {
  id: Float
  item_category_id: Float
  language_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_itemcategoryname"
"""
input itemcategoryname_stddev_samp_order_by {
  id: order_by
  item_category_id: order_by
  language_id: order_by
}

"""aggregate sum on columns"""
type itemcategoryname_sum_fields {
  id: Int
  item_category_id: Int
  language_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_itemcategoryname"
"""
input itemcategoryname_sum_order_by {
  id: order_by
  item_category_id: order_by
  language_id: order_by
}

"""aggregate var_pop on columns"""
type itemcategoryname_var_pop_fields {
  id: Float
  item_category_id: Float
  language_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_itemcategoryname"
"""
input itemcategoryname_var_pop_order_by {
  id: order_by
  item_category_id: order_by
  language_id: order_by
}

"""aggregate var_samp on columns"""
type itemcategoryname_var_samp_fields {
  id: Float
  item_category_id: Float
  language_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_itemcategoryname"
"""
input itemcategoryname_var_samp_order_by {
  id: order_by
  item_category_id: order_by
  language_id: order_by
}

"""aggregate variance on columns"""
type itemcategoryname_variance_fields {
  id: Float
  item_category_id: Float
  language_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_itemcategoryname"
"""
input itemcategoryname_variance_order_by {
  id: order_by
  item_category_id: order_by
  language_id: order_by
}

"""
columns and relationships of "pokemon_v2_itemeffecttext"
"""
type itemeffecttext {
  effect: String!
  id: Int!

  """An object relationship"""
  item: item
  item_id: Int

  """An object relationship"""
  language: language
  language_id: Int
  short_effect: String!
}

"""
aggregated selection of "pokemon_v2_itemeffecttext"
"""
type itemeffecttext_aggregate {
  aggregate: itemeffecttext_aggregate_fields
  nodes: [itemeffecttext!]!
}

input itemeffecttext_aggregate_bool_exp {
  count: itemeffecttext_aggregate_bool_exp_count
}

input itemeffecttext_aggregate_bool_exp_count {
  arguments: [itemeffecttext_select_column!]
  distinct: Boolean
  filter: itemeffecttext_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_itemeffecttext"
"""
type itemeffecttext_aggregate_fields {
  avg: itemeffecttext_avg_fields
  count(columns: [itemeffecttext_select_column!], distinct: Boolean): Int!
  max: itemeffecttext_max_fields
  min: itemeffecttext_min_fields
  stddev: itemeffecttext_stddev_fields
  stddev_pop: itemeffecttext_stddev_pop_fields
  stddev_samp: itemeffecttext_stddev_samp_fields
  sum: itemeffecttext_sum_fields
  var_pop: itemeffecttext_var_pop_fields
  var_samp: itemeffecttext_var_samp_fields
  variance: itemeffecttext_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_itemeffecttext"
"""
input itemeffecttext_aggregate_order_by {
  avg: itemeffecttext_avg_order_by
  count: order_by
  max: itemeffecttext_max_order_by
  min: itemeffecttext_min_order_by
  stddev: itemeffecttext_stddev_order_by
  stddev_pop: itemeffecttext_stddev_pop_order_by
  stddev_samp: itemeffecttext_stddev_samp_order_by
  sum: itemeffecttext_sum_order_by
  var_pop: itemeffecttext_var_pop_order_by
  var_samp: itemeffecttext_var_samp_order_by
  variance: itemeffecttext_variance_order_by
}

"""aggregate avg on columns"""
type itemeffecttext_avg_fields {
  id: Float
  item_id: Float
  language_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_itemeffecttext"
"""
input itemeffecttext_avg_order_by {
  id: order_by
  item_id: order_by
  language_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_itemeffecttext". All fields are combined with a logical 'AND'.
"""
input itemeffecttext_bool_exp {
  _and: [itemeffecttext_bool_exp!]
  _not: itemeffecttext_bool_exp
  _or: [itemeffecttext_bool_exp!]
  effect: String_comparison_exp
  id: Int_comparison_exp
  item: item_bool_exp
  item_id: Int_comparison_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
  short_effect: String_comparison_exp
}

"""aggregate max on columns"""
type itemeffecttext_max_fields {
  effect: String
  id: Int
  item_id: Int
  language_id: Int
  short_effect: String
}

"""
order by max() on columns of table "pokemon_v2_itemeffecttext"
"""
input itemeffecttext_max_order_by {
  effect: order_by
  id: order_by
  item_id: order_by
  language_id: order_by
  short_effect: order_by
}

"""aggregate min on columns"""
type itemeffecttext_min_fields {
  effect: String
  id: Int
  item_id: Int
  language_id: Int
  short_effect: String
}

"""
order by min() on columns of table "pokemon_v2_itemeffecttext"
"""
input itemeffecttext_min_order_by {
  effect: order_by
  id: order_by
  item_id: order_by
  language_id: order_by
  short_effect: order_by
}

"""Ordering options when selecting data from "pokemon_v2_itemeffecttext"."""
input itemeffecttext_order_by {
  effect: order_by
  id: order_by
  item: item_order_by
  item_id: order_by
  language: language_order_by
  language_id: order_by
  short_effect: order_by
}

"""
select columns of table "pokemon_v2_itemeffecttext"
"""
enum itemeffecttext_select_column {
  """column name"""
  effect

  """column name"""
  id

  """column name"""
  item_id

  """column name"""
  language_id

  """column name"""
  short_effect
}

"""aggregate stddev on columns"""
type itemeffecttext_stddev_fields {
  id: Float
  item_id: Float
  language_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_itemeffecttext"
"""
input itemeffecttext_stddev_order_by {
  id: order_by
  item_id: order_by
  language_id: order_by
}

"""aggregate stddev_pop on columns"""
type itemeffecttext_stddev_pop_fields {
  id: Float
  item_id: Float
  language_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_itemeffecttext"
"""
input itemeffecttext_stddev_pop_order_by {
  id: order_by
  item_id: order_by
  language_id: order_by
}

"""aggregate stddev_samp on columns"""
type itemeffecttext_stddev_samp_fields {
  id: Float
  item_id: Float
  language_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_itemeffecttext"
"""
input itemeffecttext_stddev_samp_order_by {
  id: order_by
  item_id: order_by
  language_id: order_by
}

"""aggregate sum on columns"""
type itemeffecttext_sum_fields {
  id: Int
  item_id: Int
  language_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_itemeffecttext"
"""
input itemeffecttext_sum_order_by {
  id: order_by
  item_id: order_by
  language_id: order_by
}

"""aggregate var_pop on columns"""
type itemeffecttext_var_pop_fields {
  id: Float
  item_id: Float
  language_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_itemeffecttext"
"""
input itemeffecttext_var_pop_order_by {
  id: order_by
  item_id: order_by
  language_id: order_by
}

"""aggregate var_samp on columns"""
type itemeffecttext_var_samp_fields {
  id: Float
  item_id: Float
  language_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_itemeffecttext"
"""
input itemeffecttext_var_samp_order_by {
  id: order_by
  item_id: order_by
  language_id: order_by
}

"""aggregate variance on columns"""
type itemeffecttext_variance_fields {
  id: Float
  item_id: Float
  language_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_itemeffecttext"
"""
input itemeffecttext_variance_order_by {
  id: order_by
  item_id: order_by
  language_id: order_by
}

"""
columns and relationships of "pokemon_v2_itemflavortext"
"""
type itemflavortext {
  flavor_text: String!
  id: Int!

  """An object relationship"""
  item: item
  item_id: Int

  """An object relationship"""
  language: language
  language_id: Int
  version_group_id: Int

  """An object relationship"""
  versiongroup: versiongroup
}

"""
aggregated selection of "pokemon_v2_itemflavortext"
"""
type itemflavortext_aggregate {
  aggregate: itemflavortext_aggregate_fields
  nodes: [itemflavortext!]!
}

input itemflavortext_aggregate_bool_exp {
  count: itemflavortext_aggregate_bool_exp_count
}

input itemflavortext_aggregate_bool_exp_count {
  arguments: [itemflavortext_select_column!]
  distinct: Boolean
  filter: itemflavortext_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_itemflavortext"
"""
type itemflavortext_aggregate_fields {
  avg: itemflavortext_avg_fields
  count(columns: [itemflavortext_select_column!], distinct: Boolean): Int!
  max: itemflavortext_max_fields
  min: itemflavortext_min_fields
  stddev: itemflavortext_stddev_fields
  stddev_pop: itemflavortext_stddev_pop_fields
  stddev_samp: itemflavortext_stddev_samp_fields
  sum: itemflavortext_sum_fields
  var_pop: itemflavortext_var_pop_fields
  var_samp: itemflavortext_var_samp_fields
  variance: itemflavortext_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_itemflavortext"
"""
input itemflavortext_aggregate_order_by {
  avg: itemflavortext_avg_order_by
  count: order_by
  max: itemflavortext_max_order_by
  min: itemflavortext_min_order_by
  stddev: itemflavortext_stddev_order_by
  stddev_pop: itemflavortext_stddev_pop_order_by
  stddev_samp: itemflavortext_stddev_samp_order_by
  sum: itemflavortext_sum_order_by
  var_pop: itemflavortext_var_pop_order_by
  var_samp: itemflavortext_var_samp_order_by
  variance: itemflavortext_variance_order_by
}

"""aggregate avg on columns"""
type itemflavortext_avg_fields {
  id: Float
  item_id: Float
  language_id: Float
  version_group_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_itemflavortext"
"""
input itemflavortext_avg_order_by {
  id: order_by
  item_id: order_by
  language_id: order_by
  version_group_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_itemflavortext". All fields are combined with a logical 'AND'.
"""
input itemflavortext_bool_exp {
  _and: [itemflavortext_bool_exp!]
  _not: itemflavortext_bool_exp
  _or: [itemflavortext_bool_exp!]
  flavor_text: String_comparison_exp
  id: Int_comparison_exp
  item: item_bool_exp
  item_id: Int_comparison_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
  version_group_id: Int_comparison_exp
  versiongroup: versiongroup_bool_exp
}

"""aggregate max on columns"""
type itemflavortext_max_fields {
  flavor_text: String
  id: Int
  item_id: Int
  language_id: Int
  version_group_id: Int
}

"""
order by max() on columns of table "pokemon_v2_itemflavortext"
"""
input itemflavortext_max_order_by {
  flavor_text: order_by
  id: order_by
  item_id: order_by
  language_id: order_by
  version_group_id: order_by
}

"""aggregate min on columns"""
type itemflavortext_min_fields {
  flavor_text: String
  id: Int
  item_id: Int
  language_id: Int
  version_group_id: Int
}

"""
order by min() on columns of table "pokemon_v2_itemflavortext"
"""
input itemflavortext_min_order_by {
  flavor_text: order_by
  id: order_by
  item_id: order_by
  language_id: order_by
  version_group_id: order_by
}

"""Ordering options when selecting data from "pokemon_v2_itemflavortext"."""
input itemflavortext_order_by {
  flavor_text: order_by
  id: order_by
  item: item_order_by
  item_id: order_by
  language: language_order_by
  language_id: order_by
  version_group_id: order_by
  versiongroup: versiongroup_order_by
}

"""
select columns of table "pokemon_v2_itemflavortext"
"""
enum itemflavortext_select_column {
  """column name"""
  flavor_text

  """column name"""
  id

  """column name"""
  item_id

  """column name"""
  language_id

  """column name"""
  version_group_id
}

"""aggregate stddev on columns"""
type itemflavortext_stddev_fields {
  id: Float
  item_id: Float
  language_id: Float
  version_group_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_itemflavortext"
"""
input itemflavortext_stddev_order_by {
  id: order_by
  item_id: order_by
  language_id: order_by
  version_group_id: order_by
}

"""aggregate stddev_pop on columns"""
type itemflavortext_stddev_pop_fields {
  id: Float
  item_id: Float
  language_id: Float
  version_group_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_itemflavortext"
"""
input itemflavortext_stddev_pop_order_by {
  id: order_by
  item_id: order_by
  language_id: order_by
  version_group_id: order_by
}

"""aggregate stddev_samp on columns"""
type itemflavortext_stddev_samp_fields {
  id: Float
  item_id: Float
  language_id: Float
  version_group_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_itemflavortext"
"""
input itemflavortext_stddev_samp_order_by {
  id: order_by
  item_id: order_by
  language_id: order_by
  version_group_id: order_by
}

"""aggregate sum on columns"""
type itemflavortext_sum_fields {
  id: Int
  item_id: Int
  language_id: Int
  version_group_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_itemflavortext"
"""
input itemflavortext_sum_order_by {
  id: order_by
  item_id: order_by
  language_id: order_by
  version_group_id: order_by
}

"""aggregate var_pop on columns"""
type itemflavortext_var_pop_fields {
  id: Float
  item_id: Float
  language_id: Float
  version_group_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_itemflavortext"
"""
input itemflavortext_var_pop_order_by {
  id: order_by
  item_id: order_by
  language_id: order_by
  version_group_id: order_by
}

"""aggregate var_samp on columns"""
type itemflavortext_var_samp_fields {
  id: Float
  item_id: Float
  language_id: Float
  version_group_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_itemflavortext"
"""
input itemflavortext_var_samp_order_by {
  id: order_by
  item_id: order_by
  language_id: order_by
  version_group_id: order_by
}

"""aggregate variance on columns"""
type itemflavortext_variance_fields {
  id: Float
  item_id: Float
  language_id: Float
  version_group_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_itemflavortext"
"""
input itemflavortext_variance_order_by {
  id: order_by
  item_id: order_by
  language_id: order_by
  version_group_id: order_by
}

"""
columns and relationships of "pokemon_v2_itemflingeffect"
"""
type itemflingeffect {
  id: Int!

  """An array relationship"""
  itemflingeffecteffecttexts(
    """distinct select on columns"""
    distinct_on: [itemflingeffecteffecttext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemflingeffecteffecttext_order_by!]

    """filter the rows returned"""
    where: itemflingeffecteffecttext_bool_exp
  ): [itemflingeffecteffecttext!]!

  """An aggregate relationship"""
  itemflingeffecteffecttexts_aggregate(
    """distinct select on columns"""
    distinct_on: [itemflingeffecteffecttext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemflingeffecteffecttext_order_by!]

    """filter the rows returned"""
    where: itemflingeffecteffecttext_bool_exp
  ): itemflingeffecteffecttext_aggregate!

  """An array relationship"""
  items(
    """distinct select on columns"""
    distinct_on: [item_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [item_order_by!]

    """filter the rows returned"""
    where: item_bool_exp
  ): [item!]!

  """An aggregate relationship"""
  items_aggregate(
    """distinct select on columns"""
    distinct_on: [item_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [item_order_by!]

    """filter the rows returned"""
    where: item_bool_exp
  ): item_aggregate!
  name: String!
}

"""
aggregated selection of "pokemon_v2_itemflingeffect"
"""
type itemflingeffect_aggregate {
  aggregate: itemflingeffect_aggregate_fields
  nodes: [itemflingeffect!]!
}

"""
aggregate fields of "pokemon_v2_itemflingeffect"
"""
type itemflingeffect_aggregate_fields {
  avg: itemflingeffect_avg_fields
  count(columns: [itemflingeffect_select_column!], distinct: Boolean): Int!
  max: itemflingeffect_max_fields
  min: itemflingeffect_min_fields
  stddev: itemflingeffect_stddev_fields
  stddev_pop: itemflingeffect_stddev_pop_fields
  stddev_samp: itemflingeffect_stddev_samp_fields
  sum: itemflingeffect_sum_fields
  var_pop: itemflingeffect_var_pop_fields
  var_samp: itemflingeffect_var_samp_fields
  variance: itemflingeffect_variance_fields
}

"""aggregate avg on columns"""
type itemflingeffect_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "pokemon_v2_itemflingeffect". All fields are combined with a logical 'AND'.
"""
input itemflingeffect_bool_exp {
  _and: [itemflingeffect_bool_exp!]
  _not: itemflingeffect_bool_exp
  _or: [itemflingeffect_bool_exp!]
  id: Int_comparison_exp
  itemflingeffecteffecttexts: itemflingeffecteffecttext_bool_exp
  itemflingeffecteffecttexts_aggregate: itemflingeffecteffecttext_aggregate_bool_exp
  items: item_bool_exp
  items_aggregate: item_aggregate_bool_exp
  name: String_comparison_exp
}

"""aggregate max on columns"""
type itemflingeffect_max_fields {
  id: Int
  name: String
}

"""aggregate min on columns"""
type itemflingeffect_min_fields {
  id: Int
  name: String
}

"""
Ordering options when selecting data from "pokemon_v2_itemflingeffect".
"""
input itemflingeffect_order_by {
  id: order_by
  itemflingeffecteffecttexts_aggregate: itemflingeffecteffecttext_aggregate_order_by
  items_aggregate: item_aggregate_order_by
  name: order_by
}

"""
select columns of table "pokemon_v2_itemflingeffect"
"""
enum itemflingeffect_select_column {
  """column name"""
  id

  """column name"""
  name
}

"""aggregate stddev on columns"""
type itemflingeffect_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type itemflingeffect_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type itemflingeffect_stddev_samp_fields {
  id: Float
}

"""aggregate sum on columns"""
type itemflingeffect_sum_fields {
  id: Int
}

"""aggregate var_pop on columns"""
type itemflingeffect_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type itemflingeffect_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type itemflingeffect_variance_fields {
  id: Float
}

"""
columns and relationships of "pokemon_v2_itemflingeffecteffecttext"
"""
type itemflingeffecteffecttext {
  effect: String!
  id: Int!
  item_fling_effect_id: Int

  """An object relationship"""
  itemflingeffect: itemflingeffect

  """An object relationship"""
  language: language
  language_id: Int
}

"""
aggregated selection of "pokemon_v2_itemflingeffecteffecttext"
"""
type itemflingeffecteffecttext_aggregate {
  aggregate: itemflingeffecteffecttext_aggregate_fields
  nodes: [itemflingeffecteffecttext!]!
}

input itemflingeffecteffecttext_aggregate_bool_exp {
  count: itemflingeffecteffecttext_aggregate_bool_exp_count
}

input itemflingeffecteffecttext_aggregate_bool_exp_count {
  arguments: [itemflingeffecteffecttext_select_column!]
  distinct: Boolean
  filter: itemflingeffecteffecttext_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_itemflingeffecteffecttext"
"""
type itemflingeffecteffecttext_aggregate_fields {
  avg: itemflingeffecteffecttext_avg_fields
  count(columns: [itemflingeffecteffecttext_select_column!], distinct: Boolean): Int!
  max: itemflingeffecteffecttext_max_fields
  min: itemflingeffecteffecttext_min_fields
  stddev: itemflingeffecteffecttext_stddev_fields
  stddev_pop: itemflingeffecteffecttext_stddev_pop_fields
  stddev_samp: itemflingeffecteffecttext_stddev_samp_fields
  sum: itemflingeffecteffecttext_sum_fields
  var_pop: itemflingeffecteffecttext_var_pop_fields
  var_samp: itemflingeffecteffecttext_var_samp_fields
  variance: itemflingeffecteffecttext_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_itemflingeffecteffecttext"
"""
input itemflingeffecteffecttext_aggregate_order_by {
  avg: itemflingeffecteffecttext_avg_order_by
  count: order_by
  max: itemflingeffecteffecttext_max_order_by
  min: itemflingeffecteffecttext_min_order_by
  stddev: itemflingeffecteffecttext_stddev_order_by
  stddev_pop: itemflingeffecteffecttext_stddev_pop_order_by
  stddev_samp: itemflingeffecteffecttext_stddev_samp_order_by
  sum: itemflingeffecteffecttext_sum_order_by
  var_pop: itemflingeffecteffecttext_var_pop_order_by
  var_samp: itemflingeffecteffecttext_var_samp_order_by
  variance: itemflingeffecteffecttext_variance_order_by
}

"""aggregate avg on columns"""
type itemflingeffecteffecttext_avg_fields {
  id: Float
  item_fling_effect_id: Float
  language_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_itemflingeffecteffecttext"
"""
input itemflingeffecteffecttext_avg_order_by {
  id: order_by
  item_fling_effect_id: order_by
  language_id: order_by
}

"""
Boolean expression to filter rows from the table
"pokemon_v2_itemflingeffecteffecttext". All fields are combined with a logical 'AND'.
"""
input itemflingeffecteffecttext_bool_exp {
  _and: [itemflingeffecteffecttext_bool_exp!]
  _not: itemflingeffecteffecttext_bool_exp
  _or: [itemflingeffecteffecttext_bool_exp!]
  effect: String_comparison_exp
  id: Int_comparison_exp
  item_fling_effect_id: Int_comparison_exp
  itemflingeffect: itemflingeffect_bool_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
}

"""aggregate max on columns"""
type itemflingeffecteffecttext_max_fields {
  effect: String
  id: Int
  item_fling_effect_id: Int
  language_id: Int
}

"""
order by max() on columns of table "pokemon_v2_itemflingeffecteffecttext"
"""
input itemflingeffecteffecttext_max_order_by {
  effect: order_by
  id: order_by
  item_fling_effect_id: order_by
  language_id: order_by
}

"""aggregate min on columns"""
type itemflingeffecteffecttext_min_fields {
  effect: String
  id: Int
  item_fling_effect_id: Int
  language_id: Int
}

"""
order by min() on columns of table "pokemon_v2_itemflingeffecteffecttext"
"""
input itemflingeffecteffecttext_min_order_by {
  effect: order_by
  id: order_by
  item_fling_effect_id: order_by
  language_id: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_itemflingeffecteffecttext".
"""
input itemflingeffecteffecttext_order_by {
  effect: order_by
  id: order_by
  item_fling_effect_id: order_by
  itemflingeffect: itemflingeffect_order_by
  language: language_order_by
  language_id: order_by
}

"""
select columns of table "pokemon_v2_itemflingeffecteffecttext"
"""
enum itemflingeffecteffecttext_select_column {
  """column name"""
  effect

  """column name"""
  id

  """column name"""
  item_fling_effect_id

  """column name"""
  language_id
}

"""aggregate stddev on columns"""
type itemflingeffecteffecttext_stddev_fields {
  id: Float
  item_fling_effect_id: Float
  language_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_itemflingeffecteffecttext"
"""
input itemflingeffecteffecttext_stddev_order_by {
  id: order_by
  item_fling_effect_id: order_by
  language_id: order_by
}

"""aggregate stddev_pop on columns"""
type itemflingeffecteffecttext_stddev_pop_fields {
  id: Float
  item_fling_effect_id: Float
  language_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_itemflingeffecteffecttext"
"""
input itemflingeffecteffecttext_stddev_pop_order_by {
  id: order_by
  item_fling_effect_id: order_by
  language_id: order_by
}

"""aggregate stddev_samp on columns"""
type itemflingeffecteffecttext_stddev_samp_fields {
  id: Float
  item_fling_effect_id: Float
  language_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_itemflingeffecteffecttext"
"""
input itemflingeffecteffecttext_stddev_samp_order_by {
  id: order_by
  item_fling_effect_id: order_by
  language_id: order_by
}

"""aggregate sum on columns"""
type itemflingeffecteffecttext_sum_fields {
  id: Int
  item_fling_effect_id: Int
  language_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_itemflingeffecteffecttext"
"""
input itemflingeffecteffecttext_sum_order_by {
  id: order_by
  item_fling_effect_id: order_by
  language_id: order_by
}

"""aggregate var_pop on columns"""
type itemflingeffecteffecttext_var_pop_fields {
  id: Float
  item_fling_effect_id: Float
  language_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_itemflingeffecteffecttext"
"""
input itemflingeffecteffecttext_var_pop_order_by {
  id: order_by
  item_fling_effect_id: order_by
  language_id: order_by
}

"""aggregate var_samp on columns"""
type itemflingeffecteffecttext_var_samp_fields {
  id: Float
  item_fling_effect_id: Float
  language_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_itemflingeffecteffecttext"
"""
input itemflingeffecteffecttext_var_samp_order_by {
  id: order_by
  item_fling_effect_id: order_by
  language_id: order_by
}

"""aggregate variance on columns"""
type itemflingeffecteffecttext_variance_fields {
  id: Float
  item_fling_effect_id: Float
  language_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_itemflingeffecteffecttext"
"""
input itemflingeffecteffecttext_variance_order_by {
  id: order_by
  item_fling_effect_id: order_by
  language_id: order_by
}

"""
columns and relationships of "pokemon_v2_itemgameindex"
"""
type itemgameindex {
  game_index: Int!

  """An object relationship"""
  generation: generation
  generation_id: Int
  id: Int!

  """An object relationship"""
  item: item
  item_id: Int
}

"""
aggregated selection of "pokemon_v2_itemgameindex"
"""
type itemgameindex_aggregate {
  aggregate: itemgameindex_aggregate_fields
  nodes: [itemgameindex!]!
}

input itemgameindex_aggregate_bool_exp {
  count: itemgameindex_aggregate_bool_exp_count
}

input itemgameindex_aggregate_bool_exp_count {
  arguments: [itemgameindex_select_column!]
  distinct: Boolean
  filter: itemgameindex_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_itemgameindex"
"""
type itemgameindex_aggregate_fields {
  avg: itemgameindex_avg_fields
  count(columns: [itemgameindex_select_column!], distinct: Boolean): Int!
  max: itemgameindex_max_fields
  min: itemgameindex_min_fields
  stddev: itemgameindex_stddev_fields
  stddev_pop: itemgameindex_stddev_pop_fields
  stddev_samp: itemgameindex_stddev_samp_fields
  sum: itemgameindex_sum_fields
  var_pop: itemgameindex_var_pop_fields
  var_samp: itemgameindex_var_samp_fields
  variance: itemgameindex_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_itemgameindex"
"""
input itemgameindex_aggregate_order_by {
  avg: itemgameindex_avg_order_by
  count: order_by
  max: itemgameindex_max_order_by
  min: itemgameindex_min_order_by
  stddev: itemgameindex_stddev_order_by
  stddev_pop: itemgameindex_stddev_pop_order_by
  stddev_samp: itemgameindex_stddev_samp_order_by
  sum: itemgameindex_sum_order_by
  var_pop: itemgameindex_var_pop_order_by
  var_samp: itemgameindex_var_samp_order_by
  variance: itemgameindex_variance_order_by
}

"""aggregate avg on columns"""
type itemgameindex_avg_fields {
  game_index: Float
  generation_id: Float
  id: Float
  item_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_itemgameindex"
"""
input itemgameindex_avg_order_by {
  game_index: order_by
  generation_id: order_by
  id: order_by
  item_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_itemgameindex". All fields are combined with a logical 'AND'.
"""
input itemgameindex_bool_exp {
  _and: [itemgameindex_bool_exp!]
  _not: itemgameindex_bool_exp
  _or: [itemgameindex_bool_exp!]
  game_index: Int_comparison_exp
  generation: generation_bool_exp
  generation_id: Int_comparison_exp
  id: Int_comparison_exp
  item: item_bool_exp
  item_id: Int_comparison_exp
}

"""aggregate max on columns"""
type itemgameindex_max_fields {
  game_index: Int
  generation_id: Int
  id: Int
  item_id: Int
}

"""
order by max() on columns of table "pokemon_v2_itemgameindex"
"""
input itemgameindex_max_order_by {
  game_index: order_by
  generation_id: order_by
  id: order_by
  item_id: order_by
}

"""aggregate min on columns"""
type itemgameindex_min_fields {
  game_index: Int
  generation_id: Int
  id: Int
  item_id: Int
}

"""
order by min() on columns of table "pokemon_v2_itemgameindex"
"""
input itemgameindex_min_order_by {
  game_index: order_by
  generation_id: order_by
  id: order_by
  item_id: order_by
}

"""Ordering options when selecting data from "pokemon_v2_itemgameindex"."""
input itemgameindex_order_by {
  game_index: order_by
  generation: generation_order_by
  generation_id: order_by
  id: order_by
  item: item_order_by
  item_id: order_by
}

"""
select columns of table "pokemon_v2_itemgameindex"
"""
enum itemgameindex_select_column {
  """column name"""
  game_index

  """column name"""
  generation_id

  """column name"""
  id

  """column name"""
  item_id
}

"""aggregate stddev on columns"""
type itemgameindex_stddev_fields {
  game_index: Float
  generation_id: Float
  id: Float
  item_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_itemgameindex"
"""
input itemgameindex_stddev_order_by {
  game_index: order_by
  generation_id: order_by
  id: order_by
  item_id: order_by
}

"""aggregate stddev_pop on columns"""
type itemgameindex_stddev_pop_fields {
  game_index: Float
  generation_id: Float
  id: Float
  item_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_itemgameindex"
"""
input itemgameindex_stddev_pop_order_by {
  game_index: order_by
  generation_id: order_by
  id: order_by
  item_id: order_by
}

"""aggregate stddev_samp on columns"""
type itemgameindex_stddev_samp_fields {
  game_index: Float
  generation_id: Float
  id: Float
  item_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_itemgameindex"
"""
input itemgameindex_stddev_samp_order_by {
  game_index: order_by
  generation_id: order_by
  id: order_by
  item_id: order_by
}

"""aggregate sum on columns"""
type itemgameindex_sum_fields {
  game_index: Int
  generation_id: Int
  id: Int
  item_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_itemgameindex"
"""
input itemgameindex_sum_order_by {
  game_index: order_by
  generation_id: order_by
  id: order_by
  item_id: order_by
}

"""aggregate var_pop on columns"""
type itemgameindex_var_pop_fields {
  game_index: Float
  generation_id: Float
  id: Float
  item_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_itemgameindex"
"""
input itemgameindex_var_pop_order_by {
  game_index: order_by
  generation_id: order_by
  id: order_by
  item_id: order_by
}

"""aggregate var_samp on columns"""
type itemgameindex_var_samp_fields {
  game_index: Float
  generation_id: Float
  id: Float
  item_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_itemgameindex"
"""
input itemgameindex_var_samp_order_by {
  game_index: order_by
  generation_id: order_by
  id: order_by
  item_id: order_by
}

"""aggregate variance on columns"""
type itemgameindex_variance_fields {
  game_index: Float
  generation_id: Float
  id: Float
  item_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_itemgameindex"
"""
input itemgameindex_variance_order_by {
  game_index: order_by
  generation_id: order_by
  id: order_by
  item_id: order_by
}

"""
columns and relationships of "pokemon_v2_itemname"
"""
type itemname {
  id: Int!

  """An object relationship"""
  item: item
  item_id: Int

  """An object relationship"""
  language: language
  language_id: Int
  name: String!
}

"""
aggregated selection of "pokemon_v2_itemname"
"""
type itemname_aggregate {
  aggregate: itemname_aggregate_fields
  nodes: [itemname!]!
}

input itemname_aggregate_bool_exp {
  count: itemname_aggregate_bool_exp_count
}

input itemname_aggregate_bool_exp_count {
  arguments: [itemname_select_column!]
  distinct: Boolean
  filter: itemname_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_itemname"
"""
type itemname_aggregate_fields {
  avg: itemname_avg_fields
  count(columns: [itemname_select_column!], distinct: Boolean): Int!
  max: itemname_max_fields
  min: itemname_min_fields
  stddev: itemname_stddev_fields
  stddev_pop: itemname_stddev_pop_fields
  stddev_samp: itemname_stddev_samp_fields
  sum: itemname_sum_fields
  var_pop: itemname_var_pop_fields
  var_samp: itemname_var_samp_fields
  variance: itemname_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_itemname"
"""
input itemname_aggregate_order_by {
  avg: itemname_avg_order_by
  count: order_by
  max: itemname_max_order_by
  min: itemname_min_order_by
  stddev: itemname_stddev_order_by
  stddev_pop: itemname_stddev_pop_order_by
  stddev_samp: itemname_stddev_samp_order_by
  sum: itemname_sum_order_by
  var_pop: itemname_var_pop_order_by
  var_samp: itemname_var_samp_order_by
  variance: itemname_variance_order_by
}

"""aggregate avg on columns"""
type itemname_avg_fields {
  id: Float
  item_id: Float
  language_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_itemname"
"""
input itemname_avg_order_by {
  id: order_by
  item_id: order_by
  language_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_itemname". All fields are combined with a logical 'AND'.
"""
input itemname_bool_exp {
  _and: [itemname_bool_exp!]
  _not: itemname_bool_exp
  _or: [itemname_bool_exp!]
  id: Int_comparison_exp
  item: item_bool_exp
  item_id: Int_comparison_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
  name: String_comparison_exp
}

"""aggregate max on columns"""
type itemname_max_fields {
  id: Int
  item_id: Int
  language_id: Int
  name: String
}

"""
order by max() on columns of table "pokemon_v2_itemname"
"""
input itemname_max_order_by {
  id: order_by
  item_id: order_by
  language_id: order_by
  name: order_by
}

"""aggregate min on columns"""
type itemname_min_fields {
  id: Int
  item_id: Int
  language_id: Int
  name: String
}

"""
order by min() on columns of table "pokemon_v2_itemname"
"""
input itemname_min_order_by {
  id: order_by
  item_id: order_by
  language_id: order_by
  name: order_by
}

"""Ordering options when selecting data from "pokemon_v2_itemname"."""
input itemname_order_by {
  id: order_by
  item: item_order_by
  item_id: order_by
  language: language_order_by
  language_id: order_by
  name: order_by
}

"""
select columns of table "pokemon_v2_itemname"
"""
enum itemname_select_column {
  """column name"""
  id

  """column name"""
  item_id

  """column name"""
  language_id

  """column name"""
  name
}

"""aggregate stddev on columns"""
type itemname_stddev_fields {
  id: Float
  item_id: Float
  language_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_itemname"
"""
input itemname_stddev_order_by {
  id: order_by
  item_id: order_by
  language_id: order_by
}

"""aggregate stddev_pop on columns"""
type itemname_stddev_pop_fields {
  id: Float
  item_id: Float
  language_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_itemname"
"""
input itemname_stddev_pop_order_by {
  id: order_by
  item_id: order_by
  language_id: order_by
}

"""aggregate stddev_samp on columns"""
type itemname_stddev_samp_fields {
  id: Float
  item_id: Float
  language_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_itemname"
"""
input itemname_stddev_samp_order_by {
  id: order_by
  item_id: order_by
  language_id: order_by
}

"""aggregate sum on columns"""
type itemname_sum_fields {
  id: Int
  item_id: Int
  language_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_itemname"
"""
input itemname_sum_order_by {
  id: order_by
  item_id: order_by
  language_id: order_by
}

"""aggregate var_pop on columns"""
type itemname_var_pop_fields {
  id: Float
  item_id: Float
  language_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_itemname"
"""
input itemname_var_pop_order_by {
  id: order_by
  item_id: order_by
  language_id: order_by
}

"""aggregate var_samp on columns"""
type itemname_var_samp_fields {
  id: Float
  item_id: Float
  language_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_itemname"
"""
input itemname_var_samp_order_by {
  id: order_by
  item_id: order_by
  language_id: order_by
}

"""aggregate variance on columns"""
type itemname_variance_fields {
  id: Float
  item_id: Float
  language_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_itemname"
"""
input itemname_variance_order_by {
  id: order_by
  item_id: order_by
  language_id: order_by
}

"""
columns and relationships of "pokemon_v2_itempocket"
"""
type itempocket {
  id: Int!

  """An array relationship"""
  itemcategories(
    """distinct select on columns"""
    distinct_on: [itemcategory_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemcategory_order_by!]

    """filter the rows returned"""
    where: itemcategory_bool_exp
  ): [itemcategory!]!

  """An aggregate relationship"""
  itemcategories_aggregate(
    """distinct select on columns"""
    distinct_on: [itemcategory_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemcategory_order_by!]

    """filter the rows returned"""
    where: itemcategory_bool_exp
  ): itemcategory_aggregate!

  """An array relationship"""
  itempocketnames(
    """distinct select on columns"""
    distinct_on: [itempocketname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itempocketname_order_by!]

    """filter the rows returned"""
    where: itempocketname_bool_exp
  ): [itempocketname!]!

  """An aggregate relationship"""
  itempocketnames_aggregate(
    """distinct select on columns"""
    distinct_on: [itempocketname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itempocketname_order_by!]

    """filter the rows returned"""
    where: itempocketname_bool_exp
  ): itempocketname_aggregate!
  name: String!
}

"""
aggregated selection of "pokemon_v2_itempocket"
"""
type itempocket_aggregate {
  aggregate: itempocket_aggregate_fields
  nodes: [itempocket!]!
}

"""
aggregate fields of "pokemon_v2_itempocket"
"""
type itempocket_aggregate_fields {
  avg: itempocket_avg_fields
  count(columns: [itempocket_select_column!], distinct: Boolean): Int!
  max: itempocket_max_fields
  min: itempocket_min_fields
  stddev: itempocket_stddev_fields
  stddev_pop: itempocket_stddev_pop_fields
  stddev_samp: itempocket_stddev_samp_fields
  sum: itempocket_sum_fields
  var_pop: itempocket_var_pop_fields
  var_samp: itempocket_var_samp_fields
  variance: itempocket_variance_fields
}

"""aggregate avg on columns"""
type itempocket_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "pokemon_v2_itempocket". All fields are combined with a logical 'AND'.
"""
input itempocket_bool_exp {
  _and: [itempocket_bool_exp!]
  _not: itempocket_bool_exp
  _or: [itempocket_bool_exp!]
  id: Int_comparison_exp
  itemcategories: itemcategory_bool_exp
  itemcategories_aggregate: itemcategory_aggregate_bool_exp
  itempocketnames: itempocketname_bool_exp
  itempocketnames_aggregate: itempocketname_aggregate_bool_exp
  name: String_comparison_exp
}

"""aggregate max on columns"""
type itempocket_max_fields {
  id: Int
  name: String
}

"""aggregate min on columns"""
type itempocket_min_fields {
  id: Int
  name: String
}

"""Ordering options when selecting data from "pokemon_v2_itempocket"."""
input itempocket_order_by {
  id: order_by
  itemcategories_aggregate: itemcategory_aggregate_order_by
  itempocketnames_aggregate: itempocketname_aggregate_order_by
  name: order_by
}

"""
select columns of table "pokemon_v2_itempocket"
"""
enum itempocket_select_column {
  """column name"""
  id

  """column name"""
  name
}

"""aggregate stddev on columns"""
type itempocket_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type itempocket_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type itempocket_stddev_samp_fields {
  id: Float
}

"""aggregate sum on columns"""
type itempocket_sum_fields {
  id: Int
}

"""aggregate var_pop on columns"""
type itempocket_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type itempocket_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type itempocket_variance_fields {
  id: Float
}

"""
columns and relationships of "pokemon_v2_itempocketname"
"""
type itempocketname {
  id: Int!
  item_pocket_id: Int

  """An object relationship"""
  itempocket: itempocket

  """An object relationship"""
  language: language
  language_id: Int
  name: String!
}

"""
aggregated selection of "pokemon_v2_itempocketname"
"""
type itempocketname_aggregate {
  aggregate: itempocketname_aggregate_fields
  nodes: [itempocketname!]!
}

input itempocketname_aggregate_bool_exp {
  count: itempocketname_aggregate_bool_exp_count
}

input itempocketname_aggregate_bool_exp_count {
  arguments: [itempocketname_select_column!]
  distinct: Boolean
  filter: itempocketname_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_itempocketname"
"""
type itempocketname_aggregate_fields {
  avg: itempocketname_avg_fields
  count(columns: [itempocketname_select_column!], distinct: Boolean): Int!
  max: itempocketname_max_fields
  min: itempocketname_min_fields
  stddev: itempocketname_stddev_fields
  stddev_pop: itempocketname_stddev_pop_fields
  stddev_samp: itempocketname_stddev_samp_fields
  sum: itempocketname_sum_fields
  var_pop: itempocketname_var_pop_fields
  var_samp: itempocketname_var_samp_fields
  variance: itempocketname_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_itempocketname"
"""
input itempocketname_aggregate_order_by {
  avg: itempocketname_avg_order_by
  count: order_by
  max: itempocketname_max_order_by
  min: itempocketname_min_order_by
  stddev: itempocketname_stddev_order_by
  stddev_pop: itempocketname_stddev_pop_order_by
  stddev_samp: itempocketname_stddev_samp_order_by
  sum: itempocketname_sum_order_by
  var_pop: itempocketname_var_pop_order_by
  var_samp: itempocketname_var_samp_order_by
  variance: itempocketname_variance_order_by
}

"""aggregate avg on columns"""
type itempocketname_avg_fields {
  id: Float
  item_pocket_id: Float
  language_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_itempocketname"
"""
input itempocketname_avg_order_by {
  id: order_by
  item_pocket_id: order_by
  language_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_itempocketname". All fields are combined with a logical 'AND'.
"""
input itempocketname_bool_exp {
  _and: [itempocketname_bool_exp!]
  _not: itempocketname_bool_exp
  _or: [itempocketname_bool_exp!]
  id: Int_comparison_exp
  item_pocket_id: Int_comparison_exp
  itempocket: itempocket_bool_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
  name: String_comparison_exp
}

"""aggregate max on columns"""
type itempocketname_max_fields {
  id: Int
  item_pocket_id: Int
  language_id: Int
  name: String
}

"""
order by max() on columns of table "pokemon_v2_itempocketname"
"""
input itempocketname_max_order_by {
  id: order_by
  item_pocket_id: order_by
  language_id: order_by
  name: order_by
}

"""aggregate min on columns"""
type itempocketname_min_fields {
  id: Int
  item_pocket_id: Int
  language_id: Int
  name: String
}

"""
order by min() on columns of table "pokemon_v2_itempocketname"
"""
input itempocketname_min_order_by {
  id: order_by
  item_pocket_id: order_by
  language_id: order_by
  name: order_by
}

"""Ordering options when selecting data from "pokemon_v2_itempocketname"."""
input itempocketname_order_by {
  id: order_by
  item_pocket_id: order_by
  itempocket: itempocket_order_by
  language: language_order_by
  language_id: order_by
  name: order_by
}

"""
select columns of table "pokemon_v2_itempocketname"
"""
enum itempocketname_select_column {
  """column name"""
  id

  """column name"""
  item_pocket_id

  """column name"""
  language_id

  """column name"""
  name
}

"""aggregate stddev on columns"""
type itempocketname_stddev_fields {
  id: Float
  item_pocket_id: Float
  language_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_itempocketname"
"""
input itempocketname_stddev_order_by {
  id: order_by
  item_pocket_id: order_by
  language_id: order_by
}

"""aggregate stddev_pop on columns"""
type itempocketname_stddev_pop_fields {
  id: Float
  item_pocket_id: Float
  language_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_itempocketname"
"""
input itempocketname_stddev_pop_order_by {
  id: order_by
  item_pocket_id: order_by
  language_id: order_by
}

"""aggregate stddev_samp on columns"""
type itempocketname_stddev_samp_fields {
  id: Float
  item_pocket_id: Float
  language_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_itempocketname"
"""
input itempocketname_stddev_samp_order_by {
  id: order_by
  item_pocket_id: order_by
  language_id: order_by
}

"""aggregate sum on columns"""
type itempocketname_sum_fields {
  id: Int
  item_pocket_id: Int
  language_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_itempocketname"
"""
input itempocketname_sum_order_by {
  id: order_by
  item_pocket_id: order_by
  language_id: order_by
}

"""aggregate var_pop on columns"""
type itempocketname_var_pop_fields {
  id: Float
  item_pocket_id: Float
  language_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_itempocketname"
"""
input itempocketname_var_pop_order_by {
  id: order_by
  item_pocket_id: order_by
  language_id: order_by
}

"""aggregate var_samp on columns"""
type itempocketname_var_samp_fields {
  id: Float
  item_pocket_id: Float
  language_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_itempocketname"
"""
input itempocketname_var_samp_order_by {
  id: order_by
  item_pocket_id: order_by
  language_id: order_by
}

"""aggregate variance on columns"""
type itempocketname_variance_fields {
  id: Float
  item_pocket_id: Float
  language_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_itempocketname"
"""
input itempocketname_variance_order_by {
  id: order_by
  item_pocket_id: order_by
  language_id: order_by
}

"""
columns and relationships of "pokemon_v2_itemsprites"
"""
type itemsprites {
  id: Int!

  """An object relationship"""
  item: item
  item_id: Int
  sprites(
    """JSON select path"""
    path: String
  ): jsonb!
}

"""
aggregated selection of "pokemon_v2_itemsprites"
"""
type itemsprites_aggregate {
  aggregate: itemsprites_aggregate_fields
  nodes: [itemsprites!]!
}

input itemsprites_aggregate_bool_exp {
  count: itemsprites_aggregate_bool_exp_count
}

input itemsprites_aggregate_bool_exp_count {
  arguments: [itemsprites_select_column!]
  distinct: Boolean
  filter: itemsprites_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_itemsprites"
"""
type itemsprites_aggregate_fields {
  avg: itemsprites_avg_fields
  count(columns: [itemsprites_select_column!], distinct: Boolean): Int!
  max: itemsprites_max_fields
  min: itemsprites_min_fields
  stddev: itemsprites_stddev_fields
  stddev_pop: itemsprites_stddev_pop_fields
  stddev_samp: itemsprites_stddev_samp_fields
  sum: itemsprites_sum_fields
  var_pop: itemsprites_var_pop_fields
  var_samp: itemsprites_var_samp_fields
  variance: itemsprites_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_itemsprites"
"""
input itemsprites_aggregate_order_by {
  avg: itemsprites_avg_order_by
  count: order_by
  max: itemsprites_max_order_by
  min: itemsprites_min_order_by
  stddev: itemsprites_stddev_order_by
  stddev_pop: itemsprites_stddev_pop_order_by
  stddev_samp: itemsprites_stddev_samp_order_by
  sum: itemsprites_sum_order_by
  var_pop: itemsprites_var_pop_order_by
  var_samp: itemsprites_var_samp_order_by
  variance: itemsprites_variance_order_by
}

"""aggregate avg on columns"""
type itemsprites_avg_fields {
  id: Float
  item_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_itemsprites"
"""
input itemsprites_avg_order_by {
  id: order_by
  item_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_itemsprites". All fields are combined with a logical 'AND'.
"""
input itemsprites_bool_exp {
  _and: [itemsprites_bool_exp!]
  _not: itemsprites_bool_exp
  _or: [itemsprites_bool_exp!]
  id: Int_comparison_exp
  item: item_bool_exp
  item_id: Int_comparison_exp
  sprites: jsonb_comparison_exp
}

"""aggregate max on columns"""
type itemsprites_max_fields {
  id: Int
  item_id: Int
}

"""
order by max() on columns of table "pokemon_v2_itemsprites"
"""
input itemsprites_max_order_by {
  id: order_by
  item_id: order_by
}

"""aggregate min on columns"""
type itemsprites_min_fields {
  id: Int
  item_id: Int
}

"""
order by min() on columns of table "pokemon_v2_itemsprites"
"""
input itemsprites_min_order_by {
  id: order_by
  item_id: order_by
}

"""Ordering options when selecting data from "pokemon_v2_itemsprites"."""
input itemsprites_order_by {
  id: order_by
  item: item_order_by
  item_id: order_by
  sprites: order_by
}

"""
select columns of table "pokemon_v2_itemsprites"
"""
enum itemsprites_select_column {
  """column name"""
  id

  """column name"""
  item_id

  """column name"""
  sprites
}

"""aggregate stddev on columns"""
type itemsprites_stddev_fields {
  id: Float
  item_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_itemsprites"
"""
input itemsprites_stddev_order_by {
  id: order_by
  item_id: order_by
}

"""aggregate stddev_pop on columns"""
type itemsprites_stddev_pop_fields {
  id: Float
  item_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_itemsprites"
"""
input itemsprites_stddev_pop_order_by {
  id: order_by
  item_id: order_by
}

"""aggregate stddev_samp on columns"""
type itemsprites_stddev_samp_fields {
  id: Float
  item_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_itemsprites"
"""
input itemsprites_stddev_samp_order_by {
  id: order_by
  item_id: order_by
}

"""aggregate sum on columns"""
type itemsprites_sum_fields {
  id: Int
  item_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_itemsprites"
"""
input itemsprites_sum_order_by {
  id: order_by
  item_id: order_by
}

"""aggregate var_pop on columns"""
type itemsprites_var_pop_fields {
  id: Float
  item_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_itemsprites"
"""
input itemsprites_var_pop_order_by {
  id: order_by
  item_id: order_by
}

"""aggregate var_samp on columns"""
type itemsprites_var_samp_fields {
  id: Float
  item_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_itemsprites"
"""
input itemsprites_var_samp_order_by {
  id: order_by
  item_id: order_by
}

"""aggregate variance on columns"""
type itemsprites_variance_fields {
  id: Float
  item_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_itemsprites"
"""
input itemsprites_variance_order_by {
  id: order_by
  item_id: order_by
}

scalar jsonb

input jsonb_cast_exp {
  String: String_comparison_exp
}

"""
Boolean expression to compare columns of type "jsonb". All fields are combined with logical 'AND'.
"""
input jsonb_comparison_exp {
  _cast: jsonb_cast_exp

  """is the column contained in the given json value"""
  _contained_in: jsonb

  """does the column contain the given json value at the top level"""
  _contains: jsonb
  _eq: jsonb
  _gt: jsonb
  _gte: jsonb

  """does the string exist as a top-level key in the column"""
  _has_key: String

  """do all of these strings exist as top-level keys in the column"""
  _has_keys_all: [String!]

  """do any of these strings exist as top-level keys in the column"""
  _has_keys_any: [String!]
  _in: [jsonb!]
  _is_null: Boolean
  _lt: jsonb
  _lte: jsonb
  _neq: jsonb
  _nin: [jsonb!]
}

"""
columns and relationships of "pokemon_v2_language"
"""
type language {
  """An array relationship"""
  LanguagenamesByLocalLanguageId(
    """distinct select on columns"""
    distinct_on: [languagename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [languagename_order_by!]

    """filter the rows returned"""
    where: languagename_bool_exp
  ): [languagename!]!

  """An aggregate relationship"""
  LanguagenamesByLocalLanguageId_aggregate(
    """distinct select on columns"""
    distinct_on: [languagename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [languagename_order_by!]

    """filter the rows returned"""
    where: languagename_bool_exp
  ): languagename_aggregate!

  """An array relationship"""
  abilitychangeeffecttexts(
    """distinct select on columns"""
    distinct_on: [abilitychangeeffecttext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [abilitychangeeffecttext_order_by!]

    """filter the rows returned"""
    where: abilitychangeeffecttext_bool_exp
  ): [abilitychangeeffecttext!]!

  """An aggregate relationship"""
  abilitychangeeffecttexts_aggregate(
    """distinct select on columns"""
    distinct_on: [abilitychangeeffecttext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [abilitychangeeffecttext_order_by!]

    """filter the rows returned"""
    where: abilitychangeeffecttext_bool_exp
  ): abilitychangeeffecttext_aggregate!

  """An array relationship"""
  abilityeffecttexts(
    """distinct select on columns"""
    distinct_on: [abilityeffecttext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [abilityeffecttext_order_by!]

    """filter the rows returned"""
    where: abilityeffecttext_bool_exp
  ): [abilityeffecttext!]!

  """An aggregate relationship"""
  abilityeffecttexts_aggregate(
    """distinct select on columns"""
    distinct_on: [abilityeffecttext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [abilityeffecttext_order_by!]

    """filter the rows returned"""
    where: abilityeffecttext_bool_exp
  ): abilityeffecttext_aggregate!

  """An array relationship"""
  abilityflavortexts(
    """distinct select on columns"""
    distinct_on: [abilityflavortext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [abilityflavortext_order_by!]

    """filter the rows returned"""
    where: abilityflavortext_bool_exp
  ): [abilityflavortext!]!

  """An aggregate relationship"""
  abilityflavortexts_aggregate(
    """distinct select on columns"""
    distinct_on: [abilityflavortext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [abilityflavortext_order_by!]

    """filter the rows returned"""
    where: abilityflavortext_bool_exp
  ): abilityflavortext_aggregate!

  """An array relationship"""
  abilitynames(
    """distinct select on columns"""
    distinct_on: [abilityname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [abilityname_order_by!]

    """filter the rows returned"""
    where: abilityname_bool_exp
  ): [abilityname!]!

  """An aggregate relationship"""
  abilitynames_aggregate(
    """distinct select on columns"""
    distinct_on: [abilityname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [abilityname_order_by!]

    """filter the rows returned"""
    where: abilityname_bool_exp
  ): abilityname_aggregate!

  """An array relationship"""
  berryfirmnessnames(
    """distinct select on columns"""
    distinct_on: [berryfirmnessname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [berryfirmnessname_order_by!]

    """filter the rows returned"""
    where: berryfirmnessname_bool_exp
  ): [berryfirmnessname!]!

  """An aggregate relationship"""
  berryfirmnessnames_aggregate(
    """distinct select on columns"""
    distinct_on: [berryfirmnessname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [berryfirmnessname_order_by!]

    """filter the rows returned"""
    where: berryfirmnessname_bool_exp
  ): berryfirmnessname_aggregate!

  """An array relationship"""
  berryflavornames(
    """distinct select on columns"""
    distinct_on: [berryflavorname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [berryflavorname_order_by!]

    """filter the rows returned"""
    where: berryflavorname_bool_exp
  ): [berryflavorname!]!

  """An aggregate relationship"""
  berryflavornames_aggregate(
    """distinct select on columns"""
    distinct_on: [berryflavorname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [berryflavorname_order_by!]

    """filter the rows returned"""
    where: berryflavorname_bool_exp
  ): berryflavorname_aggregate!

  """An array relationship"""
  characteristicdescriptions(
    """distinct select on columns"""
    distinct_on: [characteristicdescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [characteristicdescription_order_by!]

    """filter the rows returned"""
    where: characteristicdescription_bool_exp
  ): [characteristicdescription!]!

  """An aggregate relationship"""
  characteristicdescriptions_aggregate(
    """distinct select on columns"""
    distinct_on: [characteristicdescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [characteristicdescription_order_by!]

    """filter the rows returned"""
    where: characteristicdescription_bool_exp
  ): characteristicdescription_aggregate!

  """An array relationship"""
  contesteffecteffecttexts(
    """distinct select on columns"""
    distinct_on: [contesteffecteffecttext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [contesteffecteffecttext_order_by!]

    """filter the rows returned"""
    where: contesteffecteffecttext_bool_exp
  ): [contesteffecteffecttext!]!

  """An aggregate relationship"""
  contesteffecteffecttexts_aggregate(
    """distinct select on columns"""
    distinct_on: [contesteffecteffecttext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [contesteffecteffecttext_order_by!]

    """filter the rows returned"""
    where: contesteffecteffecttext_bool_exp
  ): contesteffecteffecttext_aggregate!

  """An array relationship"""
  contesteffectflavortexts(
    """distinct select on columns"""
    distinct_on: [contesteffectflavortext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [contesteffectflavortext_order_by!]

    """filter the rows returned"""
    where: contesteffectflavortext_bool_exp
  ): [contesteffectflavortext!]!

  """An aggregate relationship"""
  contesteffectflavortexts_aggregate(
    """distinct select on columns"""
    distinct_on: [contesteffectflavortext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [contesteffectflavortext_order_by!]

    """filter the rows returned"""
    where: contesteffectflavortext_bool_exp
  ): contesteffectflavortext_aggregate!

  """An array relationship"""
  contesttypenames(
    """distinct select on columns"""
    distinct_on: [contesttypename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [contesttypename_order_by!]

    """filter the rows returned"""
    where: contesttypename_bool_exp
  ): [contesttypename!]!

  """An aggregate relationship"""
  contesttypenames_aggregate(
    """distinct select on columns"""
    distinct_on: [contesttypename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [contesttypename_order_by!]

    """filter the rows returned"""
    where: contesttypename_bool_exp
  ): contesttypename_aggregate!

  """An array relationship"""
  egggroupnames(
    """distinct select on columns"""
    distinct_on: [egggroupname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [egggroupname_order_by!]

    """filter the rows returned"""
    where: egggroupname_bool_exp
  ): [egggroupname!]!

  """An aggregate relationship"""
  egggroupnames_aggregate(
    """distinct select on columns"""
    distinct_on: [egggroupname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [egggroupname_order_by!]

    """filter the rows returned"""
    where: egggroupname_bool_exp
  ): egggroupname_aggregate!

  """An array relationship"""
  encounterconditionnames(
    """distinct select on columns"""
    distinct_on: [encounterconditionname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [encounterconditionname_order_by!]

    """filter the rows returned"""
    where: encounterconditionname_bool_exp
  ): [encounterconditionname!]!

  """An aggregate relationship"""
  encounterconditionnames_aggregate(
    """distinct select on columns"""
    distinct_on: [encounterconditionname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [encounterconditionname_order_by!]

    """filter the rows returned"""
    where: encounterconditionname_bool_exp
  ): encounterconditionname_aggregate!

  """An array relationship"""
  encounterconditionvaluenames(
    """distinct select on columns"""
    distinct_on: [encounterconditionvaluename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [encounterconditionvaluename_order_by!]

    """filter the rows returned"""
    where: encounterconditionvaluename_bool_exp
  ): [encounterconditionvaluename!]!

  """An aggregate relationship"""
  encounterconditionvaluenames_aggregate(
    """distinct select on columns"""
    distinct_on: [encounterconditionvaluename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [encounterconditionvaluename_order_by!]

    """filter the rows returned"""
    where: encounterconditionvaluename_bool_exp
  ): encounterconditionvaluename_aggregate!

  """An array relationship"""
  encountermethodnames(
    """distinct select on columns"""
    distinct_on: [encountermethodname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [encountermethodname_order_by!]

    """filter the rows returned"""
    where: encountermethodname_bool_exp
  ): [encountermethodname!]!

  """An aggregate relationship"""
  encountermethodnames_aggregate(
    """distinct select on columns"""
    distinct_on: [encountermethodname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [encountermethodname_order_by!]

    """filter the rows returned"""
    where: encountermethodname_bool_exp
  ): encountermethodname_aggregate!

  """An array relationship"""
  evolutiontriggernames(
    """distinct select on columns"""
    distinct_on: [evolutiontriggername_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [evolutiontriggername_order_by!]

    """filter the rows returned"""
    where: evolutiontriggername_bool_exp
  ): [evolutiontriggername!]!

  """An aggregate relationship"""
  evolutiontriggernames_aggregate(
    """distinct select on columns"""
    distinct_on: [evolutiontriggername_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [evolutiontriggername_order_by!]

    """filter the rows returned"""
    where: evolutiontriggername_bool_exp
  ): evolutiontriggername_aggregate!

  """An array relationship"""
  generationnames(
    """distinct select on columns"""
    distinct_on: [generationname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [generationname_order_by!]

    """filter the rows returned"""
    where: generationname_bool_exp
  ): [generationname!]!

  """An aggregate relationship"""
  generationnames_aggregate(
    """distinct select on columns"""
    distinct_on: [generationname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [generationname_order_by!]

    """filter the rows returned"""
    where: generationname_bool_exp
  ): generationname_aggregate!

  """An array relationship"""
  growthratedescriptions(
    """distinct select on columns"""
    distinct_on: [growthratedescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [growthratedescription_order_by!]

    """filter the rows returned"""
    where: growthratedescription_bool_exp
  ): [growthratedescription!]!

  """An aggregate relationship"""
  growthratedescriptions_aggregate(
    """distinct select on columns"""
    distinct_on: [growthratedescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [growthratedescription_order_by!]

    """filter the rows returned"""
    where: growthratedescription_bool_exp
  ): growthratedescription_aggregate!
  id: Int!
  iso3166: String!
  iso639: String!

  """An array relationship"""
  itemattributedescriptions(
    """distinct select on columns"""
    distinct_on: [itemattributedescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemattributedescription_order_by!]

    """filter the rows returned"""
    where: itemattributedescription_bool_exp
  ): [itemattributedescription!]!

  """An aggregate relationship"""
  itemattributedescriptions_aggregate(
    """distinct select on columns"""
    distinct_on: [itemattributedescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemattributedescription_order_by!]

    """filter the rows returned"""
    where: itemattributedescription_bool_exp
  ): itemattributedescription_aggregate!

  """An array relationship"""
  itemattributenames(
    """distinct select on columns"""
    distinct_on: [itemattributename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemattributename_order_by!]

    """filter the rows returned"""
    where: itemattributename_bool_exp
  ): [itemattributename!]!

  """An aggregate relationship"""
  itemattributenames_aggregate(
    """distinct select on columns"""
    distinct_on: [itemattributename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemattributename_order_by!]

    """filter the rows returned"""
    where: itemattributename_bool_exp
  ): itemattributename_aggregate!

  """An array relationship"""
  itemcategorynames(
    """distinct select on columns"""
    distinct_on: [itemcategoryname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemcategoryname_order_by!]

    """filter the rows returned"""
    where: itemcategoryname_bool_exp
  ): [itemcategoryname!]!

  """An aggregate relationship"""
  itemcategorynames_aggregate(
    """distinct select on columns"""
    distinct_on: [itemcategoryname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemcategoryname_order_by!]

    """filter the rows returned"""
    where: itemcategoryname_bool_exp
  ): itemcategoryname_aggregate!

  """An array relationship"""
  itemeffecttexts(
    """distinct select on columns"""
    distinct_on: [itemeffecttext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemeffecttext_order_by!]

    """filter the rows returned"""
    where: itemeffecttext_bool_exp
  ): [itemeffecttext!]!

  """An aggregate relationship"""
  itemeffecttexts_aggregate(
    """distinct select on columns"""
    distinct_on: [itemeffecttext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemeffecttext_order_by!]

    """filter the rows returned"""
    where: itemeffecttext_bool_exp
  ): itemeffecttext_aggregate!

  """An array relationship"""
  itemflavortexts(
    """distinct select on columns"""
    distinct_on: [itemflavortext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemflavortext_order_by!]

    """filter the rows returned"""
    where: itemflavortext_bool_exp
  ): [itemflavortext!]!

  """An aggregate relationship"""
  itemflavortexts_aggregate(
    """distinct select on columns"""
    distinct_on: [itemflavortext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemflavortext_order_by!]

    """filter the rows returned"""
    where: itemflavortext_bool_exp
  ): itemflavortext_aggregate!

  """An array relationship"""
  itemflingeffecteffecttexts(
    """distinct select on columns"""
    distinct_on: [itemflingeffecteffecttext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemflingeffecteffecttext_order_by!]

    """filter the rows returned"""
    where: itemflingeffecteffecttext_bool_exp
  ): [itemflingeffecteffecttext!]!

  """An aggregate relationship"""
  itemflingeffecteffecttexts_aggregate(
    """distinct select on columns"""
    distinct_on: [itemflingeffecteffecttext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemflingeffecteffecttext_order_by!]

    """filter the rows returned"""
    where: itemflingeffecteffecttext_bool_exp
  ): itemflingeffecteffecttext_aggregate!

  """An array relationship"""
  itemnames(
    """distinct select on columns"""
    distinct_on: [itemname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemname_order_by!]

    """filter the rows returned"""
    where: itemname_bool_exp
  ): [itemname!]!

  """An aggregate relationship"""
  itemnames_aggregate(
    """distinct select on columns"""
    distinct_on: [itemname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemname_order_by!]

    """filter the rows returned"""
    where: itemname_bool_exp
  ): itemname_aggregate!

  """An array relationship"""
  itempocketnames(
    """distinct select on columns"""
    distinct_on: [itempocketname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itempocketname_order_by!]

    """filter the rows returned"""
    where: itempocketname_bool_exp
  ): [itempocketname!]!

  """An aggregate relationship"""
  itempocketnames_aggregate(
    """distinct select on columns"""
    distinct_on: [itempocketname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itempocketname_order_by!]

    """filter the rows returned"""
    where: itempocketname_bool_exp
  ): itempocketname_aggregate!

  """An array relationship"""
  languagenames(
    """distinct select on columns"""
    distinct_on: [languagename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [languagename_order_by!]

    """filter the rows returned"""
    where: languagename_bool_exp
  ): [languagename!]!

  """An aggregate relationship"""
  languagenames_aggregate(
    """distinct select on columns"""
    distinct_on: [languagename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [languagename_order_by!]

    """filter the rows returned"""
    where: languagename_bool_exp
  ): languagename_aggregate!

  """An array relationship"""
  locationareanames(
    """distinct select on columns"""
    distinct_on: [locationareaname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [locationareaname_order_by!]

    """filter the rows returned"""
    where: locationareaname_bool_exp
  ): [locationareaname!]!

  """An aggregate relationship"""
  locationareanames_aggregate(
    """distinct select on columns"""
    distinct_on: [locationareaname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [locationareaname_order_by!]

    """filter the rows returned"""
    where: locationareaname_bool_exp
  ): locationareaname_aggregate!

  """An array relationship"""
  locationnames(
    """distinct select on columns"""
    distinct_on: [locationname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [locationname_order_by!]

    """filter the rows returned"""
    where: locationname_bool_exp
  ): [locationname!]!

  """An aggregate relationship"""
  locationnames_aggregate(
    """distinct select on columns"""
    distinct_on: [locationname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [locationname_order_by!]

    """filter the rows returned"""
    where: locationname_bool_exp
  ): locationname_aggregate!

  """An array relationship"""
  moveattributedescriptions(
    """distinct select on columns"""
    distinct_on: [moveattributedescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [moveattributedescription_order_by!]

    """filter the rows returned"""
    where: moveattributedescription_bool_exp
  ): [moveattributedescription!]!

  """An aggregate relationship"""
  moveattributedescriptions_aggregate(
    """distinct select on columns"""
    distinct_on: [moveattributedescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [moveattributedescription_order_by!]

    """filter the rows returned"""
    where: moveattributedescription_bool_exp
  ): moveattributedescription_aggregate!

  """An array relationship"""
  moveattributenames(
    """distinct select on columns"""
    distinct_on: [moveattributename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [moveattributename_order_by!]

    """filter the rows returned"""
    where: moveattributename_bool_exp
  ): [moveattributename!]!

  """An aggregate relationship"""
  moveattributenames_aggregate(
    """distinct select on columns"""
    distinct_on: [moveattributename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [moveattributename_order_by!]

    """filter the rows returned"""
    where: moveattributename_bool_exp
  ): moveattributename_aggregate!

  """An array relationship"""
  movebattlestylenames(
    """distinct select on columns"""
    distinct_on: [movebattlestylename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movebattlestylename_order_by!]

    """filter the rows returned"""
    where: movebattlestylename_bool_exp
  ): [movebattlestylename!]!

  """An aggregate relationship"""
  movebattlestylenames_aggregate(
    """distinct select on columns"""
    distinct_on: [movebattlestylename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movebattlestylename_order_by!]

    """filter the rows returned"""
    where: movebattlestylename_bool_exp
  ): movebattlestylename_aggregate!

  """An array relationship"""
  movedamageclassdescriptions(
    """distinct select on columns"""
    distinct_on: [movedamageclassdescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movedamageclassdescription_order_by!]

    """filter the rows returned"""
    where: movedamageclassdescription_bool_exp
  ): [movedamageclassdescription!]!

  """An aggregate relationship"""
  movedamageclassdescriptions_aggregate(
    """distinct select on columns"""
    distinct_on: [movedamageclassdescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movedamageclassdescription_order_by!]

    """filter the rows returned"""
    where: movedamageclassdescription_bool_exp
  ): movedamageclassdescription_aggregate!

  """An array relationship"""
  movedamageclassnames(
    """distinct select on columns"""
    distinct_on: [movedamageclassname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movedamageclassname_order_by!]

    """filter the rows returned"""
    where: movedamageclassname_bool_exp
  ): [movedamageclassname!]!

  """An aggregate relationship"""
  movedamageclassnames_aggregate(
    """distinct select on columns"""
    distinct_on: [movedamageclassname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movedamageclassname_order_by!]

    """filter the rows returned"""
    where: movedamageclassname_bool_exp
  ): movedamageclassname_aggregate!

  """An array relationship"""
  moveeffectchangeeffecttexts(
    """distinct select on columns"""
    distinct_on: [moveeffectchangeeffecttext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [moveeffectchangeeffecttext_order_by!]

    """filter the rows returned"""
    where: moveeffectchangeeffecttext_bool_exp
  ): [moveeffectchangeeffecttext!]!

  """An aggregate relationship"""
  moveeffectchangeeffecttexts_aggregate(
    """distinct select on columns"""
    distinct_on: [moveeffectchangeeffecttext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [moveeffectchangeeffecttext_order_by!]

    """filter the rows returned"""
    where: moveeffectchangeeffecttext_bool_exp
  ): moveeffectchangeeffecttext_aggregate!

  """An array relationship"""
  moveeffecteffecttexts(
    """distinct select on columns"""
    distinct_on: [moveeffecteffecttext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [moveeffecteffecttext_order_by!]

    """filter the rows returned"""
    where: moveeffecteffecttext_bool_exp
  ): [moveeffecteffecttext!]!

  """An aggregate relationship"""
  moveeffecteffecttexts_aggregate(
    """distinct select on columns"""
    distinct_on: [moveeffecteffecttext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [moveeffecteffecttext_order_by!]

    """filter the rows returned"""
    where: moveeffecteffecttext_bool_exp
  ): moveeffecteffecttext_aggregate!

  """An array relationship"""
  moveflavortexts(
    """distinct select on columns"""
    distinct_on: [moveflavortext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [moveflavortext_order_by!]

    """filter the rows returned"""
    where: moveflavortext_bool_exp
  ): [moveflavortext!]!

  """An aggregate relationship"""
  moveflavortexts_aggregate(
    """distinct select on columns"""
    distinct_on: [moveflavortext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [moveflavortext_order_by!]

    """filter the rows returned"""
    where: moveflavortext_bool_exp
  ): moveflavortext_aggregate!

  """An array relationship"""
  movelearnmethoddescriptions(
    """distinct select on columns"""
    distinct_on: [movelearnmethoddescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movelearnmethoddescription_order_by!]

    """filter the rows returned"""
    where: movelearnmethoddescription_bool_exp
  ): [movelearnmethoddescription!]!

  """An aggregate relationship"""
  movelearnmethoddescriptions_aggregate(
    """distinct select on columns"""
    distinct_on: [movelearnmethoddescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movelearnmethoddescription_order_by!]

    """filter the rows returned"""
    where: movelearnmethoddescription_bool_exp
  ): movelearnmethoddescription_aggregate!

  """An array relationship"""
  movelearnmethodnames(
    """distinct select on columns"""
    distinct_on: [movelearnmethodname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movelearnmethodname_order_by!]

    """filter the rows returned"""
    where: movelearnmethodname_bool_exp
  ): [movelearnmethodname!]!

  """An aggregate relationship"""
  movelearnmethodnames_aggregate(
    """distinct select on columns"""
    distinct_on: [movelearnmethodname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movelearnmethodname_order_by!]

    """filter the rows returned"""
    where: movelearnmethodname_bool_exp
  ): movelearnmethodname_aggregate!

  """An array relationship"""
  movemetaailmentnames(
    """distinct select on columns"""
    distinct_on: [movemetaailmentname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movemetaailmentname_order_by!]

    """filter the rows returned"""
    where: movemetaailmentname_bool_exp
  ): [movemetaailmentname!]!

  """An aggregate relationship"""
  movemetaailmentnames_aggregate(
    """distinct select on columns"""
    distinct_on: [movemetaailmentname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movemetaailmentname_order_by!]

    """filter the rows returned"""
    where: movemetaailmentname_bool_exp
  ): movemetaailmentname_aggregate!

  """An array relationship"""
  movemetacategorydescriptions(
    """distinct select on columns"""
    distinct_on: [movemetacategorydescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movemetacategorydescription_order_by!]

    """filter the rows returned"""
    where: movemetacategorydescription_bool_exp
  ): [movemetacategorydescription!]!

  """An aggregate relationship"""
  movemetacategorydescriptions_aggregate(
    """distinct select on columns"""
    distinct_on: [movemetacategorydescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movemetacategorydescription_order_by!]

    """filter the rows returned"""
    where: movemetacategorydescription_bool_exp
  ): movemetacategorydescription_aggregate!

  """An array relationship"""
  movenames(
    """distinct select on columns"""
    distinct_on: [movename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movename_order_by!]

    """filter the rows returned"""
    where: movename_bool_exp
  ): [movename!]!

  """An aggregate relationship"""
  movenames_aggregate(
    """distinct select on columns"""
    distinct_on: [movename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movename_order_by!]

    """filter the rows returned"""
    where: movename_bool_exp
  ): movename_aggregate!

  """An array relationship"""
  movetargetdescriptions(
    """distinct select on columns"""
    distinct_on: [movetargetdescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movetargetdescription_order_by!]

    """filter the rows returned"""
    where: movetargetdescription_bool_exp
  ): [movetargetdescription!]!

  """An aggregate relationship"""
  movetargetdescriptions_aggregate(
    """distinct select on columns"""
    distinct_on: [movetargetdescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movetargetdescription_order_by!]

    """filter the rows returned"""
    where: movetargetdescription_bool_exp
  ): movetargetdescription_aggregate!

  """An array relationship"""
  movetargetnames(
    """distinct select on columns"""
    distinct_on: [movetargetname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movetargetname_order_by!]

    """filter the rows returned"""
    where: movetargetname_bool_exp
  ): [movetargetname!]!

  """An aggregate relationship"""
  movetargetnames_aggregate(
    """distinct select on columns"""
    distinct_on: [movetargetname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movetargetname_order_by!]

    """filter the rows returned"""
    where: movetargetname_bool_exp
  ): movetargetname_aggregate!
  name: String!

  """An array relationship"""
  naturenames(
    """distinct select on columns"""
    distinct_on: [naturename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [naturename_order_by!]

    """filter the rows returned"""
    where: naturename_bool_exp
  ): [naturename!]!

  """An aggregate relationship"""
  naturenames_aggregate(
    """distinct select on columns"""
    distinct_on: [naturename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [naturename_order_by!]

    """filter the rows returned"""
    where: naturename_bool_exp
  ): naturename_aggregate!
  official: Boolean!
  order: Int

  """An array relationship"""
  palparkareanames(
    """distinct select on columns"""
    distinct_on: [palparkareaname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [palparkareaname_order_by!]

    """filter the rows returned"""
    where: palparkareaname_bool_exp
  ): [palparkareaname!]!

  """An aggregate relationship"""
  palparkareanames_aggregate(
    """distinct select on columns"""
    distinct_on: [palparkareaname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [palparkareaname_order_by!]

    """filter the rows returned"""
    where: palparkareaname_bool_exp
  ): palparkareaname_aggregate!

  """An array relationship"""
  pokeathlonstatnames(
    """distinct select on columns"""
    distinct_on: [pokeathlonstatname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokeathlonstatname_order_by!]

    """filter the rows returned"""
    where: pokeathlonstatname_bool_exp
  ): [pokeathlonstatname!]!

  """An aggregate relationship"""
  pokeathlonstatnames_aggregate(
    """distinct select on columns"""
    distinct_on: [pokeathlonstatname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokeathlonstatname_order_by!]

    """filter the rows returned"""
    where: pokeathlonstatname_bool_exp
  ): pokeathlonstatname_aggregate!

  """An array relationship"""
  pokedexdescriptions(
    """distinct select on columns"""
    distinct_on: [pokedexdescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokedexdescription_order_by!]

    """filter the rows returned"""
    where: pokedexdescription_bool_exp
  ): [pokedexdescription!]!

  """An aggregate relationship"""
  pokedexdescriptions_aggregate(
    """distinct select on columns"""
    distinct_on: [pokedexdescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokedexdescription_order_by!]

    """filter the rows returned"""
    where: pokedexdescription_bool_exp
  ): pokedexdescription_aggregate!

  """An array relationship"""
  pokedexnames(
    """distinct select on columns"""
    distinct_on: [pokedexname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokedexname_order_by!]

    """filter the rows returned"""
    where: pokedexname_bool_exp
  ): [pokedexname!]!

  """An aggregate relationship"""
  pokedexnames_aggregate(
    """distinct select on columns"""
    distinct_on: [pokedexname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokedexname_order_by!]

    """filter the rows returned"""
    where: pokedexname_bool_exp
  ): pokedexname_aggregate!

  """An array relationship"""
  pokemoncolornames(
    """distinct select on columns"""
    distinct_on: [pokemoncolorname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemoncolorname_order_by!]

    """filter the rows returned"""
    where: pokemoncolorname_bool_exp
  ): [pokemoncolorname!]!

  """An aggregate relationship"""
  pokemoncolornames_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemoncolorname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemoncolorname_order_by!]

    """filter the rows returned"""
    where: pokemoncolorname_bool_exp
  ): pokemoncolorname_aggregate!

  """An array relationship"""
  pokemonformnames(
    """distinct select on columns"""
    distinct_on: [pokemonformname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonformname_order_by!]

    """filter the rows returned"""
    where: pokemonformname_bool_exp
  ): [pokemonformname!]!

  """An aggregate relationship"""
  pokemonformnames_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonformname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonformname_order_by!]

    """filter the rows returned"""
    where: pokemonformname_bool_exp
  ): pokemonformname_aggregate!

  """An array relationship"""
  pokemonhabitatnames(
    """distinct select on columns"""
    distinct_on: [pokemonhabitatname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonhabitatname_order_by!]

    """filter the rows returned"""
    where: pokemonhabitatname_bool_exp
  ): [pokemonhabitatname!]!

  """An aggregate relationship"""
  pokemonhabitatnames_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonhabitatname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonhabitatname_order_by!]

    """filter the rows returned"""
    where: pokemonhabitatname_bool_exp
  ): pokemonhabitatname_aggregate!

  """An array relationship"""
  pokemonshapenames(
    """distinct select on columns"""
    distinct_on: [pokemonshapename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonshapename_order_by!]

    """filter the rows returned"""
    where: pokemonshapename_bool_exp
  ): [pokemonshapename!]!

  """An aggregate relationship"""
  pokemonshapenames_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonshapename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonshapename_order_by!]

    """filter the rows returned"""
    where: pokemonshapename_bool_exp
  ): pokemonshapename_aggregate!

  """An array relationship"""
  pokemonspeciesdescriptions(
    """distinct select on columns"""
    distinct_on: [pokemonspeciesdescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonspeciesdescription_order_by!]

    """filter the rows returned"""
    where: pokemonspeciesdescription_bool_exp
  ): [pokemonspeciesdescription!]!

  """An aggregate relationship"""
  pokemonspeciesdescriptions_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonspeciesdescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonspeciesdescription_order_by!]

    """filter the rows returned"""
    where: pokemonspeciesdescription_bool_exp
  ): pokemonspeciesdescription_aggregate!

  """An array relationship"""
  pokemonspeciesflavortexts(
    """distinct select on columns"""
    distinct_on: [pokemonspeciesflavortext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonspeciesflavortext_order_by!]

    """filter the rows returned"""
    where: pokemonspeciesflavortext_bool_exp
  ): [pokemonspeciesflavortext!]!

  """An aggregate relationship"""
  pokemonspeciesflavortexts_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonspeciesflavortext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonspeciesflavortext_order_by!]

    """filter the rows returned"""
    where: pokemonspeciesflavortext_bool_exp
  ): pokemonspeciesflavortext_aggregate!

  """An array relationship"""
  pokemonspeciesnames(
    """distinct select on columns"""
    distinct_on: [pokemonspeciesname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonspeciesname_order_by!]

    """filter the rows returned"""
    where: pokemonspeciesname_bool_exp
  ): [pokemonspeciesname!]!

  """An aggregate relationship"""
  pokemonspeciesnames_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonspeciesname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonspeciesname_order_by!]

    """filter the rows returned"""
    where: pokemonspeciesname_bool_exp
  ): pokemonspeciesname_aggregate!

  """An array relationship"""
  regionnames(
    """distinct select on columns"""
    distinct_on: [regionname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [regionname_order_by!]

    """filter the rows returned"""
    where: regionname_bool_exp
  ): [regionname!]!

  """An aggregate relationship"""
  regionnames_aggregate(
    """distinct select on columns"""
    distinct_on: [regionname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [regionname_order_by!]

    """filter the rows returned"""
    where: regionname_bool_exp
  ): regionname_aggregate!

  """An array relationship"""
  statnames(
    """distinct select on columns"""
    distinct_on: [statname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [statname_order_by!]

    """filter the rows returned"""
    where: statname_bool_exp
  ): [statname!]!

  """An aggregate relationship"""
  statnames_aggregate(
    """distinct select on columns"""
    distinct_on: [statname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [statname_order_by!]

    """filter the rows returned"""
    where: statname_bool_exp
  ): statname_aggregate!

  """An array relationship"""
  supercontesteffectflavortexts(
    """distinct select on columns"""
    distinct_on: [supercontesteffectflavortext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [supercontesteffectflavortext_order_by!]

    """filter the rows returned"""
    where: supercontesteffectflavortext_bool_exp
  ): [supercontesteffectflavortext!]!

  """An aggregate relationship"""
  supercontesteffectflavortexts_aggregate(
    """distinct select on columns"""
    distinct_on: [supercontesteffectflavortext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [supercontesteffectflavortext_order_by!]

    """filter the rows returned"""
    where: supercontesteffectflavortext_bool_exp
  ): supercontesteffectflavortext_aggregate!

  """An array relationship"""
  typenames(
    """distinct select on columns"""
    distinct_on: [typename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [typename_order_by!]

    """filter the rows returned"""
    where: typename_bool_exp
  ): [typename!]!

  """An aggregate relationship"""
  typenames_aggregate(
    """distinct select on columns"""
    distinct_on: [typename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [typename_order_by!]

    """filter the rows returned"""
    where: typename_bool_exp
  ): typename_aggregate!

  """An array relationship"""
  versionnames(
    """distinct select on columns"""
    distinct_on: [versionname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [versionname_order_by!]

    """filter the rows returned"""
    where: versionname_bool_exp
  ): [versionname!]!

  """An aggregate relationship"""
  versionnames_aggregate(
    """distinct select on columns"""
    distinct_on: [versionname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [versionname_order_by!]

    """filter the rows returned"""
    where: versionname_bool_exp
  ): versionname_aggregate!
}

"""
aggregated selection of "pokemon_v2_language"
"""
type language_aggregate {
  aggregate: language_aggregate_fields
  nodes: [language!]!
}

"""
aggregate fields of "pokemon_v2_language"
"""
type language_aggregate_fields {
  avg: language_avg_fields
  count(columns: [language_select_column!], distinct: Boolean): Int!
  max: language_max_fields
  min: language_min_fields
  stddev: language_stddev_fields
  stddev_pop: language_stddev_pop_fields
  stddev_samp: language_stddev_samp_fields
  sum: language_sum_fields
  var_pop: language_var_pop_fields
  var_samp: language_var_samp_fields
  variance: language_variance_fields
}

"""aggregate avg on columns"""
type language_avg_fields {
  id: Float
  order: Float
}

"""
Boolean expression to filter rows from the table "pokemon_v2_language". All fields are combined with a logical 'AND'.
"""
input language_bool_exp {
  LanguagenamesByLocalLanguageId: languagename_bool_exp
  LanguagenamesByLocalLanguageId_aggregate: languagename_aggregate_bool_exp
  _and: [language_bool_exp!]
  _not: language_bool_exp
  _or: [language_bool_exp!]
  abilitychangeeffecttexts: abilitychangeeffecttext_bool_exp
  abilitychangeeffecttexts_aggregate: abilitychangeeffecttext_aggregate_bool_exp
  abilityeffecttexts: abilityeffecttext_bool_exp
  abilityeffecttexts_aggregate: abilityeffecttext_aggregate_bool_exp
  abilityflavortexts: abilityflavortext_bool_exp
  abilityflavortexts_aggregate: abilityflavortext_aggregate_bool_exp
  abilitynames: abilityname_bool_exp
  abilitynames_aggregate: abilityname_aggregate_bool_exp
  berryfirmnessnames: berryfirmnessname_bool_exp
  berryfirmnessnames_aggregate: berryfirmnessname_aggregate_bool_exp
  berryflavornames: berryflavorname_bool_exp
  berryflavornames_aggregate: berryflavorname_aggregate_bool_exp
  characteristicdescriptions: characteristicdescription_bool_exp
  characteristicdescriptions_aggregate: characteristicdescription_aggregate_bool_exp
  contesteffecteffecttexts: contesteffecteffecttext_bool_exp
  contesteffecteffecttexts_aggregate: contesteffecteffecttext_aggregate_bool_exp
  contesteffectflavortexts: contesteffectflavortext_bool_exp
  contesteffectflavortexts_aggregate: contesteffectflavortext_aggregate_bool_exp
  contesttypenames: contesttypename_bool_exp
  contesttypenames_aggregate: contesttypename_aggregate_bool_exp
  egggroupnames: egggroupname_bool_exp
  egggroupnames_aggregate: egggroupname_aggregate_bool_exp
  encounterconditionnames: encounterconditionname_bool_exp
  encounterconditionnames_aggregate: encounterconditionname_aggregate_bool_exp
  encounterconditionvaluenames: encounterconditionvaluename_bool_exp
  encounterconditionvaluenames_aggregate: encounterconditionvaluename_aggregate_bool_exp
  encountermethodnames: encountermethodname_bool_exp
  encountermethodnames_aggregate: encountermethodname_aggregate_bool_exp
  evolutiontriggernames: evolutiontriggername_bool_exp
  evolutiontriggernames_aggregate: evolutiontriggername_aggregate_bool_exp
  generationnames: generationname_bool_exp
  generationnames_aggregate: generationname_aggregate_bool_exp
  growthratedescriptions: growthratedescription_bool_exp
  growthratedescriptions_aggregate: growthratedescription_aggregate_bool_exp
  id: Int_comparison_exp
  iso3166: String_comparison_exp
  iso639: String_comparison_exp
  itemattributedescriptions: itemattributedescription_bool_exp
  itemattributedescriptions_aggregate: itemattributedescription_aggregate_bool_exp
  itemattributenames: itemattributename_bool_exp
  itemattributenames_aggregate: itemattributename_aggregate_bool_exp
  itemcategorynames: itemcategoryname_bool_exp
  itemcategorynames_aggregate: itemcategoryname_aggregate_bool_exp
  itemeffecttexts: itemeffecttext_bool_exp
  itemeffecttexts_aggregate: itemeffecttext_aggregate_bool_exp
  itemflavortexts: itemflavortext_bool_exp
  itemflavortexts_aggregate: itemflavortext_aggregate_bool_exp
  itemflingeffecteffecttexts: itemflingeffecteffecttext_bool_exp
  itemflingeffecteffecttexts_aggregate: itemflingeffecteffecttext_aggregate_bool_exp
  itemnames: itemname_bool_exp
  itemnames_aggregate: itemname_aggregate_bool_exp
  itempocketnames: itempocketname_bool_exp
  itempocketnames_aggregate: itempocketname_aggregate_bool_exp
  languagenames: languagename_bool_exp
  languagenames_aggregate: languagename_aggregate_bool_exp
  locationareanames: locationareaname_bool_exp
  locationareanames_aggregate: locationareaname_aggregate_bool_exp
  locationnames: locationname_bool_exp
  locationnames_aggregate: locationname_aggregate_bool_exp
  moveattributedescriptions: moveattributedescription_bool_exp
  moveattributedescriptions_aggregate: moveattributedescription_aggregate_bool_exp
  moveattributenames: moveattributename_bool_exp
  moveattributenames_aggregate: moveattributename_aggregate_bool_exp
  movebattlestylenames: movebattlestylename_bool_exp
  movebattlestylenames_aggregate: movebattlestylename_aggregate_bool_exp
  movedamageclassdescriptions: movedamageclassdescription_bool_exp
  movedamageclassdescriptions_aggregate: movedamageclassdescription_aggregate_bool_exp
  movedamageclassnames: movedamageclassname_bool_exp
  movedamageclassnames_aggregate: movedamageclassname_aggregate_bool_exp
  moveeffectchangeeffecttexts: moveeffectchangeeffecttext_bool_exp
  moveeffectchangeeffecttexts_aggregate: moveeffectchangeeffecttext_aggregate_bool_exp
  moveeffecteffecttexts: moveeffecteffecttext_bool_exp
  moveeffecteffecttexts_aggregate: moveeffecteffecttext_aggregate_bool_exp
  moveflavortexts: moveflavortext_bool_exp
  moveflavortexts_aggregate: moveflavortext_aggregate_bool_exp
  movelearnmethoddescriptions: movelearnmethoddescription_bool_exp
  movelearnmethoddescriptions_aggregate: movelearnmethoddescription_aggregate_bool_exp
  movelearnmethodnames: movelearnmethodname_bool_exp
  movelearnmethodnames_aggregate: movelearnmethodname_aggregate_bool_exp
  movemetaailmentnames: movemetaailmentname_bool_exp
  movemetaailmentnames_aggregate: movemetaailmentname_aggregate_bool_exp
  movemetacategorydescriptions: movemetacategorydescription_bool_exp
  movemetacategorydescriptions_aggregate: movemetacategorydescription_aggregate_bool_exp
  movenames: movename_bool_exp
  movenames_aggregate: movename_aggregate_bool_exp
  movetargetdescriptions: movetargetdescription_bool_exp
  movetargetdescriptions_aggregate: movetargetdescription_aggregate_bool_exp
  movetargetnames: movetargetname_bool_exp
  movetargetnames_aggregate: movetargetname_aggregate_bool_exp
  name: String_comparison_exp
  naturenames: naturename_bool_exp
  naturenames_aggregate: naturename_aggregate_bool_exp
  official: Boolean_comparison_exp
  order: Int_comparison_exp
  palparkareanames: palparkareaname_bool_exp
  palparkareanames_aggregate: palparkareaname_aggregate_bool_exp
  pokeathlonstatnames: pokeathlonstatname_bool_exp
  pokeathlonstatnames_aggregate: pokeathlonstatname_aggregate_bool_exp
  pokedexdescriptions: pokedexdescription_bool_exp
  pokedexdescriptions_aggregate: pokedexdescription_aggregate_bool_exp
  pokedexnames: pokedexname_bool_exp
  pokedexnames_aggregate: pokedexname_aggregate_bool_exp
  pokemoncolornames: pokemoncolorname_bool_exp
  pokemoncolornames_aggregate: pokemoncolorname_aggregate_bool_exp
  pokemonformnames: pokemonformname_bool_exp
  pokemonformnames_aggregate: pokemonformname_aggregate_bool_exp
  pokemonhabitatnames: pokemonhabitatname_bool_exp
  pokemonhabitatnames_aggregate: pokemonhabitatname_aggregate_bool_exp
  pokemonshapenames: pokemonshapename_bool_exp
  pokemonshapenames_aggregate: pokemonshapename_aggregate_bool_exp
  pokemonspeciesdescriptions: pokemonspeciesdescription_bool_exp
  pokemonspeciesdescriptions_aggregate: pokemonspeciesdescription_aggregate_bool_exp
  pokemonspeciesflavortexts: pokemonspeciesflavortext_bool_exp
  pokemonspeciesflavortexts_aggregate: pokemonspeciesflavortext_aggregate_bool_exp
  pokemonspeciesnames: pokemonspeciesname_bool_exp
  pokemonspeciesnames_aggregate: pokemonspeciesname_aggregate_bool_exp
  regionnames: regionname_bool_exp
  regionnames_aggregate: regionname_aggregate_bool_exp
  statnames: statname_bool_exp
  statnames_aggregate: statname_aggregate_bool_exp
  supercontesteffectflavortexts: supercontesteffectflavortext_bool_exp
  supercontesteffectflavortexts_aggregate: supercontesteffectflavortext_aggregate_bool_exp
  typenames: typename_bool_exp
  typenames_aggregate: typename_aggregate_bool_exp
  versionnames: versionname_bool_exp
  versionnames_aggregate: versionname_aggregate_bool_exp
}

"""aggregate max on columns"""
type language_max_fields {
  id: Int
  iso3166: String
  iso639: String
  name: String
  order: Int
}

"""aggregate min on columns"""
type language_min_fields {
  id: Int
  iso3166: String
  iso639: String
  name: String
  order: Int
}

"""Ordering options when selecting data from "pokemon_v2_language"."""
input language_order_by {
  LanguagenamesByLocalLanguageId_aggregate: languagename_aggregate_order_by
  abilitychangeeffecttexts_aggregate: abilitychangeeffecttext_aggregate_order_by
  abilityeffecttexts_aggregate: abilityeffecttext_aggregate_order_by
  abilityflavortexts_aggregate: abilityflavortext_aggregate_order_by
  abilitynames_aggregate: abilityname_aggregate_order_by
  berryfirmnessnames_aggregate: berryfirmnessname_aggregate_order_by
  berryflavornames_aggregate: berryflavorname_aggregate_order_by
  characteristicdescriptions_aggregate: characteristicdescription_aggregate_order_by
  contesteffecteffecttexts_aggregate: contesteffecteffecttext_aggregate_order_by
  contesteffectflavortexts_aggregate: contesteffectflavortext_aggregate_order_by
  contesttypenames_aggregate: contesttypename_aggregate_order_by
  egggroupnames_aggregate: egggroupname_aggregate_order_by
  encounterconditionnames_aggregate: encounterconditionname_aggregate_order_by
  encounterconditionvaluenames_aggregate: encounterconditionvaluename_aggregate_order_by
  encountermethodnames_aggregate: encountermethodname_aggregate_order_by
  evolutiontriggernames_aggregate: evolutiontriggername_aggregate_order_by
  generationnames_aggregate: generationname_aggregate_order_by
  growthratedescriptions_aggregate: growthratedescription_aggregate_order_by
  id: order_by
  iso3166: order_by
  iso639: order_by
  itemattributedescriptions_aggregate: itemattributedescription_aggregate_order_by
  itemattributenames_aggregate: itemattributename_aggregate_order_by
  itemcategorynames_aggregate: itemcategoryname_aggregate_order_by
  itemeffecttexts_aggregate: itemeffecttext_aggregate_order_by
  itemflavortexts_aggregate: itemflavortext_aggregate_order_by
  itemflingeffecteffecttexts_aggregate: itemflingeffecteffecttext_aggregate_order_by
  itemnames_aggregate: itemname_aggregate_order_by
  itempocketnames_aggregate: itempocketname_aggregate_order_by
  languagenames_aggregate: languagename_aggregate_order_by
  locationareanames_aggregate: locationareaname_aggregate_order_by
  locationnames_aggregate: locationname_aggregate_order_by
  moveattributedescriptions_aggregate: moveattributedescription_aggregate_order_by
  moveattributenames_aggregate: moveattributename_aggregate_order_by
  movebattlestylenames_aggregate: movebattlestylename_aggregate_order_by
  movedamageclassdescriptions_aggregate: movedamageclassdescription_aggregate_order_by
  movedamageclassnames_aggregate: movedamageclassname_aggregate_order_by
  moveeffectchangeeffecttexts_aggregate: moveeffectchangeeffecttext_aggregate_order_by
  moveeffecteffecttexts_aggregate: moveeffecteffecttext_aggregate_order_by
  moveflavortexts_aggregate: moveflavortext_aggregate_order_by
  movelearnmethoddescriptions_aggregate: movelearnmethoddescription_aggregate_order_by
  movelearnmethodnames_aggregate: movelearnmethodname_aggregate_order_by
  movemetaailmentnames_aggregate: movemetaailmentname_aggregate_order_by
  movemetacategorydescriptions_aggregate: movemetacategorydescription_aggregate_order_by
  movenames_aggregate: movename_aggregate_order_by
  movetargetdescriptions_aggregate: movetargetdescription_aggregate_order_by
  movetargetnames_aggregate: movetargetname_aggregate_order_by
  name: order_by
  naturenames_aggregate: naturename_aggregate_order_by
  official: order_by
  order: order_by
  palparkareanames_aggregate: palparkareaname_aggregate_order_by
  pokeathlonstatnames_aggregate: pokeathlonstatname_aggregate_order_by
  pokedexdescriptions_aggregate: pokedexdescription_aggregate_order_by
  pokedexnames_aggregate: pokedexname_aggregate_order_by
  pokemoncolornames_aggregate: pokemoncolorname_aggregate_order_by
  pokemonformnames_aggregate: pokemonformname_aggregate_order_by
  pokemonhabitatnames_aggregate: pokemonhabitatname_aggregate_order_by
  pokemonshapenames_aggregate: pokemonshapename_aggregate_order_by
  pokemonspeciesdescriptions_aggregate: pokemonspeciesdescription_aggregate_order_by
  pokemonspeciesflavortexts_aggregate: pokemonspeciesflavortext_aggregate_order_by
  pokemonspeciesnames_aggregate: pokemonspeciesname_aggregate_order_by
  regionnames_aggregate: regionname_aggregate_order_by
  statnames_aggregate: statname_aggregate_order_by
  supercontesteffectflavortexts_aggregate: supercontesteffectflavortext_aggregate_order_by
  typenames_aggregate: typename_aggregate_order_by
  versionnames_aggregate: versionname_aggregate_order_by
}

"""
select columns of table "pokemon_v2_language"
"""
enum language_select_column {
  """column name"""
  id

  """column name"""
  iso3166

  """column name"""
  iso639

  """column name"""
  name

  """column name"""
  official

  """column name"""
  order
}

"""aggregate stddev on columns"""
type language_stddev_fields {
  id: Float
  order: Float
}

"""aggregate stddev_pop on columns"""
type language_stddev_pop_fields {
  id: Float
  order: Float
}

"""aggregate stddev_samp on columns"""
type language_stddev_samp_fields {
  id: Float
  order: Float
}

"""aggregate sum on columns"""
type language_sum_fields {
  id: Int
  order: Int
}

"""aggregate var_pop on columns"""
type language_var_pop_fields {
  id: Float
  order: Float
}

"""aggregate var_samp on columns"""
type language_var_samp_fields {
  id: Float
  order: Float
}

"""aggregate variance on columns"""
type language_variance_fields {
  id: Float
  order: Float
}

"""
columns and relationships of "pokemon_v2_languagename"
"""
type languagename {
  """An object relationship"""
  LanguageByLocalLanguageId: language
  id: Int!

  """An object relationship"""
  language: language
  language_id: Int
  local_language_id: Int
  name: String!
}

"""
aggregated selection of "pokemon_v2_languagename"
"""
type languagename_aggregate {
  aggregate: languagename_aggregate_fields
  nodes: [languagename!]!
}

input languagename_aggregate_bool_exp {
  count: languagename_aggregate_bool_exp_count
}

input languagename_aggregate_bool_exp_count {
  arguments: [languagename_select_column!]
  distinct: Boolean
  filter: languagename_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_languagename"
"""
type languagename_aggregate_fields {
  avg: languagename_avg_fields
  count(columns: [languagename_select_column!], distinct: Boolean): Int!
  max: languagename_max_fields
  min: languagename_min_fields
  stddev: languagename_stddev_fields
  stddev_pop: languagename_stddev_pop_fields
  stddev_samp: languagename_stddev_samp_fields
  sum: languagename_sum_fields
  var_pop: languagename_var_pop_fields
  var_samp: languagename_var_samp_fields
  variance: languagename_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_languagename"
"""
input languagename_aggregate_order_by {
  avg: languagename_avg_order_by
  count: order_by
  max: languagename_max_order_by
  min: languagename_min_order_by
  stddev: languagename_stddev_order_by
  stddev_pop: languagename_stddev_pop_order_by
  stddev_samp: languagename_stddev_samp_order_by
  sum: languagename_sum_order_by
  var_pop: languagename_var_pop_order_by
  var_samp: languagename_var_samp_order_by
  variance: languagename_variance_order_by
}

"""aggregate avg on columns"""
type languagename_avg_fields {
  id: Float
  language_id: Float
  local_language_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_languagename"
"""
input languagename_avg_order_by {
  id: order_by
  language_id: order_by
  local_language_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_languagename". All fields are combined with a logical 'AND'.
"""
input languagename_bool_exp {
  LanguageByLocalLanguageId: language_bool_exp
  _and: [languagename_bool_exp!]
  _not: languagename_bool_exp
  _or: [languagename_bool_exp!]
  id: Int_comparison_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
  local_language_id: Int_comparison_exp
  name: String_comparison_exp
}

"""aggregate max on columns"""
type languagename_max_fields {
  id: Int
  language_id: Int
  local_language_id: Int
  name: String
}

"""
order by max() on columns of table "pokemon_v2_languagename"
"""
input languagename_max_order_by {
  id: order_by
  language_id: order_by
  local_language_id: order_by
  name: order_by
}

"""aggregate min on columns"""
type languagename_min_fields {
  id: Int
  language_id: Int
  local_language_id: Int
  name: String
}

"""
order by min() on columns of table "pokemon_v2_languagename"
"""
input languagename_min_order_by {
  id: order_by
  language_id: order_by
  local_language_id: order_by
  name: order_by
}

"""Ordering options when selecting data from "pokemon_v2_languagename"."""
input languagename_order_by {
  LanguageByLocalLanguageId: language_order_by
  id: order_by
  language: language_order_by
  language_id: order_by
  local_language_id: order_by
  name: order_by
}

"""
select columns of table "pokemon_v2_languagename"
"""
enum languagename_select_column {
  """column name"""
  id

  """column name"""
  language_id

  """column name"""
  local_language_id

  """column name"""
  name
}

"""aggregate stddev on columns"""
type languagename_stddev_fields {
  id: Float
  language_id: Float
  local_language_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_languagename"
"""
input languagename_stddev_order_by {
  id: order_by
  language_id: order_by
  local_language_id: order_by
}

"""aggregate stddev_pop on columns"""
type languagename_stddev_pop_fields {
  id: Float
  language_id: Float
  local_language_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_languagename"
"""
input languagename_stddev_pop_order_by {
  id: order_by
  language_id: order_by
  local_language_id: order_by
}

"""aggregate stddev_samp on columns"""
type languagename_stddev_samp_fields {
  id: Float
  language_id: Float
  local_language_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_languagename"
"""
input languagename_stddev_samp_order_by {
  id: order_by
  language_id: order_by
  local_language_id: order_by
}

"""aggregate sum on columns"""
type languagename_sum_fields {
  id: Int
  language_id: Int
  local_language_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_languagename"
"""
input languagename_sum_order_by {
  id: order_by
  language_id: order_by
  local_language_id: order_by
}

"""aggregate var_pop on columns"""
type languagename_var_pop_fields {
  id: Float
  language_id: Float
  local_language_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_languagename"
"""
input languagename_var_pop_order_by {
  id: order_by
  language_id: order_by
  local_language_id: order_by
}

"""aggregate var_samp on columns"""
type languagename_var_samp_fields {
  id: Float
  language_id: Float
  local_language_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_languagename"
"""
input languagename_var_samp_order_by {
  id: order_by
  language_id: order_by
  local_language_id: order_by
}

"""aggregate variance on columns"""
type languagename_variance_fields {
  id: Float
  language_id: Float
  local_language_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_languagename"
"""
input languagename_variance_order_by {
  id: order_by
  language_id: order_by
  local_language_id: order_by
}

"""
columns and relationships of "pokemon_v2_location"
"""
type location {
  id: Int!

  """An array relationship"""
  locationareas(
    """distinct select on columns"""
    distinct_on: [locationarea_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [locationarea_order_by!]

    """filter the rows returned"""
    where: locationarea_bool_exp
  ): [locationarea!]!

  """An aggregate relationship"""
  locationareas_aggregate(
    """distinct select on columns"""
    distinct_on: [locationarea_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [locationarea_order_by!]

    """filter the rows returned"""
    where: locationarea_bool_exp
  ): locationarea_aggregate!

  """An array relationship"""
  locationgameindices(
    """distinct select on columns"""
    distinct_on: [locationgameindex_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [locationgameindex_order_by!]

    """filter the rows returned"""
    where: locationgameindex_bool_exp
  ): [locationgameindex!]!

  """An aggregate relationship"""
  locationgameindices_aggregate(
    """distinct select on columns"""
    distinct_on: [locationgameindex_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [locationgameindex_order_by!]

    """filter the rows returned"""
    where: locationgameindex_bool_exp
  ): locationgameindex_aggregate!

  """An array relationship"""
  locationnames(
    """distinct select on columns"""
    distinct_on: [locationname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [locationname_order_by!]

    """filter the rows returned"""
    where: locationname_bool_exp
  ): [locationname!]!

  """An aggregate relationship"""
  locationnames_aggregate(
    """distinct select on columns"""
    distinct_on: [locationname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [locationname_order_by!]

    """filter the rows returned"""
    where: locationname_bool_exp
  ): locationname_aggregate!
  name: String!

  """An array relationship"""
  pokemonevolutions(
    """distinct select on columns"""
    distinct_on: [pokemonevolution_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonevolution_order_by!]

    """filter the rows returned"""
    where: pokemonevolution_bool_exp
  ): [pokemonevolution!]!

  """An aggregate relationship"""
  pokemonevolutions_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonevolution_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonevolution_order_by!]

    """filter the rows returned"""
    where: pokemonevolution_bool_exp
  ): pokemonevolution_aggregate!

  """An object relationship"""
  region: region
  region_id: Int
}

"""
aggregated selection of "pokemon_v2_location"
"""
type location_aggregate {
  aggregate: location_aggregate_fields
  nodes: [location!]!
}

input location_aggregate_bool_exp {
  count: location_aggregate_bool_exp_count
}

input location_aggregate_bool_exp_count {
  arguments: [location_select_column!]
  distinct: Boolean
  filter: location_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_location"
"""
type location_aggregate_fields {
  avg: location_avg_fields
  count(columns: [location_select_column!], distinct: Boolean): Int!
  max: location_max_fields
  min: location_min_fields
  stddev: location_stddev_fields
  stddev_pop: location_stddev_pop_fields
  stddev_samp: location_stddev_samp_fields
  sum: location_sum_fields
  var_pop: location_var_pop_fields
  var_samp: location_var_samp_fields
  variance: location_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_location"
"""
input location_aggregate_order_by {
  avg: location_avg_order_by
  count: order_by
  max: location_max_order_by
  min: location_min_order_by
  stddev: location_stddev_order_by
  stddev_pop: location_stddev_pop_order_by
  stddev_samp: location_stddev_samp_order_by
  sum: location_sum_order_by
  var_pop: location_var_pop_order_by
  var_samp: location_var_samp_order_by
  variance: location_variance_order_by
}

"""aggregate avg on columns"""
type location_avg_fields {
  id: Float
  region_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_location"
"""
input location_avg_order_by {
  id: order_by
  region_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_location". All fields are combined with a logical 'AND'.
"""
input location_bool_exp {
  _and: [location_bool_exp!]
  _not: location_bool_exp
  _or: [location_bool_exp!]
  id: Int_comparison_exp
  locationareas: locationarea_bool_exp
  locationareas_aggregate: locationarea_aggregate_bool_exp
  locationgameindices: locationgameindex_bool_exp
  locationgameindices_aggregate: locationgameindex_aggregate_bool_exp
  locationnames: locationname_bool_exp
  locationnames_aggregate: locationname_aggregate_bool_exp
  name: String_comparison_exp
  pokemonevolutions: pokemonevolution_bool_exp
  pokemonevolutions_aggregate: pokemonevolution_aggregate_bool_exp
  region: region_bool_exp
  region_id: Int_comparison_exp
}

"""aggregate max on columns"""
type location_max_fields {
  id: Int
  name: String
  region_id: Int
}

"""
order by max() on columns of table "pokemon_v2_location"
"""
input location_max_order_by {
  id: order_by
  name: order_by
  region_id: order_by
}

"""aggregate min on columns"""
type location_min_fields {
  id: Int
  name: String
  region_id: Int
}

"""
order by min() on columns of table "pokemon_v2_location"
"""
input location_min_order_by {
  id: order_by
  name: order_by
  region_id: order_by
}

"""Ordering options when selecting data from "pokemon_v2_location"."""
input location_order_by {
  id: order_by
  locationareas_aggregate: locationarea_aggregate_order_by
  locationgameindices_aggregate: locationgameindex_aggregate_order_by
  locationnames_aggregate: locationname_aggregate_order_by
  name: order_by
  pokemonevolutions_aggregate: pokemonevolution_aggregate_order_by
  region: region_order_by
  region_id: order_by
}

"""
select columns of table "pokemon_v2_location"
"""
enum location_select_column {
  """column name"""
  id

  """column name"""
  name

  """column name"""
  region_id
}

"""aggregate stddev on columns"""
type location_stddev_fields {
  id: Float
  region_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_location"
"""
input location_stddev_order_by {
  id: order_by
  region_id: order_by
}

"""aggregate stddev_pop on columns"""
type location_stddev_pop_fields {
  id: Float
  region_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_location"
"""
input location_stddev_pop_order_by {
  id: order_by
  region_id: order_by
}

"""aggregate stddev_samp on columns"""
type location_stddev_samp_fields {
  id: Float
  region_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_location"
"""
input location_stddev_samp_order_by {
  id: order_by
  region_id: order_by
}

"""aggregate sum on columns"""
type location_sum_fields {
  id: Int
  region_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_location"
"""
input location_sum_order_by {
  id: order_by
  region_id: order_by
}

"""aggregate var_pop on columns"""
type location_var_pop_fields {
  id: Float
  region_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_location"
"""
input location_var_pop_order_by {
  id: order_by
  region_id: order_by
}

"""aggregate var_samp on columns"""
type location_var_samp_fields {
  id: Float
  region_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_location"
"""
input location_var_samp_order_by {
  id: order_by
  region_id: order_by
}

"""aggregate variance on columns"""
type location_variance_fields {
  id: Float
  region_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_location"
"""
input location_variance_order_by {
  id: order_by
  region_id: order_by
}

"""
columns and relationships of "pokemon_v2_locationarea"
"""
type locationarea {
  """An array relationship"""
  encounters(
    """distinct select on columns"""
    distinct_on: [encounter_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [encounter_order_by!]

    """filter the rows returned"""
    where: encounter_bool_exp
  ): [encounter!]!

  """An aggregate relationship"""
  encounters_aggregate(
    """distinct select on columns"""
    distinct_on: [encounter_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [encounter_order_by!]

    """filter the rows returned"""
    where: encounter_bool_exp
  ): encounter_aggregate!
  game_index: Int!
  id: Int!

  """An object relationship"""
  location: location
  location_id: Int

  """An array relationship"""
  locationareaencounterrates(
    """distinct select on columns"""
    distinct_on: [locationareaencounterrate_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [locationareaencounterrate_order_by!]

    """filter the rows returned"""
    where: locationareaencounterrate_bool_exp
  ): [locationareaencounterrate!]!

  """An aggregate relationship"""
  locationareaencounterrates_aggregate(
    """distinct select on columns"""
    distinct_on: [locationareaencounterrate_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [locationareaencounterrate_order_by!]

    """filter the rows returned"""
    where: locationareaencounterrate_bool_exp
  ): locationareaencounterrate_aggregate!

  """An array relationship"""
  locationareanames(
    """distinct select on columns"""
    distinct_on: [locationareaname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [locationareaname_order_by!]

    """filter the rows returned"""
    where: locationareaname_bool_exp
  ): [locationareaname!]!

  """An aggregate relationship"""
  locationareanames_aggregate(
    """distinct select on columns"""
    distinct_on: [locationareaname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [locationareaname_order_by!]

    """filter the rows returned"""
    where: locationareaname_bool_exp
  ): locationareaname_aggregate!
  name: String!
}

"""
aggregated selection of "pokemon_v2_locationarea"
"""
type locationarea_aggregate {
  aggregate: locationarea_aggregate_fields
  nodes: [locationarea!]!
}

input locationarea_aggregate_bool_exp {
  count: locationarea_aggregate_bool_exp_count
}

input locationarea_aggregate_bool_exp_count {
  arguments: [locationarea_select_column!]
  distinct: Boolean
  filter: locationarea_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_locationarea"
"""
type locationarea_aggregate_fields {
  avg: locationarea_avg_fields
  count(columns: [locationarea_select_column!], distinct: Boolean): Int!
  max: locationarea_max_fields
  min: locationarea_min_fields
  stddev: locationarea_stddev_fields
  stddev_pop: locationarea_stddev_pop_fields
  stddev_samp: locationarea_stddev_samp_fields
  sum: locationarea_sum_fields
  var_pop: locationarea_var_pop_fields
  var_samp: locationarea_var_samp_fields
  variance: locationarea_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_locationarea"
"""
input locationarea_aggregate_order_by {
  avg: locationarea_avg_order_by
  count: order_by
  max: locationarea_max_order_by
  min: locationarea_min_order_by
  stddev: locationarea_stddev_order_by
  stddev_pop: locationarea_stddev_pop_order_by
  stddev_samp: locationarea_stddev_samp_order_by
  sum: locationarea_sum_order_by
  var_pop: locationarea_var_pop_order_by
  var_samp: locationarea_var_samp_order_by
  variance: locationarea_variance_order_by
}

"""aggregate avg on columns"""
type locationarea_avg_fields {
  game_index: Float
  id: Float
  location_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_locationarea"
"""
input locationarea_avg_order_by {
  game_index: order_by
  id: order_by
  location_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_locationarea". All fields are combined with a logical 'AND'.
"""
input locationarea_bool_exp {
  _and: [locationarea_bool_exp!]
  _not: locationarea_bool_exp
  _or: [locationarea_bool_exp!]
  encounters: encounter_bool_exp
  encounters_aggregate: encounter_aggregate_bool_exp
  game_index: Int_comparison_exp
  id: Int_comparison_exp
  location: location_bool_exp
  location_id: Int_comparison_exp
  locationareaencounterrates: locationareaencounterrate_bool_exp
  locationareaencounterrates_aggregate: locationareaencounterrate_aggregate_bool_exp
  locationareanames: locationareaname_bool_exp
  locationareanames_aggregate: locationareaname_aggregate_bool_exp
  name: String_comparison_exp
}

"""aggregate max on columns"""
type locationarea_max_fields {
  game_index: Int
  id: Int
  location_id: Int
  name: String
}

"""
order by max() on columns of table "pokemon_v2_locationarea"
"""
input locationarea_max_order_by {
  game_index: order_by
  id: order_by
  location_id: order_by
  name: order_by
}

"""aggregate min on columns"""
type locationarea_min_fields {
  game_index: Int
  id: Int
  location_id: Int
  name: String
}

"""
order by min() on columns of table "pokemon_v2_locationarea"
"""
input locationarea_min_order_by {
  game_index: order_by
  id: order_by
  location_id: order_by
  name: order_by
}

"""Ordering options when selecting data from "pokemon_v2_locationarea"."""
input locationarea_order_by {
  encounters_aggregate: encounter_aggregate_order_by
  game_index: order_by
  id: order_by
  location: location_order_by
  location_id: order_by
  locationareaencounterrates_aggregate: locationareaencounterrate_aggregate_order_by
  locationareanames_aggregate: locationareaname_aggregate_order_by
  name: order_by
}

"""
select columns of table "pokemon_v2_locationarea"
"""
enum locationarea_select_column {
  """column name"""
  game_index

  """column name"""
  id

  """column name"""
  location_id

  """column name"""
  name
}

"""aggregate stddev on columns"""
type locationarea_stddev_fields {
  game_index: Float
  id: Float
  location_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_locationarea"
"""
input locationarea_stddev_order_by {
  game_index: order_by
  id: order_by
  location_id: order_by
}

"""aggregate stddev_pop on columns"""
type locationarea_stddev_pop_fields {
  game_index: Float
  id: Float
  location_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_locationarea"
"""
input locationarea_stddev_pop_order_by {
  game_index: order_by
  id: order_by
  location_id: order_by
}

"""aggregate stddev_samp on columns"""
type locationarea_stddev_samp_fields {
  game_index: Float
  id: Float
  location_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_locationarea"
"""
input locationarea_stddev_samp_order_by {
  game_index: order_by
  id: order_by
  location_id: order_by
}

"""aggregate sum on columns"""
type locationarea_sum_fields {
  game_index: Int
  id: Int
  location_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_locationarea"
"""
input locationarea_sum_order_by {
  game_index: order_by
  id: order_by
  location_id: order_by
}

"""aggregate var_pop on columns"""
type locationarea_var_pop_fields {
  game_index: Float
  id: Float
  location_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_locationarea"
"""
input locationarea_var_pop_order_by {
  game_index: order_by
  id: order_by
  location_id: order_by
}

"""aggregate var_samp on columns"""
type locationarea_var_samp_fields {
  game_index: Float
  id: Float
  location_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_locationarea"
"""
input locationarea_var_samp_order_by {
  game_index: order_by
  id: order_by
  location_id: order_by
}

"""aggregate variance on columns"""
type locationarea_variance_fields {
  game_index: Float
  id: Float
  location_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_locationarea"
"""
input locationarea_variance_order_by {
  game_index: order_by
  id: order_by
  location_id: order_by
}

"""
columns and relationships of "pokemon_v2_locationareaencounterrate"
"""
type locationareaencounterrate {
  encounter_method_id: Int

  """An object relationship"""
  encountermethod: encountermethod
  id: Int!
  location_area_id: Int

  """An object relationship"""
  locationarea: locationarea
  rate: Int!

  """An object relationship"""
  version: version
  version_id: Int
}

"""
aggregated selection of "pokemon_v2_locationareaencounterrate"
"""
type locationareaencounterrate_aggregate {
  aggregate: locationareaencounterrate_aggregate_fields
  nodes: [locationareaencounterrate!]!
}

input locationareaencounterrate_aggregate_bool_exp {
  count: locationareaencounterrate_aggregate_bool_exp_count
}

input locationareaencounterrate_aggregate_bool_exp_count {
  arguments: [locationareaencounterrate_select_column!]
  distinct: Boolean
  filter: locationareaencounterrate_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_locationareaencounterrate"
"""
type locationareaencounterrate_aggregate_fields {
  avg: locationareaencounterrate_avg_fields
  count(columns: [locationareaencounterrate_select_column!], distinct: Boolean): Int!
  max: locationareaencounterrate_max_fields
  min: locationareaencounterrate_min_fields
  stddev: locationareaencounterrate_stddev_fields
  stddev_pop: locationareaencounterrate_stddev_pop_fields
  stddev_samp: locationareaencounterrate_stddev_samp_fields
  sum: locationareaencounterrate_sum_fields
  var_pop: locationareaencounterrate_var_pop_fields
  var_samp: locationareaencounterrate_var_samp_fields
  variance: locationareaencounterrate_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_locationareaencounterrate"
"""
input locationareaencounterrate_aggregate_order_by {
  avg: locationareaencounterrate_avg_order_by
  count: order_by
  max: locationareaencounterrate_max_order_by
  min: locationareaencounterrate_min_order_by
  stddev: locationareaencounterrate_stddev_order_by
  stddev_pop: locationareaencounterrate_stddev_pop_order_by
  stddev_samp: locationareaencounterrate_stddev_samp_order_by
  sum: locationareaencounterrate_sum_order_by
  var_pop: locationareaencounterrate_var_pop_order_by
  var_samp: locationareaencounterrate_var_samp_order_by
  variance: locationareaencounterrate_variance_order_by
}

"""aggregate avg on columns"""
type locationareaencounterrate_avg_fields {
  encounter_method_id: Float
  id: Float
  location_area_id: Float
  rate: Float
  version_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_locationareaencounterrate"
"""
input locationareaencounterrate_avg_order_by {
  encounter_method_id: order_by
  id: order_by
  location_area_id: order_by
  rate: order_by
  version_id: order_by
}

"""
Boolean expression to filter rows from the table
"pokemon_v2_locationareaencounterrate". All fields are combined with a logical 'AND'.
"""
input locationareaencounterrate_bool_exp {
  _and: [locationareaencounterrate_bool_exp!]
  _not: locationareaencounterrate_bool_exp
  _or: [locationareaencounterrate_bool_exp!]
  encounter_method_id: Int_comparison_exp
  encountermethod: encountermethod_bool_exp
  id: Int_comparison_exp
  location_area_id: Int_comparison_exp
  locationarea: locationarea_bool_exp
  rate: Int_comparison_exp
  version: version_bool_exp
  version_id: Int_comparison_exp
}

"""aggregate max on columns"""
type locationareaencounterrate_max_fields {
  encounter_method_id: Int
  id: Int
  location_area_id: Int
  rate: Int
  version_id: Int
}

"""
order by max() on columns of table "pokemon_v2_locationareaencounterrate"
"""
input locationareaencounterrate_max_order_by {
  encounter_method_id: order_by
  id: order_by
  location_area_id: order_by
  rate: order_by
  version_id: order_by
}

"""aggregate min on columns"""
type locationareaencounterrate_min_fields {
  encounter_method_id: Int
  id: Int
  location_area_id: Int
  rate: Int
  version_id: Int
}

"""
order by min() on columns of table "pokemon_v2_locationareaencounterrate"
"""
input locationareaencounterrate_min_order_by {
  encounter_method_id: order_by
  id: order_by
  location_area_id: order_by
  rate: order_by
  version_id: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_locationareaencounterrate".
"""
input locationareaencounterrate_order_by {
  encounter_method_id: order_by
  encountermethod: encountermethod_order_by
  id: order_by
  location_area_id: order_by
  locationarea: locationarea_order_by
  rate: order_by
  version: version_order_by
  version_id: order_by
}

"""
select columns of table "pokemon_v2_locationareaencounterrate"
"""
enum locationareaencounterrate_select_column {
  """column name"""
  encounter_method_id

  """column name"""
  id

  """column name"""
  location_area_id

  """column name"""
  rate

  """column name"""
  version_id
}

"""aggregate stddev on columns"""
type locationareaencounterrate_stddev_fields {
  encounter_method_id: Float
  id: Float
  location_area_id: Float
  rate: Float
  version_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_locationareaencounterrate"
"""
input locationareaencounterrate_stddev_order_by {
  encounter_method_id: order_by
  id: order_by
  location_area_id: order_by
  rate: order_by
  version_id: order_by
}

"""aggregate stddev_pop on columns"""
type locationareaencounterrate_stddev_pop_fields {
  encounter_method_id: Float
  id: Float
  location_area_id: Float
  rate: Float
  version_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_locationareaencounterrate"
"""
input locationareaencounterrate_stddev_pop_order_by {
  encounter_method_id: order_by
  id: order_by
  location_area_id: order_by
  rate: order_by
  version_id: order_by
}

"""aggregate stddev_samp on columns"""
type locationareaencounterrate_stddev_samp_fields {
  encounter_method_id: Float
  id: Float
  location_area_id: Float
  rate: Float
  version_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_locationareaencounterrate"
"""
input locationareaencounterrate_stddev_samp_order_by {
  encounter_method_id: order_by
  id: order_by
  location_area_id: order_by
  rate: order_by
  version_id: order_by
}

"""aggregate sum on columns"""
type locationareaencounterrate_sum_fields {
  encounter_method_id: Int
  id: Int
  location_area_id: Int
  rate: Int
  version_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_locationareaencounterrate"
"""
input locationareaencounterrate_sum_order_by {
  encounter_method_id: order_by
  id: order_by
  location_area_id: order_by
  rate: order_by
  version_id: order_by
}

"""aggregate var_pop on columns"""
type locationareaencounterrate_var_pop_fields {
  encounter_method_id: Float
  id: Float
  location_area_id: Float
  rate: Float
  version_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_locationareaencounterrate"
"""
input locationareaencounterrate_var_pop_order_by {
  encounter_method_id: order_by
  id: order_by
  location_area_id: order_by
  rate: order_by
  version_id: order_by
}

"""aggregate var_samp on columns"""
type locationareaencounterrate_var_samp_fields {
  encounter_method_id: Float
  id: Float
  location_area_id: Float
  rate: Float
  version_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_locationareaencounterrate"
"""
input locationareaencounterrate_var_samp_order_by {
  encounter_method_id: order_by
  id: order_by
  location_area_id: order_by
  rate: order_by
  version_id: order_by
}

"""aggregate variance on columns"""
type locationareaencounterrate_variance_fields {
  encounter_method_id: Float
  id: Float
  location_area_id: Float
  rate: Float
  version_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_locationareaencounterrate"
"""
input locationareaencounterrate_variance_order_by {
  encounter_method_id: order_by
  id: order_by
  location_area_id: order_by
  rate: order_by
  version_id: order_by
}

"""
columns and relationships of "pokemon_v2_locationareaname"
"""
type locationareaname {
  id: Int!

  """An object relationship"""
  language: language
  language_id: Int
  location_area_id: Int

  """An object relationship"""
  locationarea: locationarea
  name: String!
}

"""
aggregated selection of "pokemon_v2_locationareaname"
"""
type locationareaname_aggregate {
  aggregate: locationareaname_aggregate_fields
  nodes: [locationareaname!]!
}

input locationareaname_aggregate_bool_exp {
  count: locationareaname_aggregate_bool_exp_count
}

input locationareaname_aggregate_bool_exp_count {
  arguments: [locationareaname_select_column!]
  distinct: Boolean
  filter: locationareaname_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_locationareaname"
"""
type locationareaname_aggregate_fields {
  avg: locationareaname_avg_fields
  count(columns: [locationareaname_select_column!], distinct: Boolean): Int!
  max: locationareaname_max_fields
  min: locationareaname_min_fields
  stddev: locationareaname_stddev_fields
  stddev_pop: locationareaname_stddev_pop_fields
  stddev_samp: locationareaname_stddev_samp_fields
  sum: locationareaname_sum_fields
  var_pop: locationareaname_var_pop_fields
  var_samp: locationareaname_var_samp_fields
  variance: locationareaname_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_locationareaname"
"""
input locationareaname_aggregate_order_by {
  avg: locationareaname_avg_order_by
  count: order_by
  max: locationareaname_max_order_by
  min: locationareaname_min_order_by
  stddev: locationareaname_stddev_order_by
  stddev_pop: locationareaname_stddev_pop_order_by
  stddev_samp: locationareaname_stddev_samp_order_by
  sum: locationareaname_sum_order_by
  var_pop: locationareaname_var_pop_order_by
  var_samp: locationareaname_var_samp_order_by
  variance: locationareaname_variance_order_by
}

"""aggregate avg on columns"""
type locationareaname_avg_fields {
  id: Float
  language_id: Float
  location_area_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_locationareaname"
"""
input locationareaname_avg_order_by {
  id: order_by
  language_id: order_by
  location_area_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_locationareaname".
All fields are combined with a logical 'AND'.
"""
input locationareaname_bool_exp {
  _and: [locationareaname_bool_exp!]
  _not: locationareaname_bool_exp
  _or: [locationareaname_bool_exp!]
  id: Int_comparison_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
  location_area_id: Int_comparison_exp
  locationarea: locationarea_bool_exp
  name: String_comparison_exp
}

"""aggregate max on columns"""
type locationareaname_max_fields {
  id: Int
  language_id: Int
  location_area_id: Int
  name: String
}

"""
order by max() on columns of table "pokemon_v2_locationareaname"
"""
input locationareaname_max_order_by {
  id: order_by
  language_id: order_by
  location_area_id: order_by
  name: order_by
}

"""aggregate min on columns"""
type locationareaname_min_fields {
  id: Int
  language_id: Int
  location_area_id: Int
  name: String
}

"""
order by min() on columns of table "pokemon_v2_locationareaname"
"""
input locationareaname_min_order_by {
  id: order_by
  language_id: order_by
  location_area_id: order_by
  name: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_locationareaname".
"""
input locationareaname_order_by {
  id: order_by
  language: language_order_by
  language_id: order_by
  location_area_id: order_by
  locationarea: locationarea_order_by
  name: order_by
}

"""
select columns of table "pokemon_v2_locationareaname"
"""
enum locationareaname_select_column {
  """column name"""
  id

  """column name"""
  language_id

  """column name"""
  location_area_id

  """column name"""
  name
}

"""aggregate stddev on columns"""
type locationareaname_stddev_fields {
  id: Float
  language_id: Float
  location_area_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_locationareaname"
"""
input locationareaname_stddev_order_by {
  id: order_by
  language_id: order_by
  location_area_id: order_by
}

"""aggregate stddev_pop on columns"""
type locationareaname_stddev_pop_fields {
  id: Float
  language_id: Float
  location_area_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_locationareaname"
"""
input locationareaname_stddev_pop_order_by {
  id: order_by
  language_id: order_by
  location_area_id: order_by
}

"""aggregate stddev_samp on columns"""
type locationareaname_stddev_samp_fields {
  id: Float
  language_id: Float
  location_area_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_locationareaname"
"""
input locationareaname_stddev_samp_order_by {
  id: order_by
  language_id: order_by
  location_area_id: order_by
}

"""aggregate sum on columns"""
type locationareaname_sum_fields {
  id: Int
  language_id: Int
  location_area_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_locationareaname"
"""
input locationareaname_sum_order_by {
  id: order_by
  language_id: order_by
  location_area_id: order_by
}

"""aggregate var_pop on columns"""
type locationareaname_var_pop_fields {
  id: Float
  language_id: Float
  location_area_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_locationareaname"
"""
input locationareaname_var_pop_order_by {
  id: order_by
  language_id: order_by
  location_area_id: order_by
}

"""aggregate var_samp on columns"""
type locationareaname_var_samp_fields {
  id: Float
  language_id: Float
  location_area_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_locationareaname"
"""
input locationareaname_var_samp_order_by {
  id: order_by
  language_id: order_by
  location_area_id: order_by
}

"""aggregate variance on columns"""
type locationareaname_variance_fields {
  id: Float
  language_id: Float
  location_area_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_locationareaname"
"""
input locationareaname_variance_order_by {
  id: order_by
  language_id: order_by
  location_area_id: order_by
}

"""
columns and relationships of "pokemon_v2_locationgameindex"
"""
type locationgameindex {
  game_index: Int!

  """An object relationship"""
  generation: generation
  generation_id: Int
  id: Int!

  """An object relationship"""
  location: location
  location_id: Int
}

"""
aggregated selection of "pokemon_v2_locationgameindex"
"""
type locationgameindex_aggregate {
  aggregate: locationgameindex_aggregate_fields
  nodes: [locationgameindex!]!
}

input locationgameindex_aggregate_bool_exp {
  count: locationgameindex_aggregate_bool_exp_count
}

input locationgameindex_aggregate_bool_exp_count {
  arguments: [locationgameindex_select_column!]
  distinct: Boolean
  filter: locationgameindex_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_locationgameindex"
"""
type locationgameindex_aggregate_fields {
  avg: locationgameindex_avg_fields
  count(columns: [locationgameindex_select_column!], distinct: Boolean): Int!
  max: locationgameindex_max_fields
  min: locationgameindex_min_fields
  stddev: locationgameindex_stddev_fields
  stddev_pop: locationgameindex_stddev_pop_fields
  stddev_samp: locationgameindex_stddev_samp_fields
  sum: locationgameindex_sum_fields
  var_pop: locationgameindex_var_pop_fields
  var_samp: locationgameindex_var_samp_fields
  variance: locationgameindex_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_locationgameindex"
"""
input locationgameindex_aggregate_order_by {
  avg: locationgameindex_avg_order_by
  count: order_by
  max: locationgameindex_max_order_by
  min: locationgameindex_min_order_by
  stddev: locationgameindex_stddev_order_by
  stddev_pop: locationgameindex_stddev_pop_order_by
  stddev_samp: locationgameindex_stddev_samp_order_by
  sum: locationgameindex_sum_order_by
  var_pop: locationgameindex_var_pop_order_by
  var_samp: locationgameindex_var_samp_order_by
  variance: locationgameindex_variance_order_by
}

"""aggregate avg on columns"""
type locationgameindex_avg_fields {
  game_index: Float
  generation_id: Float
  id: Float
  location_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_locationgameindex"
"""
input locationgameindex_avg_order_by {
  game_index: order_by
  generation_id: order_by
  id: order_by
  location_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_locationgameindex".
All fields are combined with a logical 'AND'.
"""
input locationgameindex_bool_exp {
  _and: [locationgameindex_bool_exp!]
  _not: locationgameindex_bool_exp
  _or: [locationgameindex_bool_exp!]
  game_index: Int_comparison_exp
  generation: generation_bool_exp
  generation_id: Int_comparison_exp
  id: Int_comparison_exp
  location: location_bool_exp
  location_id: Int_comparison_exp
}

"""aggregate max on columns"""
type locationgameindex_max_fields {
  game_index: Int
  generation_id: Int
  id: Int
  location_id: Int
}

"""
order by max() on columns of table "pokemon_v2_locationgameindex"
"""
input locationgameindex_max_order_by {
  game_index: order_by
  generation_id: order_by
  id: order_by
  location_id: order_by
}

"""aggregate min on columns"""
type locationgameindex_min_fields {
  game_index: Int
  generation_id: Int
  id: Int
  location_id: Int
}

"""
order by min() on columns of table "pokemon_v2_locationgameindex"
"""
input locationgameindex_min_order_by {
  game_index: order_by
  generation_id: order_by
  id: order_by
  location_id: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_locationgameindex".
"""
input locationgameindex_order_by {
  game_index: order_by
  generation: generation_order_by
  generation_id: order_by
  id: order_by
  location: location_order_by
  location_id: order_by
}

"""
select columns of table "pokemon_v2_locationgameindex"
"""
enum locationgameindex_select_column {
  """column name"""
  game_index

  """column name"""
  generation_id

  """column name"""
  id

  """column name"""
  location_id
}

"""aggregate stddev on columns"""
type locationgameindex_stddev_fields {
  game_index: Float
  generation_id: Float
  id: Float
  location_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_locationgameindex"
"""
input locationgameindex_stddev_order_by {
  game_index: order_by
  generation_id: order_by
  id: order_by
  location_id: order_by
}

"""aggregate stddev_pop on columns"""
type locationgameindex_stddev_pop_fields {
  game_index: Float
  generation_id: Float
  id: Float
  location_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_locationgameindex"
"""
input locationgameindex_stddev_pop_order_by {
  game_index: order_by
  generation_id: order_by
  id: order_by
  location_id: order_by
}

"""aggregate stddev_samp on columns"""
type locationgameindex_stddev_samp_fields {
  game_index: Float
  generation_id: Float
  id: Float
  location_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_locationgameindex"
"""
input locationgameindex_stddev_samp_order_by {
  game_index: order_by
  generation_id: order_by
  id: order_by
  location_id: order_by
}

"""aggregate sum on columns"""
type locationgameindex_sum_fields {
  game_index: Int
  generation_id: Int
  id: Int
  location_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_locationgameindex"
"""
input locationgameindex_sum_order_by {
  game_index: order_by
  generation_id: order_by
  id: order_by
  location_id: order_by
}

"""aggregate var_pop on columns"""
type locationgameindex_var_pop_fields {
  game_index: Float
  generation_id: Float
  id: Float
  location_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_locationgameindex"
"""
input locationgameindex_var_pop_order_by {
  game_index: order_by
  generation_id: order_by
  id: order_by
  location_id: order_by
}

"""aggregate var_samp on columns"""
type locationgameindex_var_samp_fields {
  game_index: Float
  generation_id: Float
  id: Float
  location_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_locationgameindex"
"""
input locationgameindex_var_samp_order_by {
  game_index: order_by
  generation_id: order_by
  id: order_by
  location_id: order_by
}

"""aggregate variance on columns"""
type locationgameindex_variance_fields {
  game_index: Float
  generation_id: Float
  id: Float
  location_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_locationgameindex"
"""
input locationgameindex_variance_order_by {
  game_index: order_by
  generation_id: order_by
  id: order_by
  location_id: order_by
}

"""
columns and relationships of "pokemon_v2_locationname"
"""
type locationname {
  id: Int!

  """An object relationship"""
  language: language
  language_id: Int

  """An object relationship"""
  location: location
  location_id: Int
  name: String!
}

"""
aggregated selection of "pokemon_v2_locationname"
"""
type locationname_aggregate {
  aggregate: locationname_aggregate_fields
  nodes: [locationname!]!
}

input locationname_aggregate_bool_exp {
  count: locationname_aggregate_bool_exp_count
}

input locationname_aggregate_bool_exp_count {
  arguments: [locationname_select_column!]
  distinct: Boolean
  filter: locationname_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_locationname"
"""
type locationname_aggregate_fields {
  avg: locationname_avg_fields
  count(columns: [locationname_select_column!], distinct: Boolean): Int!
  max: locationname_max_fields
  min: locationname_min_fields
  stddev: locationname_stddev_fields
  stddev_pop: locationname_stddev_pop_fields
  stddev_samp: locationname_stddev_samp_fields
  sum: locationname_sum_fields
  var_pop: locationname_var_pop_fields
  var_samp: locationname_var_samp_fields
  variance: locationname_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_locationname"
"""
input locationname_aggregate_order_by {
  avg: locationname_avg_order_by
  count: order_by
  max: locationname_max_order_by
  min: locationname_min_order_by
  stddev: locationname_stddev_order_by
  stddev_pop: locationname_stddev_pop_order_by
  stddev_samp: locationname_stddev_samp_order_by
  sum: locationname_sum_order_by
  var_pop: locationname_var_pop_order_by
  var_samp: locationname_var_samp_order_by
  variance: locationname_variance_order_by
}

"""aggregate avg on columns"""
type locationname_avg_fields {
  id: Float
  language_id: Float
  location_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_locationname"
"""
input locationname_avg_order_by {
  id: order_by
  language_id: order_by
  location_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_locationname". All fields are combined with a logical 'AND'.
"""
input locationname_bool_exp {
  _and: [locationname_bool_exp!]
  _not: locationname_bool_exp
  _or: [locationname_bool_exp!]
  id: Int_comparison_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
  location: location_bool_exp
  location_id: Int_comparison_exp
  name: String_comparison_exp
}

"""aggregate max on columns"""
type locationname_max_fields {
  id: Int
  language_id: Int
  location_id: Int
  name: String
}

"""
order by max() on columns of table "pokemon_v2_locationname"
"""
input locationname_max_order_by {
  id: order_by
  language_id: order_by
  location_id: order_by
  name: order_by
}

"""aggregate min on columns"""
type locationname_min_fields {
  id: Int
  language_id: Int
  location_id: Int
  name: String
}

"""
order by min() on columns of table "pokemon_v2_locationname"
"""
input locationname_min_order_by {
  id: order_by
  language_id: order_by
  location_id: order_by
  name: order_by
}

"""Ordering options when selecting data from "pokemon_v2_locationname"."""
input locationname_order_by {
  id: order_by
  language: language_order_by
  language_id: order_by
  location: location_order_by
  location_id: order_by
  name: order_by
}

"""
select columns of table "pokemon_v2_locationname"
"""
enum locationname_select_column {
  """column name"""
  id

  """column name"""
  language_id

  """column name"""
  location_id

  """column name"""
  name
}

"""aggregate stddev on columns"""
type locationname_stddev_fields {
  id: Float
  language_id: Float
  location_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_locationname"
"""
input locationname_stddev_order_by {
  id: order_by
  language_id: order_by
  location_id: order_by
}

"""aggregate stddev_pop on columns"""
type locationname_stddev_pop_fields {
  id: Float
  language_id: Float
  location_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_locationname"
"""
input locationname_stddev_pop_order_by {
  id: order_by
  language_id: order_by
  location_id: order_by
}

"""aggregate stddev_samp on columns"""
type locationname_stddev_samp_fields {
  id: Float
  language_id: Float
  location_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_locationname"
"""
input locationname_stddev_samp_order_by {
  id: order_by
  language_id: order_by
  location_id: order_by
}

"""aggregate sum on columns"""
type locationname_sum_fields {
  id: Int
  language_id: Int
  location_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_locationname"
"""
input locationname_sum_order_by {
  id: order_by
  language_id: order_by
  location_id: order_by
}

"""aggregate var_pop on columns"""
type locationname_var_pop_fields {
  id: Float
  language_id: Float
  location_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_locationname"
"""
input locationname_var_pop_order_by {
  id: order_by
  language_id: order_by
  location_id: order_by
}

"""aggregate var_samp on columns"""
type locationname_var_samp_fields {
  id: Float
  language_id: Float
  location_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_locationname"
"""
input locationname_var_samp_order_by {
  id: order_by
  language_id: order_by
  location_id: order_by
}

"""aggregate variance on columns"""
type locationname_variance_fields {
  id: Float
  language_id: Float
  location_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_locationname"
"""
input locationname_variance_order_by {
  id: order_by
  language_id: order_by
  location_id: order_by
}

"""
columns and relationships of "pokemon_v2_machine"
"""
type machine {
  growth_rate_id: Int

  """An object relationship"""
  growthrate: growthrate
  id: Int!

  """An object relationship"""
  item: item
  item_id: Int
  machine_number: Int!

  """An object relationship"""
  move: move
  move_id: Int
  version_group_id: Int

  """An object relationship"""
  versiongroup: versiongroup
}

"""
aggregated selection of "pokemon_v2_machine"
"""
type machine_aggregate {
  aggregate: machine_aggregate_fields
  nodes: [machine!]!
}

input machine_aggregate_bool_exp {
  count: machine_aggregate_bool_exp_count
}

input machine_aggregate_bool_exp_count {
  arguments: [machine_select_column!]
  distinct: Boolean
  filter: machine_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_machine"
"""
type machine_aggregate_fields {
  avg: machine_avg_fields
  count(columns: [machine_select_column!], distinct: Boolean): Int!
  max: machine_max_fields
  min: machine_min_fields
  stddev: machine_stddev_fields
  stddev_pop: machine_stddev_pop_fields
  stddev_samp: machine_stddev_samp_fields
  sum: machine_sum_fields
  var_pop: machine_var_pop_fields
  var_samp: machine_var_samp_fields
  variance: machine_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_machine"
"""
input machine_aggregate_order_by {
  avg: machine_avg_order_by
  count: order_by
  max: machine_max_order_by
  min: machine_min_order_by
  stddev: machine_stddev_order_by
  stddev_pop: machine_stddev_pop_order_by
  stddev_samp: machine_stddev_samp_order_by
  sum: machine_sum_order_by
  var_pop: machine_var_pop_order_by
  var_samp: machine_var_samp_order_by
  variance: machine_variance_order_by
}

"""aggregate avg on columns"""
type machine_avg_fields {
  growth_rate_id: Float
  id: Float
  item_id: Float
  machine_number: Float
  move_id: Float
  version_group_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_machine"
"""
input machine_avg_order_by {
  growth_rate_id: order_by
  id: order_by
  item_id: order_by
  machine_number: order_by
  move_id: order_by
  version_group_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_machine". All fields are combined with a logical 'AND'.
"""
input machine_bool_exp {
  _and: [machine_bool_exp!]
  _not: machine_bool_exp
  _or: [machine_bool_exp!]
  growth_rate_id: Int_comparison_exp
  growthrate: growthrate_bool_exp
  id: Int_comparison_exp
  item: item_bool_exp
  item_id: Int_comparison_exp
  machine_number: Int_comparison_exp
  move: move_bool_exp
  move_id: Int_comparison_exp
  version_group_id: Int_comparison_exp
  versiongroup: versiongroup_bool_exp
}

"""aggregate max on columns"""
type machine_max_fields {
  growth_rate_id: Int
  id: Int
  item_id: Int
  machine_number: Int
  move_id: Int
  version_group_id: Int
}

"""
order by max() on columns of table "pokemon_v2_machine"
"""
input machine_max_order_by {
  growth_rate_id: order_by
  id: order_by
  item_id: order_by
  machine_number: order_by
  move_id: order_by
  version_group_id: order_by
}

"""aggregate min on columns"""
type machine_min_fields {
  growth_rate_id: Int
  id: Int
  item_id: Int
  machine_number: Int
  move_id: Int
  version_group_id: Int
}

"""
order by min() on columns of table "pokemon_v2_machine"
"""
input machine_min_order_by {
  growth_rate_id: order_by
  id: order_by
  item_id: order_by
  machine_number: order_by
  move_id: order_by
  version_group_id: order_by
}

"""Ordering options when selecting data from "pokemon_v2_machine"."""
input machine_order_by {
  growth_rate_id: order_by
  growthrate: growthrate_order_by
  id: order_by
  item: item_order_by
  item_id: order_by
  machine_number: order_by
  move: move_order_by
  move_id: order_by
  version_group_id: order_by
  versiongroup: versiongroup_order_by
}

"""
select columns of table "pokemon_v2_machine"
"""
enum machine_select_column {
  """column name"""
  growth_rate_id

  """column name"""
  id

  """column name"""
  item_id

  """column name"""
  machine_number

  """column name"""
  move_id

  """column name"""
  version_group_id
}

"""aggregate stddev on columns"""
type machine_stddev_fields {
  growth_rate_id: Float
  id: Float
  item_id: Float
  machine_number: Float
  move_id: Float
  version_group_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_machine"
"""
input machine_stddev_order_by {
  growth_rate_id: order_by
  id: order_by
  item_id: order_by
  machine_number: order_by
  move_id: order_by
  version_group_id: order_by
}

"""aggregate stddev_pop on columns"""
type machine_stddev_pop_fields {
  growth_rate_id: Float
  id: Float
  item_id: Float
  machine_number: Float
  move_id: Float
  version_group_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_machine"
"""
input machine_stddev_pop_order_by {
  growth_rate_id: order_by
  id: order_by
  item_id: order_by
  machine_number: order_by
  move_id: order_by
  version_group_id: order_by
}

"""aggregate stddev_samp on columns"""
type machine_stddev_samp_fields {
  growth_rate_id: Float
  id: Float
  item_id: Float
  machine_number: Float
  move_id: Float
  version_group_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_machine"
"""
input machine_stddev_samp_order_by {
  growth_rate_id: order_by
  id: order_by
  item_id: order_by
  machine_number: order_by
  move_id: order_by
  version_group_id: order_by
}

"""aggregate sum on columns"""
type machine_sum_fields {
  growth_rate_id: Int
  id: Int
  item_id: Int
  machine_number: Int
  move_id: Int
  version_group_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_machine"
"""
input machine_sum_order_by {
  growth_rate_id: order_by
  id: order_by
  item_id: order_by
  machine_number: order_by
  move_id: order_by
  version_group_id: order_by
}

"""aggregate var_pop on columns"""
type machine_var_pop_fields {
  growth_rate_id: Float
  id: Float
  item_id: Float
  machine_number: Float
  move_id: Float
  version_group_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_machine"
"""
input machine_var_pop_order_by {
  growth_rate_id: order_by
  id: order_by
  item_id: order_by
  machine_number: order_by
  move_id: order_by
  version_group_id: order_by
}

"""aggregate var_samp on columns"""
type machine_var_samp_fields {
  growth_rate_id: Float
  id: Float
  item_id: Float
  machine_number: Float
  move_id: Float
  version_group_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_machine"
"""
input machine_var_samp_order_by {
  growth_rate_id: order_by
  id: order_by
  item_id: order_by
  machine_number: order_by
  move_id: order_by
  version_group_id: order_by
}

"""aggregate variance on columns"""
type machine_variance_fields {
  growth_rate_id: Float
  id: Float
  item_id: Float
  machine_number: Float
  move_id: Float
  version_group_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_machine"
"""
input machine_variance_order_by {
  growth_rate_id: order_by
  id: order_by
  item_id: order_by
  machine_number: order_by
  move_id: order_by
  version_group_id: order_by
}

"""
columns and relationships of "pokemon_v2_move"
"""
type move {
  """An array relationship"""
  ContestcombosBySecondMoveId(
    """distinct select on columns"""
    distinct_on: [contestcombo_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [contestcombo_order_by!]

    """filter the rows returned"""
    where: contestcombo_bool_exp
  ): [contestcombo!]!

  """An aggregate relationship"""
  ContestcombosBySecondMoveId_aggregate(
    """distinct select on columns"""
    distinct_on: [contestcombo_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [contestcombo_order_by!]

    """filter the rows returned"""
    where: contestcombo_bool_exp
  ): contestcombo_aggregate!

  """An array relationship"""
  SupercontestcombosBySecondMoveId(
    """distinct select on columns"""
    distinct_on: [supercontestcombo_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [supercontestcombo_order_by!]

    """filter the rows returned"""
    where: supercontestcombo_bool_exp
  ): [supercontestcombo!]!

  """An aggregate relationship"""
  SupercontestcombosBySecondMoveId_aggregate(
    """distinct select on columns"""
    distinct_on: [supercontestcombo_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [supercontestcombo_order_by!]

    """filter the rows returned"""
    where: supercontestcombo_bool_exp
  ): supercontestcombo_aggregate!
  accuracy: Int
  contest_effect_id: Int
  contest_type_id: Int

  """An array relationship"""
  contestcombos(
    """distinct select on columns"""
    distinct_on: [contestcombo_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [contestcombo_order_by!]

    """filter the rows returned"""
    where: contestcombo_bool_exp
  ): [contestcombo!]!

  """An aggregate relationship"""
  contestcombos_aggregate(
    """distinct select on columns"""
    distinct_on: [contestcombo_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [contestcombo_order_by!]

    """filter the rows returned"""
    where: contestcombo_bool_exp
  ): contestcombo_aggregate!

  """An object relationship"""
  contesteffect: contesteffect

  """An object relationship"""
  contesttype: contesttype

  """An object relationship"""
  generation: generation
  generation_id: Int
  id: Int!

  """An array relationship"""
  machines(
    """distinct select on columns"""
    distinct_on: [machine_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [machine_order_by!]

    """filter the rows returned"""
    where: machine_bool_exp
  ): [machine!]!

  """An aggregate relationship"""
  machines_aggregate(
    """distinct select on columns"""
    distinct_on: [machine_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [machine_order_by!]

    """filter the rows returned"""
    where: machine_bool_exp
  ): machine_aggregate!
  move_damage_class_id: Int
  move_effect_chance: Int
  move_effect_id: Int
  move_target_id: Int

  """An array relationship"""
  moveattributemaps(
    """distinct select on columns"""
    distinct_on: [moveattributemap_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [moveattributemap_order_by!]

    """filter the rows returned"""
    where: moveattributemap_bool_exp
  ): [moveattributemap!]!

  """An aggregate relationship"""
  moveattributemaps_aggregate(
    """distinct select on columns"""
    distinct_on: [moveattributemap_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [moveattributemap_order_by!]

    """filter the rows returned"""
    where: moveattributemap_bool_exp
  ): moveattributemap_aggregate!

  """An array relationship"""
  movechanges(
    """distinct select on columns"""
    distinct_on: [movechange_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movechange_order_by!]

    """filter the rows returned"""
    where: movechange_bool_exp
  ): [movechange!]!

  """An aggregate relationship"""
  movechanges_aggregate(
    """distinct select on columns"""
    distinct_on: [movechange_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movechange_order_by!]

    """filter the rows returned"""
    where: movechange_bool_exp
  ): movechange_aggregate!

  """An object relationship"""
  movedamageclass: movedamageclass

  """An object relationship"""
  moveeffect: moveeffect

  """An array relationship"""
  moveflavortexts(
    """distinct select on columns"""
    distinct_on: [moveflavortext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [moveflavortext_order_by!]

    """filter the rows returned"""
    where: moveflavortext_bool_exp
  ): [moveflavortext!]!

  """An aggregate relationship"""
  moveflavortexts_aggregate(
    """distinct select on columns"""
    distinct_on: [moveflavortext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [moveflavortext_order_by!]

    """filter the rows returned"""
    where: moveflavortext_bool_exp
  ): moveflavortext_aggregate!

  """An array relationship"""
  movemeta(
    """distinct select on columns"""
    distinct_on: [movemeta_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movemeta_order_by!]

    """filter the rows returned"""
    where: movemeta_bool_exp
  ): [movemeta!]!

  """An aggregate relationship"""
  movemeta_aggregate(
    """distinct select on columns"""
    distinct_on: [movemeta_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movemeta_order_by!]

    """filter the rows returned"""
    where: movemeta_bool_exp
  ): movemeta_aggregate!

  """An array relationship"""
  movemetastatchanges(
    """distinct select on columns"""
    distinct_on: [movemetastatchange_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movemetastatchange_order_by!]

    """filter the rows returned"""
    where: movemetastatchange_bool_exp
  ): [movemetastatchange!]!

  """An aggregate relationship"""
  movemetastatchanges_aggregate(
    """distinct select on columns"""
    distinct_on: [movemetastatchange_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movemetastatchange_order_by!]

    """filter the rows returned"""
    where: movemetastatchange_bool_exp
  ): movemetastatchange_aggregate!

  """An object relationship"""
  movemetum: movemeta

  """An array relationship"""
  movenames(
    """distinct select on columns"""
    distinct_on: [movename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movename_order_by!]

    """filter the rows returned"""
    where: movename_bool_exp
  ): [movename!]!

  """An aggregate relationship"""
  movenames_aggregate(
    """distinct select on columns"""
    distinct_on: [movename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movename_order_by!]

    """filter the rows returned"""
    where: movename_bool_exp
  ): movename_aggregate!

  """An object relationship"""
  movetarget: movetarget
  name: String!

  """An array relationship"""
  pokemonevolutions(
    """distinct select on columns"""
    distinct_on: [pokemonevolution_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonevolution_order_by!]

    """filter the rows returned"""
    where: pokemonevolution_bool_exp
  ): [pokemonevolution!]!

  """An aggregate relationship"""
  pokemonevolutions_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonevolution_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonevolution_order_by!]

    """filter the rows returned"""
    where: pokemonevolution_bool_exp
  ): pokemonevolution_aggregate!

  """An array relationship"""
  pokemonmoves(
    """distinct select on columns"""
    distinct_on: [pokemonmove_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonmove_order_by!]

    """filter the rows returned"""
    where: pokemonmove_bool_exp
  ): [pokemonmove!]!

  """An aggregate relationship"""
  pokemonmoves_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonmove_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonmove_order_by!]

    """filter the rows returned"""
    where: pokemonmove_bool_exp
  ): pokemonmove_aggregate!
  power: Int
  pp: Int
  priority: Int
  super_contest_effect_id: Int

  """An array relationship"""
  supercontestcombos(
    """distinct select on columns"""
    distinct_on: [supercontestcombo_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [supercontestcombo_order_by!]

    """filter the rows returned"""
    where: supercontestcombo_bool_exp
  ): [supercontestcombo!]!

  """An aggregate relationship"""
  supercontestcombos_aggregate(
    """distinct select on columns"""
    distinct_on: [supercontestcombo_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [supercontestcombo_order_by!]

    """filter the rows returned"""
    where: supercontestcombo_bool_exp
  ): supercontestcombo_aggregate!

  """An object relationship"""
  supercontesteffect: supercontesteffect

  """An object relationship"""
  type: type
  type_id: Int
}

"""
aggregated selection of "pokemon_v2_move"
"""
type move_aggregate {
  aggregate: move_aggregate_fields
  nodes: [move!]!
}

input move_aggregate_bool_exp {
  count: move_aggregate_bool_exp_count
}

input move_aggregate_bool_exp_count {
  arguments: [move_select_column!]
  distinct: Boolean
  filter: move_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_move"
"""
type move_aggregate_fields {
  avg: move_avg_fields
  count(columns: [move_select_column!], distinct: Boolean): Int!
  max: move_max_fields
  min: move_min_fields
  stddev: move_stddev_fields
  stddev_pop: move_stddev_pop_fields
  stddev_samp: move_stddev_samp_fields
  sum: move_sum_fields
  var_pop: move_var_pop_fields
  var_samp: move_var_samp_fields
  variance: move_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_move"
"""
input move_aggregate_order_by {
  avg: move_avg_order_by
  count: order_by
  max: move_max_order_by
  min: move_min_order_by
  stddev: move_stddev_order_by
  stddev_pop: move_stddev_pop_order_by
  stddev_samp: move_stddev_samp_order_by
  sum: move_sum_order_by
  var_pop: move_var_pop_order_by
  var_samp: move_var_samp_order_by
  variance: move_variance_order_by
}

"""aggregate avg on columns"""
type move_avg_fields {
  accuracy: Float
  contest_effect_id: Float
  contest_type_id: Float
  generation_id: Float
  id: Float
  move_damage_class_id: Float
  move_effect_chance: Float
  move_effect_id: Float
  move_target_id: Float
  power: Float
  pp: Float
  priority: Float
  super_contest_effect_id: Float
  type_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_move"
"""
input move_avg_order_by {
  accuracy: order_by
  contest_effect_id: order_by
  contest_type_id: order_by
  generation_id: order_by
  id: order_by
  move_damage_class_id: order_by
  move_effect_chance: order_by
  move_effect_id: order_by
  move_target_id: order_by
  power: order_by
  pp: order_by
  priority: order_by
  super_contest_effect_id: order_by
  type_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_move". All fields are combined with a logical 'AND'.
"""
input move_bool_exp {
  ContestcombosBySecondMoveId: contestcombo_bool_exp
  ContestcombosBySecondMoveId_aggregate: contestcombo_aggregate_bool_exp
  SupercontestcombosBySecondMoveId: supercontestcombo_bool_exp
  SupercontestcombosBySecondMoveId_aggregate: supercontestcombo_aggregate_bool_exp
  _and: [move_bool_exp!]
  _not: move_bool_exp
  _or: [move_bool_exp!]
  accuracy: Int_comparison_exp
  contest_effect_id: Int_comparison_exp
  contest_type_id: Int_comparison_exp
  contestcombos: contestcombo_bool_exp
  contestcombos_aggregate: contestcombo_aggregate_bool_exp
  contesteffect: contesteffect_bool_exp
  contesttype: contesttype_bool_exp
  generation: generation_bool_exp
  generation_id: Int_comparison_exp
  id: Int_comparison_exp
  machines: machine_bool_exp
  machines_aggregate: machine_aggregate_bool_exp
  move_damage_class_id: Int_comparison_exp
  move_effect_chance: Int_comparison_exp
  move_effect_id: Int_comparison_exp
  move_target_id: Int_comparison_exp
  moveattributemaps: moveattributemap_bool_exp
  moveattributemaps_aggregate: moveattributemap_aggregate_bool_exp
  movechanges: movechange_bool_exp
  movechanges_aggregate: movechange_aggregate_bool_exp
  movedamageclass: movedamageclass_bool_exp
  moveeffect: moveeffect_bool_exp
  moveflavortexts: moveflavortext_bool_exp
  moveflavortexts_aggregate: moveflavortext_aggregate_bool_exp
  movemeta: movemeta_bool_exp
  movemeta_aggregate: movemeta_aggregate_bool_exp
  movemetastatchanges: movemetastatchange_bool_exp
  movemetastatchanges_aggregate: movemetastatchange_aggregate_bool_exp
  movemetum: movemeta_bool_exp
  movenames: movename_bool_exp
  movenames_aggregate: movename_aggregate_bool_exp
  movetarget: movetarget_bool_exp
  name: String_comparison_exp
  pokemonevolutions: pokemonevolution_bool_exp
  pokemonevolutions_aggregate: pokemonevolution_aggregate_bool_exp
  pokemonmoves: pokemonmove_bool_exp
  pokemonmoves_aggregate: pokemonmove_aggregate_bool_exp
  power: Int_comparison_exp
  pp: Int_comparison_exp
  priority: Int_comparison_exp
  super_contest_effect_id: Int_comparison_exp
  supercontestcombos: supercontestcombo_bool_exp
  supercontestcombos_aggregate: supercontestcombo_aggregate_bool_exp
  supercontesteffect: supercontesteffect_bool_exp
  type: type_bool_exp
  type_id: Int_comparison_exp
}

"""aggregate max on columns"""
type move_max_fields {
  accuracy: Int
  contest_effect_id: Int
  contest_type_id: Int
  generation_id: Int
  id: Int
  move_damage_class_id: Int
  move_effect_chance: Int
  move_effect_id: Int
  move_target_id: Int
  name: String
  power: Int
  pp: Int
  priority: Int
  super_contest_effect_id: Int
  type_id: Int
}

"""
order by max() on columns of table "pokemon_v2_move"
"""
input move_max_order_by {
  accuracy: order_by
  contest_effect_id: order_by
  contest_type_id: order_by
  generation_id: order_by
  id: order_by
  move_damage_class_id: order_by
  move_effect_chance: order_by
  move_effect_id: order_by
  move_target_id: order_by
  name: order_by
  power: order_by
  pp: order_by
  priority: order_by
  super_contest_effect_id: order_by
  type_id: order_by
}

"""aggregate min on columns"""
type move_min_fields {
  accuracy: Int
  contest_effect_id: Int
  contest_type_id: Int
  generation_id: Int
  id: Int
  move_damage_class_id: Int
  move_effect_chance: Int
  move_effect_id: Int
  move_target_id: Int
  name: String
  power: Int
  pp: Int
  priority: Int
  super_contest_effect_id: Int
  type_id: Int
}

"""
order by min() on columns of table "pokemon_v2_move"
"""
input move_min_order_by {
  accuracy: order_by
  contest_effect_id: order_by
  contest_type_id: order_by
  generation_id: order_by
  id: order_by
  move_damage_class_id: order_by
  move_effect_chance: order_by
  move_effect_id: order_by
  move_target_id: order_by
  name: order_by
  power: order_by
  pp: order_by
  priority: order_by
  super_contest_effect_id: order_by
  type_id: order_by
}

"""Ordering options when selecting data from "pokemon_v2_move"."""
input move_order_by {
  ContestcombosBySecondMoveId_aggregate: contestcombo_aggregate_order_by
  SupercontestcombosBySecondMoveId_aggregate: supercontestcombo_aggregate_order_by
  accuracy: order_by
  contest_effect_id: order_by
  contest_type_id: order_by
  contestcombos_aggregate: contestcombo_aggregate_order_by
  contesteffect: contesteffect_order_by
  contesttype: contesttype_order_by
  generation: generation_order_by
  generation_id: order_by
  id: order_by
  machines_aggregate: machine_aggregate_order_by
  move_damage_class_id: order_by
  move_effect_chance: order_by
  move_effect_id: order_by
  move_target_id: order_by
  moveattributemaps_aggregate: moveattributemap_aggregate_order_by
  movechanges_aggregate: movechange_aggregate_order_by
  movedamageclass: movedamageclass_order_by
  moveeffect: moveeffect_order_by
  moveflavortexts_aggregate: moveflavortext_aggregate_order_by
  movemeta_aggregate: movemeta_aggregate_order_by
  movemetastatchanges_aggregate: movemetastatchange_aggregate_order_by
  movemetum: movemeta_order_by
  movenames_aggregate: movename_aggregate_order_by
  movetarget: movetarget_order_by
  name: order_by
  pokemonevolutions_aggregate: pokemonevolution_aggregate_order_by
  pokemonmoves_aggregate: pokemonmove_aggregate_order_by
  power: order_by
  pp: order_by
  priority: order_by
  super_contest_effect_id: order_by
  supercontestcombos_aggregate: supercontestcombo_aggregate_order_by
  supercontesteffect: supercontesteffect_order_by
  type: type_order_by
  type_id: order_by
}

"""
select columns of table "pokemon_v2_move"
"""
enum move_select_column {
  """column name"""
  accuracy

  """column name"""
  contest_effect_id

  """column name"""
  contest_type_id

  """column name"""
  generation_id

  """column name"""
  id

  """column name"""
  move_damage_class_id

  """column name"""
  move_effect_chance

  """column name"""
  move_effect_id

  """column name"""
  move_target_id

  """column name"""
  name

  """column name"""
  power

  """column name"""
  pp

  """column name"""
  priority

  """column name"""
  super_contest_effect_id

  """column name"""
  type_id
}

"""aggregate stddev on columns"""
type move_stddev_fields {
  accuracy: Float
  contest_effect_id: Float
  contest_type_id: Float
  generation_id: Float
  id: Float
  move_damage_class_id: Float
  move_effect_chance: Float
  move_effect_id: Float
  move_target_id: Float
  power: Float
  pp: Float
  priority: Float
  super_contest_effect_id: Float
  type_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_move"
"""
input move_stddev_order_by {
  accuracy: order_by
  contest_effect_id: order_by
  contest_type_id: order_by
  generation_id: order_by
  id: order_by
  move_damage_class_id: order_by
  move_effect_chance: order_by
  move_effect_id: order_by
  move_target_id: order_by
  power: order_by
  pp: order_by
  priority: order_by
  super_contest_effect_id: order_by
  type_id: order_by
}

"""aggregate stddev_pop on columns"""
type move_stddev_pop_fields {
  accuracy: Float
  contest_effect_id: Float
  contest_type_id: Float
  generation_id: Float
  id: Float
  move_damage_class_id: Float
  move_effect_chance: Float
  move_effect_id: Float
  move_target_id: Float
  power: Float
  pp: Float
  priority: Float
  super_contest_effect_id: Float
  type_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_move"
"""
input move_stddev_pop_order_by {
  accuracy: order_by
  contest_effect_id: order_by
  contest_type_id: order_by
  generation_id: order_by
  id: order_by
  move_damage_class_id: order_by
  move_effect_chance: order_by
  move_effect_id: order_by
  move_target_id: order_by
  power: order_by
  pp: order_by
  priority: order_by
  super_contest_effect_id: order_by
  type_id: order_by
}

"""aggregate stddev_samp on columns"""
type move_stddev_samp_fields {
  accuracy: Float
  contest_effect_id: Float
  contest_type_id: Float
  generation_id: Float
  id: Float
  move_damage_class_id: Float
  move_effect_chance: Float
  move_effect_id: Float
  move_target_id: Float
  power: Float
  pp: Float
  priority: Float
  super_contest_effect_id: Float
  type_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_move"
"""
input move_stddev_samp_order_by {
  accuracy: order_by
  contest_effect_id: order_by
  contest_type_id: order_by
  generation_id: order_by
  id: order_by
  move_damage_class_id: order_by
  move_effect_chance: order_by
  move_effect_id: order_by
  move_target_id: order_by
  power: order_by
  pp: order_by
  priority: order_by
  super_contest_effect_id: order_by
  type_id: order_by
}

"""aggregate sum on columns"""
type move_sum_fields {
  accuracy: Int
  contest_effect_id: Int
  contest_type_id: Int
  generation_id: Int
  id: Int
  move_damage_class_id: Int
  move_effect_chance: Int
  move_effect_id: Int
  move_target_id: Int
  power: Int
  pp: Int
  priority: Int
  super_contest_effect_id: Int
  type_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_move"
"""
input move_sum_order_by {
  accuracy: order_by
  contest_effect_id: order_by
  contest_type_id: order_by
  generation_id: order_by
  id: order_by
  move_damage_class_id: order_by
  move_effect_chance: order_by
  move_effect_id: order_by
  move_target_id: order_by
  power: order_by
  pp: order_by
  priority: order_by
  super_contest_effect_id: order_by
  type_id: order_by
}

"""aggregate var_pop on columns"""
type move_var_pop_fields {
  accuracy: Float
  contest_effect_id: Float
  contest_type_id: Float
  generation_id: Float
  id: Float
  move_damage_class_id: Float
  move_effect_chance: Float
  move_effect_id: Float
  move_target_id: Float
  power: Float
  pp: Float
  priority: Float
  super_contest_effect_id: Float
  type_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_move"
"""
input move_var_pop_order_by {
  accuracy: order_by
  contest_effect_id: order_by
  contest_type_id: order_by
  generation_id: order_by
  id: order_by
  move_damage_class_id: order_by
  move_effect_chance: order_by
  move_effect_id: order_by
  move_target_id: order_by
  power: order_by
  pp: order_by
  priority: order_by
  super_contest_effect_id: order_by
  type_id: order_by
}

"""aggregate var_samp on columns"""
type move_var_samp_fields {
  accuracy: Float
  contest_effect_id: Float
  contest_type_id: Float
  generation_id: Float
  id: Float
  move_damage_class_id: Float
  move_effect_chance: Float
  move_effect_id: Float
  move_target_id: Float
  power: Float
  pp: Float
  priority: Float
  super_contest_effect_id: Float
  type_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_move"
"""
input move_var_samp_order_by {
  accuracy: order_by
  contest_effect_id: order_by
  contest_type_id: order_by
  generation_id: order_by
  id: order_by
  move_damage_class_id: order_by
  move_effect_chance: order_by
  move_effect_id: order_by
  move_target_id: order_by
  power: order_by
  pp: order_by
  priority: order_by
  super_contest_effect_id: order_by
  type_id: order_by
}

"""aggregate variance on columns"""
type move_variance_fields {
  accuracy: Float
  contest_effect_id: Float
  contest_type_id: Float
  generation_id: Float
  id: Float
  move_damage_class_id: Float
  move_effect_chance: Float
  move_effect_id: Float
  move_target_id: Float
  power: Float
  pp: Float
  priority: Float
  super_contest_effect_id: Float
  type_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_move"
"""
input move_variance_order_by {
  accuracy: order_by
  contest_effect_id: order_by
  contest_type_id: order_by
  generation_id: order_by
  id: order_by
  move_damage_class_id: order_by
  move_effect_chance: order_by
  move_effect_id: order_by
  move_target_id: order_by
  power: order_by
  pp: order_by
  priority: order_by
  super_contest_effect_id: order_by
  type_id: order_by
}

"""
columns and relationships of "pokemon_v2_moveattribute"
"""
type moveattribute {
  id: Int!

  """An array relationship"""
  moveattributedescriptions(
    """distinct select on columns"""
    distinct_on: [moveattributedescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [moveattributedescription_order_by!]

    """filter the rows returned"""
    where: moveattributedescription_bool_exp
  ): [moveattributedescription!]!

  """An aggregate relationship"""
  moveattributedescriptions_aggregate(
    """distinct select on columns"""
    distinct_on: [moveattributedescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [moveattributedescription_order_by!]

    """filter the rows returned"""
    where: moveattributedescription_bool_exp
  ): moveattributedescription_aggregate!

  """An array relationship"""
  moveattributemaps(
    """distinct select on columns"""
    distinct_on: [moveattributemap_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [moveattributemap_order_by!]

    """filter the rows returned"""
    where: moveattributemap_bool_exp
  ): [moveattributemap!]!

  """An aggregate relationship"""
  moveattributemaps_aggregate(
    """distinct select on columns"""
    distinct_on: [moveattributemap_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [moveattributemap_order_by!]

    """filter the rows returned"""
    where: moveattributemap_bool_exp
  ): moveattributemap_aggregate!

  """An array relationship"""
  moveattributenames(
    """distinct select on columns"""
    distinct_on: [moveattributename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [moveattributename_order_by!]

    """filter the rows returned"""
    where: moveattributename_bool_exp
  ): [moveattributename!]!

  """An aggregate relationship"""
  moveattributenames_aggregate(
    """distinct select on columns"""
    distinct_on: [moveattributename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [moveattributename_order_by!]

    """filter the rows returned"""
    where: moveattributename_bool_exp
  ): moveattributename_aggregate!
  name: String!
}

"""
aggregated selection of "pokemon_v2_moveattribute"
"""
type moveattribute_aggregate {
  aggregate: moveattribute_aggregate_fields
  nodes: [moveattribute!]!
}

"""
aggregate fields of "pokemon_v2_moveattribute"
"""
type moveattribute_aggregate_fields {
  avg: moveattribute_avg_fields
  count(columns: [moveattribute_select_column!], distinct: Boolean): Int!
  max: moveattribute_max_fields
  min: moveattribute_min_fields
  stddev: moveattribute_stddev_fields
  stddev_pop: moveattribute_stddev_pop_fields
  stddev_samp: moveattribute_stddev_samp_fields
  sum: moveattribute_sum_fields
  var_pop: moveattribute_var_pop_fields
  var_samp: moveattribute_var_samp_fields
  variance: moveattribute_variance_fields
}

"""aggregate avg on columns"""
type moveattribute_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "pokemon_v2_moveattribute". All fields are combined with a logical 'AND'.
"""
input moveattribute_bool_exp {
  _and: [moveattribute_bool_exp!]
  _not: moveattribute_bool_exp
  _or: [moveattribute_bool_exp!]
  id: Int_comparison_exp
  moveattributedescriptions: moveattributedescription_bool_exp
  moveattributedescriptions_aggregate: moveattributedescription_aggregate_bool_exp
  moveattributemaps: moveattributemap_bool_exp
  moveattributemaps_aggregate: moveattributemap_aggregate_bool_exp
  moveattributenames: moveattributename_bool_exp
  moveattributenames_aggregate: moveattributename_aggregate_bool_exp
  name: String_comparison_exp
}

"""aggregate max on columns"""
type moveattribute_max_fields {
  id: Int
  name: String
}

"""aggregate min on columns"""
type moveattribute_min_fields {
  id: Int
  name: String
}

"""Ordering options when selecting data from "pokemon_v2_moveattribute"."""
input moveattribute_order_by {
  id: order_by
  moveattributedescriptions_aggregate: moveattributedescription_aggregate_order_by
  moveattributemaps_aggregate: moveattributemap_aggregate_order_by
  moveattributenames_aggregate: moveattributename_aggregate_order_by
  name: order_by
}

"""
select columns of table "pokemon_v2_moveattribute"
"""
enum moveattribute_select_column {
  """column name"""
  id

  """column name"""
  name
}

"""aggregate stddev on columns"""
type moveattribute_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type moveattribute_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type moveattribute_stddev_samp_fields {
  id: Float
}

"""aggregate sum on columns"""
type moveattribute_sum_fields {
  id: Int
}

"""aggregate var_pop on columns"""
type moveattribute_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type moveattribute_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type moveattribute_variance_fields {
  id: Float
}

"""
columns and relationships of "pokemon_v2_moveattributedescription"
"""
type moveattributedescription {
  description: String!
  id: Int!

  """An object relationship"""
  language: language
  language_id: Int
  move_attribute_id: Int

  """An object relationship"""
  moveattribute: moveattribute
}

"""
aggregated selection of "pokemon_v2_moveattributedescription"
"""
type moveattributedescription_aggregate {
  aggregate: moveattributedescription_aggregate_fields
  nodes: [moveattributedescription!]!
}

input moveattributedescription_aggregate_bool_exp {
  count: moveattributedescription_aggregate_bool_exp_count
}

input moveattributedescription_aggregate_bool_exp_count {
  arguments: [moveattributedescription_select_column!]
  distinct: Boolean
  filter: moveattributedescription_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_moveattributedescription"
"""
type moveattributedescription_aggregate_fields {
  avg: moveattributedescription_avg_fields
  count(columns: [moveattributedescription_select_column!], distinct: Boolean): Int!
  max: moveattributedescription_max_fields
  min: moveattributedescription_min_fields
  stddev: moveattributedescription_stddev_fields
  stddev_pop: moveattributedescription_stddev_pop_fields
  stddev_samp: moveattributedescription_stddev_samp_fields
  sum: moveattributedescription_sum_fields
  var_pop: moveattributedescription_var_pop_fields
  var_samp: moveattributedescription_var_samp_fields
  variance: moveattributedescription_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_moveattributedescription"
"""
input moveattributedescription_aggregate_order_by {
  avg: moveattributedescription_avg_order_by
  count: order_by
  max: moveattributedescription_max_order_by
  min: moveattributedescription_min_order_by
  stddev: moveattributedescription_stddev_order_by
  stddev_pop: moveattributedescription_stddev_pop_order_by
  stddev_samp: moveattributedescription_stddev_samp_order_by
  sum: moveattributedescription_sum_order_by
  var_pop: moveattributedescription_var_pop_order_by
  var_samp: moveattributedescription_var_samp_order_by
  variance: moveattributedescription_variance_order_by
}

"""aggregate avg on columns"""
type moveattributedescription_avg_fields {
  id: Float
  language_id: Float
  move_attribute_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_moveattributedescription"
"""
input moveattributedescription_avg_order_by {
  id: order_by
  language_id: order_by
  move_attribute_id: order_by
}

"""
Boolean expression to filter rows from the table
"pokemon_v2_moveattributedescription". All fields are combined with a logical 'AND'.
"""
input moveattributedescription_bool_exp {
  _and: [moveattributedescription_bool_exp!]
  _not: moveattributedescription_bool_exp
  _or: [moveattributedescription_bool_exp!]
  description: String_comparison_exp
  id: Int_comparison_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
  move_attribute_id: Int_comparison_exp
  moveattribute: moveattribute_bool_exp
}

"""aggregate max on columns"""
type moveattributedescription_max_fields {
  description: String
  id: Int
  language_id: Int
  move_attribute_id: Int
}

"""
order by max() on columns of table "pokemon_v2_moveattributedescription"
"""
input moveattributedescription_max_order_by {
  description: order_by
  id: order_by
  language_id: order_by
  move_attribute_id: order_by
}

"""aggregate min on columns"""
type moveattributedescription_min_fields {
  description: String
  id: Int
  language_id: Int
  move_attribute_id: Int
}

"""
order by min() on columns of table "pokemon_v2_moveattributedescription"
"""
input moveattributedescription_min_order_by {
  description: order_by
  id: order_by
  language_id: order_by
  move_attribute_id: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_moveattributedescription".
"""
input moveattributedescription_order_by {
  description: order_by
  id: order_by
  language: language_order_by
  language_id: order_by
  move_attribute_id: order_by
  moveattribute: moveattribute_order_by
}

"""
select columns of table "pokemon_v2_moveattributedescription"
"""
enum moveattributedescription_select_column {
  """column name"""
  description

  """column name"""
  id

  """column name"""
  language_id

  """column name"""
  move_attribute_id
}

"""aggregate stddev on columns"""
type moveattributedescription_stddev_fields {
  id: Float
  language_id: Float
  move_attribute_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_moveattributedescription"
"""
input moveattributedescription_stddev_order_by {
  id: order_by
  language_id: order_by
  move_attribute_id: order_by
}

"""aggregate stddev_pop on columns"""
type moveattributedescription_stddev_pop_fields {
  id: Float
  language_id: Float
  move_attribute_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_moveattributedescription"
"""
input moveattributedescription_stddev_pop_order_by {
  id: order_by
  language_id: order_by
  move_attribute_id: order_by
}

"""aggregate stddev_samp on columns"""
type moveattributedescription_stddev_samp_fields {
  id: Float
  language_id: Float
  move_attribute_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_moveattributedescription"
"""
input moveattributedescription_stddev_samp_order_by {
  id: order_by
  language_id: order_by
  move_attribute_id: order_by
}

"""aggregate sum on columns"""
type moveattributedescription_sum_fields {
  id: Int
  language_id: Int
  move_attribute_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_moveattributedescription"
"""
input moveattributedescription_sum_order_by {
  id: order_by
  language_id: order_by
  move_attribute_id: order_by
}

"""aggregate var_pop on columns"""
type moveattributedescription_var_pop_fields {
  id: Float
  language_id: Float
  move_attribute_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_moveattributedescription"
"""
input moveattributedescription_var_pop_order_by {
  id: order_by
  language_id: order_by
  move_attribute_id: order_by
}

"""aggregate var_samp on columns"""
type moveattributedescription_var_samp_fields {
  id: Float
  language_id: Float
  move_attribute_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_moveattributedescription"
"""
input moveattributedescription_var_samp_order_by {
  id: order_by
  language_id: order_by
  move_attribute_id: order_by
}

"""aggregate variance on columns"""
type moveattributedescription_variance_fields {
  id: Float
  language_id: Float
  move_attribute_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_moveattributedescription"
"""
input moveattributedescription_variance_order_by {
  id: order_by
  language_id: order_by
  move_attribute_id: order_by
}

"""
columns and relationships of "pokemon_v2_moveattributemap"
"""
type moveattributemap {
  id: Int!

  """An object relationship"""
  move: move
  move_attribute_id: Int
  move_id: Int

  """An object relationship"""
  moveattribute: moveattribute
}

"""
aggregated selection of "pokemon_v2_moveattributemap"
"""
type moveattributemap_aggregate {
  aggregate: moveattributemap_aggregate_fields
  nodes: [moveattributemap!]!
}

input moveattributemap_aggregate_bool_exp {
  count: moveattributemap_aggregate_bool_exp_count
}

input moveattributemap_aggregate_bool_exp_count {
  arguments: [moveattributemap_select_column!]
  distinct: Boolean
  filter: moveattributemap_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_moveattributemap"
"""
type moveattributemap_aggregate_fields {
  avg: moveattributemap_avg_fields
  count(columns: [moveattributemap_select_column!], distinct: Boolean): Int!
  max: moveattributemap_max_fields
  min: moveattributemap_min_fields
  stddev: moveattributemap_stddev_fields
  stddev_pop: moveattributemap_stddev_pop_fields
  stddev_samp: moveattributemap_stddev_samp_fields
  sum: moveattributemap_sum_fields
  var_pop: moveattributemap_var_pop_fields
  var_samp: moveattributemap_var_samp_fields
  variance: moveattributemap_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_moveattributemap"
"""
input moveattributemap_aggregate_order_by {
  avg: moveattributemap_avg_order_by
  count: order_by
  max: moveattributemap_max_order_by
  min: moveattributemap_min_order_by
  stddev: moveattributemap_stddev_order_by
  stddev_pop: moveattributemap_stddev_pop_order_by
  stddev_samp: moveattributemap_stddev_samp_order_by
  sum: moveattributemap_sum_order_by
  var_pop: moveattributemap_var_pop_order_by
  var_samp: moveattributemap_var_samp_order_by
  variance: moveattributemap_variance_order_by
}

"""aggregate avg on columns"""
type moveattributemap_avg_fields {
  id: Float
  move_attribute_id: Float
  move_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_moveattributemap"
"""
input moveattributemap_avg_order_by {
  id: order_by
  move_attribute_id: order_by
  move_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_moveattributemap".
All fields are combined with a logical 'AND'.
"""
input moveattributemap_bool_exp {
  _and: [moveattributemap_bool_exp!]
  _not: moveattributemap_bool_exp
  _or: [moveattributemap_bool_exp!]
  id: Int_comparison_exp
  move: move_bool_exp
  move_attribute_id: Int_comparison_exp
  move_id: Int_comparison_exp
  moveattribute: moveattribute_bool_exp
}

"""aggregate max on columns"""
type moveattributemap_max_fields {
  id: Int
  move_attribute_id: Int
  move_id: Int
}

"""
order by max() on columns of table "pokemon_v2_moveattributemap"
"""
input moveattributemap_max_order_by {
  id: order_by
  move_attribute_id: order_by
  move_id: order_by
}

"""aggregate min on columns"""
type moveattributemap_min_fields {
  id: Int
  move_attribute_id: Int
  move_id: Int
}

"""
order by min() on columns of table "pokemon_v2_moveattributemap"
"""
input moveattributemap_min_order_by {
  id: order_by
  move_attribute_id: order_by
  move_id: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_moveattributemap".
"""
input moveattributemap_order_by {
  id: order_by
  move: move_order_by
  move_attribute_id: order_by
  move_id: order_by
  moveattribute: moveattribute_order_by
}

"""
select columns of table "pokemon_v2_moveattributemap"
"""
enum moveattributemap_select_column {
  """column name"""
  id

  """column name"""
  move_attribute_id

  """column name"""
  move_id
}

"""aggregate stddev on columns"""
type moveattributemap_stddev_fields {
  id: Float
  move_attribute_id: Float
  move_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_moveattributemap"
"""
input moveattributemap_stddev_order_by {
  id: order_by
  move_attribute_id: order_by
  move_id: order_by
}

"""aggregate stddev_pop on columns"""
type moveattributemap_stddev_pop_fields {
  id: Float
  move_attribute_id: Float
  move_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_moveattributemap"
"""
input moveattributemap_stddev_pop_order_by {
  id: order_by
  move_attribute_id: order_by
  move_id: order_by
}

"""aggregate stddev_samp on columns"""
type moveattributemap_stddev_samp_fields {
  id: Float
  move_attribute_id: Float
  move_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_moveattributemap"
"""
input moveattributemap_stddev_samp_order_by {
  id: order_by
  move_attribute_id: order_by
  move_id: order_by
}

"""aggregate sum on columns"""
type moveattributemap_sum_fields {
  id: Int
  move_attribute_id: Int
  move_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_moveattributemap"
"""
input moveattributemap_sum_order_by {
  id: order_by
  move_attribute_id: order_by
  move_id: order_by
}

"""aggregate var_pop on columns"""
type moveattributemap_var_pop_fields {
  id: Float
  move_attribute_id: Float
  move_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_moveattributemap"
"""
input moveattributemap_var_pop_order_by {
  id: order_by
  move_attribute_id: order_by
  move_id: order_by
}

"""aggregate var_samp on columns"""
type moveattributemap_var_samp_fields {
  id: Float
  move_attribute_id: Float
  move_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_moveattributemap"
"""
input moveattributemap_var_samp_order_by {
  id: order_by
  move_attribute_id: order_by
  move_id: order_by
}

"""aggregate variance on columns"""
type moveattributemap_variance_fields {
  id: Float
  move_attribute_id: Float
  move_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_moveattributemap"
"""
input moveattributemap_variance_order_by {
  id: order_by
  move_attribute_id: order_by
  move_id: order_by
}

"""
columns and relationships of "pokemon_v2_moveattributename"
"""
type moveattributename {
  id: Int!

  """An object relationship"""
  language: language
  language_id: Int
  move_attribute_id: Int

  """An object relationship"""
  moveattribute: moveattribute
  name: String!
}

"""
aggregated selection of "pokemon_v2_moveattributename"
"""
type moveattributename_aggregate {
  aggregate: moveattributename_aggregate_fields
  nodes: [moveattributename!]!
}

input moveattributename_aggregate_bool_exp {
  count: moveattributename_aggregate_bool_exp_count
}

input moveattributename_aggregate_bool_exp_count {
  arguments: [moveattributename_select_column!]
  distinct: Boolean
  filter: moveattributename_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_moveattributename"
"""
type moveattributename_aggregate_fields {
  avg: moveattributename_avg_fields
  count(columns: [moveattributename_select_column!], distinct: Boolean): Int!
  max: moveattributename_max_fields
  min: moveattributename_min_fields
  stddev: moveattributename_stddev_fields
  stddev_pop: moveattributename_stddev_pop_fields
  stddev_samp: moveattributename_stddev_samp_fields
  sum: moveattributename_sum_fields
  var_pop: moveattributename_var_pop_fields
  var_samp: moveattributename_var_samp_fields
  variance: moveattributename_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_moveattributename"
"""
input moveattributename_aggregate_order_by {
  avg: moveattributename_avg_order_by
  count: order_by
  max: moveattributename_max_order_by
  min: moveattributename_min_order_by
  stddev: moveattributename_stddev_order_by
  stddev_pop: moveattributename_stddev_pop_order_by
  stddev_samp: moveattributename_stddev_samp_order_by
  sum: moveattributename_sum_order_by
  var_pop: moveattributename_var_pop_order_by
  var_samp: moveattributename_var_samp_order_by
  variance: moveattributename_variance_order_by
}

"""aggregate avg on columns"""
type moveattributename_avg_fields {
  id: Float
  language_id: Float
  move_attribute_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_moveattributename"
"""
input moveattributename_avg_order_by {
  id: order_by
  language_id: order_by
  move_attribute_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_moveattributename".
All fields are combined with a logical 'AND'.
"""
input moveattributename_bool_exp {
  _and: [moveattributename_bool_exp!]
  _not: moveattributename_bool_exp
  _or: [moveattributename_bool_exp!]
  id: Int_comparison_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
  move_attribute_id: Int_comparison_exp
  moveattribute: moveattribute_bool_exp
  name: String_comparison_exp
}

"""aggregate max on columns"""
type moveattributename_max_fields {
  id: Int
  language_id: Int
  move_attribute_id: Int
  name: String
}

"""
order by max() on columns of table "pokemon_v2_moveattributename"
"""
input moveattributename_max_order_by {
  id: order_by
  language_id: order_by
  move_attribute_id: order_by
  name: order_by
}

"""aggregate min on columns"""
type moveattributename_min_fields {
  id: Int
  language_id: Int
  move_attribute_id: Int
  name: String
}

"""
order by min() on columns of table "pokemon_v2_moveattributename"
"""
input moveattributename_min_order_by {
  id: order_by
  language_id: order_by
  move_attribute_id: order_by
  name: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_moveattributename".
"""
input moveattributename_order_by {
  id: order_by
  language: language_order_by
  language_id: order_by
  move_attribute_id: order_by
  moveattribute: moveattribute_order_by
  name: order_by
}

"""
select columns of table "pokemon_v2_moveattributename"
"""
enum moveattributename_select_column {
  """column name"""
  id

  """column name"""
  language_id

  """column name"""
  move_attribute_id

  """column name"""
  name
}

"""aggregate stddev on columns"""
type moveattributename_stddev_fields {
  id: Float
  language_id: Float
  move_attribute_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_moveattributename"
"""
input moveattributename_stddev_order_by {
  id: order_by
  language_id: order_by
  move_attribute_id: order_by
}

"""aggregate stddev_pop on columns"""
type moveattributename_stddev_pop_fields {
  id: Float
  language_id: Float
  move_attribute_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_moveattributename"
"""
input moveattributename_stddev_pop_order_by {
  id: order_by
  language_id: order_by
  move_attribute_id: order_by
}

"""aggregate stddev_samp on columns"""
type moveattributename_stddev_samp_fields {
  id: Float
  language_id: Float
  move_attribute_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_moveattributename"
"""
input moveattributename_stddev_samp_order_by {
  id: order_by
  language_id: order_by
  move_attribute_id: order_by
}

"""aggregate sum on columns"""
type moveattributename_sum_fields {
  id: Int
  language_id: Int
  move_attribute_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_moveattributename"
"""
input moveattributename_sum_order_by {
  id: order_by
  language_id: order_by
  move_attribute_id: order_by
}

"""aggregate var_pop on columns"""
type moveattributename_var_pop_fields {
  id: Float
  language_id: Float
  move_attribute_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_moveattributename"
"""
input moveattributename_var_pop_order_by {
  id: order_by
  language_id: order_by
  move_attribute_id: order_by
}

"""aggregate var_samp on columns"""
type moveattributename_var_samp_fields {
  id: Float
  language_id: Float
  move_attribute_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_moveattributename"
"""
input moveattributename_var_samp_order_by {
  id: order_by
  language_id: order_by
  move_attribute_id: order_by
}

"""aggregate variance on columns"""
type moveattributename_variance_fields {
  id: Float
  language_id: Float
  move_attribute_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_moveattributename"
"""
input moveattributename_variance_order_by {
  id: order_by
  language_id: order_by
  move_attribute_id: order_by
}

"""
columns and relationships of "pokemon_v2_movebattlestyle"
"""
type movebattlestyle {
  id: Int!

  """An array relationship"""
  movebattlestylenames(
    """distinct select on columns"""
    distinct_on: [movebattlestylename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movebattlestylename_order_by!]

    """filter the rows returned"""
    where: movebattlestylename_bool_exp
  ): [movebattlestylename!]!

  """An aggregate relationship"""
  movebattlestylenames_aggregate(
    """distinct select on columns"""
    distinct_on: [movebattlestylename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movebattlestylename_order_by!]

    """filter the rows returned"""
    where: movebattlestylename_bool_exp
  ): movebattlestylename_aggregate!
  name: String!

  """An array relationship"""
  naturebattlestylepreferences(
    """distinct select on columns"""
    distinct_on: [naturebattlestylepreference_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [naturebattlestylepreference_order_by!]

    """filter the rows returned"""
    where: naturebattlestylepreference_bool_exp
  ): [naturebattlestylepreference!]!

  """An aggregate relationship"""
  naturebattlestylepreferences_aggregate(
    """distinct select on columns"""
    distinct_on: [naturebattlestylepreference_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [naturebattlestylepreference_order_by!]

    """filter the rows returned"""
    where: naturebattlestylepreference_bool_exp
  ): naturebattlestylepreference_aggregate!
}

"""
aggregated selection of "pokemon_v2_movebattlestyle"
"""
type movebattlestyle_aggregate {
  aggregate: movebattlestyle_aggregate_fields
  nodes: [movebattlestyle!]!
}

"""
aggregate fields of "pokemon_v2_movebattlestyle"
"""
type movebattlestyle_aggregate_fields {
  avg: movebattlestyle_avg_fields
  count(columns: [movebattlestyle_select_column!], distinct: Boolean): Int!
  max: movebattlestyle_max_fields
  min: movebattlestyle_min_fields
  stddev: movebattlestyle_stddev_fields
  stddev_pop: movebattlestyle_stddev_pop_fields
  stddev_samp: movebattlestyle_stddev_samp_fields
  sum: movebattlestyle_sum_fields
  var_pop: movebattlestyle_var_pop_fields
  var_samp: movebattlestyle_var_samp_fields
  variance: movebattlestyle_variance_fields
}

"""aggregate avg on columns"""
type movebattlestyle_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "pokemon_v2_movebattlestyle". All fields are combined with a logical 'AND'.
"""
input movebattlestyle_bool_exp {
  _and: [movebattlestyle_bool_exp!]
  _not: movebattlestyle_bool_exp
  _or: [movebattlestyle_bool_exp!]
  id: Int_comparison_exp
  movebattlestylenames: movebattlestylename_bool_exp
  movebattlestylenames_aggregate: movebattlestylename_aggregate_bool_exp
  name: String_comparison_exp
  naturebattlestylepreferences: naturebattlestylepreference_bool_exp
  naturebattlestylepreferences_aggregate: naturebattlestylepreference_aggregate_bool_exp
}

"""aggregate max on columns"""
type movebattlestyle_max_fields {
  id: Int
  name: String
}

"""aggregate min on columns"""
type movebattlestyle_min_fields {
  id: Int
  name: String
}

"""
Ordering options when selecting data from "pokemon_v2_movebattlestyle".
"""
input movebattlestyle_order_by {
  id: order_by
  movebattlestylenames_aggregate: movebattlestylename_aggregate_order_by
  name: order_by
  naturebattlestylepreferences_aggregate: naturebattlestylepreference_aggregate_order_by
}

"""
select columns of table "pokemon_v2_movebattlestyle"
"""
enum movebattlestyle_select_column {
  """column name"""
  id

  """column name"""
  name
}

"""aggregate stddev on columns"""
type movebattlestyle_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type movebattlestyle_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type movebattlestyle_stddev_samp_fields {
  id: Float
}

"""aggregate sum on columns"""
type movebattlestyle_sum_fields {
  id: Int
}

"""aggregate var_pop on columns"""
type movebattlestyle_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type movebattlestyle_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type movebattlestyle_variance_fields {
  id: Float
}

"""
columns and relationships of "pokemon_v2_movebattlestylename"
"""
type movebattlestylename {
  id: Int!

  """An object relationship"""
  language: language
  language_id: Int
  move_battle_style_id: Int

  """An object relationship"""
  movebattlestyle: movebattlestyle
  name: String!
}

"""
aggregated selection of "pokemon_v2_movebattlestylename"
"""
type movebattlestylename_aggregate {
  aggregate: movebattlestylename_aggregate_fields
  nodes: [movebattlestylename!]!
}

input movebattlestylename_aggregate_bool_exp {
  count: movebattlestylename_aggregate_bool_exp_count
}

input movebattlestylename_aggregate_bool_exp_count {
  arguments: [movebattlestylename_select_column!]
  distinct: Boolean
  filter: movebattlestylename_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_movebattlestylename"
"""
type movebattlestylename_aggregate_fields {
  avg: movebattlestylename_avg_fields
  count(columns: [movebattlestylename_select_column!], distinct: Boolean): Int!
  max: movebattlestylename_max_fields
  min: movebattlestylename_min_fields
  stddev: movebattlestylename_stddev_fields
  stddev_pop: movebattlestylename_stddev_pop_fields
  stddev_samp: movebattlestylename_stddev_samp_fields
  sum: movebattlestylename_sum_fields
  var_pop: movebattlestylename_var_pop_fields
  var_samp: movebattlestylename_var_samp_fields
  variance: movebattlestylename_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_movebattlestylename"
"""
input movebattlestylename_aggregate_order_by {
  avg: movebattlestylename_avg_order_by
  count: order_by
  max: movebattlestylename_max_order_by
  min: movebattlestylename_min_order_by
  stddev: movebattlestylename_stddev_order_by
  stddev_pop: movebattlestylename_stddev_pop_order_by
  stddev_samp: movebattlestylename_stddev_samp_order_by
  sum: movebattlestylename_sum_order_by
  var_pop: movebattlestylename_var_pop_order_by
  var_samp: movebattlestylename_var_samp_order_by
  variance: movebattlestylename_variance_order_by
}

"""aggregate avg on columns"""
type movebattlestylename_avg_fields {
  id: Float
  language_id: Float
  move_battle_style_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_movebattlestylename"
"""
input movebattlestylename_avg_order_by {
  id: order_by
  language_id: order_by
  move_battle_style_id: order_by
}

"""
Boolean expression to filter rows from the table
"pokemon_v2_movebattlestylename". All fields are combined with a logical 'AND'.
"""
input movebattlestylename_bool_exp {
  _and: [movebattlestylename_bool_exp!]
  _not: movebattlestylename_bool_exp
  _or: [movebattlestylename_bool_exp!]
  id: Int_comparison_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
  move_battle_style_id: Int_comparison_exp
  movebattlestyle: movebattlestyle_bool_exp
  name: String_comparison_exp
}

"""aggregate max on columns"""
type movebattlestylename_max_fields {
  id: Int
  language_id: Int
  move_battle_style_id: Int
  name: String
}

"""
order by max() on columns of table "pokemon_v2_movebattlestylename"
"""
input movebattlestylename_max_order_by {
  id: order_by
  language_id: order_by
  move_battle_style_id: order_by
  name: order_by
}

"""aggregate min on columns"""
type movebattlestylename_min_fields {
  id: Int
  language_id: Int
  move_battle_style_id: Int
  name: String
}

"""
order by min() on columns of table "pokemon_v2_movebattlestylename"
"""
input movebattlestylename_min_order_by {
  id: order_by
  language_id: order_by
  move_battle_style_id: order_by
  name: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_movebattlestylename".
"""
input movebattlestylename_order_by {
  id: order_by
  language: language_order_by
  language_id: order_by
  move_battle_style_id: order_by
  movebattlestyle: movebattlestyle_order_by
  name: order_by
}

"""
select columns of table "pokemon_v2_movebattlestylename"
"""
enum movebattlestylename_select_column {
  """column name"""
  id

  """column name"""
  language_id

  """column name"""
  move_battle_style_id

  """column name"""
  name
}

"""aggregate stddev on columns"""
type movebattlestylename_stddev_fields {
  id: Float
  language_id: Float
  move_battle_style_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_movebattlestylename"
"""
input movebattlestylename_stddev_order_by {
  id: order_by
  language_id: order_by
  move_battle_style_id: order_by
}

"""aggregate stddev_pop on columns"""
type movebattlestylename_stddev_pop_fields {
  id: Float
  language_id: Float
  move_battle_style_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_movebattlestylename"
"""
input movebattlestylename_stddev_pop_order_by {
  id: order_by
  language_id: order_by
  move_battle_style_id: order_by
}

"""aggregate stddev_samp on columns"""
type movebattlestylename_stddev_samp_fields {
  id: Float
  language_id: Float
  move_battle_style_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_movebattlestylename"
"""
input movebattlestylename_stddev_samp_order_by {
  id: order_by
  language_id: order_by
  move_battle_style_id: order_by
}

"""aggregate sum on columns"""
type movebattlestylename_sum_fields {
  id: Int
  language_id: Int
  move_battle_style_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_movebattlestylename"
"""
input movebattlestylename_sum_order_by {
  id: order_by
  language_id: order_by
  move_battle_style_id: order_by
}

"""aggregate var_pop on columns"""
type movebattlestylename_var_pop_fields {
  id: Float
  language_id: Float
  move_battle_style_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_movebattlestylename"
"""
input movebattlestylename_var_pop_order_by {
  id: order_by
  language_id: order_by
  move_battle_style_id: order_by
}

"""aggregate var_samp on columns"""
type movebattlestylename_var_samp_fields {
  id: Float
  language_id: Float
  move_battle_style_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_movebattlestylename"
"""
input movebattlestylename_var_samp_order_by {
  id: order_by
  language_id: order_by
  move_battle_style_id: order_by
}

"""aggregate variance on columns"""
type movebattlestylename_variance_fields {
  id: Float
  language_id: Float
  move_battle_style_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_movebattlestylename"
"""
input movebattlestylename_variance_order_by {
  id: order_by
  language_id: order_by
  move_battle_style_id: order_by
}

"""
columns and relationships of "pokemon_v2_movechange"
"""
type movechange {
  accuracy: Int
  id: Int!

  """An object relationship"""
  move: move
  move_effect_chance: Int
  move_effect_id: Int
  move_id: Int

  """An object relationship"""
  moveeffect: moveeffect
  power: Int
  pp: Int

  """An object relationship"""
  type: type
  type_id: Int
  version_group_id: Int

  """An object relationship"""
  versiongroup: versiongroup
}

"""
aggregated selection of "pokemon_v2_movechange"
"""
type movechange_aggregate {
  aggregate: movechange_aggregate_fields
  nodes: [movechange!]!
}

input movechange_aggregate_bool_exp {
  count: movechange_aggregate_bool_exp_count
}

input movechange_aggregate_bool_exp_count {
  arguments: [movechange_select_column!]
  distinct: Boolean
  filter: movechange_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_movechange"
"""
type movechange_aggregate_fields {
  avg: movechange_avg_fields
  count(columns: [movechange_select_column!], distinct: Boolean): Int!
  max: movechange_max_fields
  min: movechange_min_fields
  stddev: movechange_stddev_fields
  stddev_pop: movechange_stddev_pop_fields
  stddev_samp: movechange_stddev_samp_fields
  sum: movechange_sum_fields
  var_pop: movechange_var_pop_fields
  var_samp: movechange_var_samp_fields
  variance: movechange_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_movechange"
"""
input movechange_aggregate_order_by {
  avg: movechange_avg_order_by
  count: order_by
  max: movechange_max_order_by
  min: movechange_min_order_by
  stddev: movechange_stddev_order_by
  stddev_pop: movechange_stddev_pop_order_by
  stddev_samp: movechange_stddev_samp_order_by
  sum: movechange_sum_order_by
  var_pop: movechange_var_pop_order_by
  var_samp: movechange_var_samp_order_by
  variance: movechange_variance_order_by
}

"""aggregate avg on columns"""
type movechange_avg_fields {
  accuracy: Float
  id: Float
  move_effect_chance: Float
  move_effect_id: Float
  move_id: Float
  power: Float
  pp: Float
  type_id: Float
  version_group_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_movechange"
"""
input movechange_avg_order_by {
  accuracy: order_by
  id: order_by
  move_effect_chance: order_by
  move_effect_id: order_by
  move_id: order_by
  power: order_by
  pp: order_by
  type_id: order_by
  version_group_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_movechange". All fields are combined with a logical 'AND'.
"""
input movechange_bool_exp {
  _and: [movechange_bool_exp!]
  _not: movechange_bool_exp
  _or: [movechange_bool_exp!]
  accuracy: Int_comparison_exp
  id: Int_comparison_exp
  move: move_bool_exp
  move_effect_chance: Int_comparison_exp
  move_effect_id: Int_comparison_exp
  move_id: Int_comparison_exp
  moveeffect: moveeffect_bool_exp
  power: Int_comparison_exp
  pp: Int_comparison_exp
  type: type_bool_exp
  type_id: Int_comparison_exp
  version_group_id: Int_comparison_exp
  versiongroup: versiongroup_bool_exp
}

"""aggregate max on columns"""
type movechange_max_fields {
  accuracy: Int
  id: Int
  move_effect_chance: Int
  move_effect_id: Int
  move_id: Int
  power: Int
  pp: Int
  type_id: Int
  version_group_id: Int
}

"""
order by max() on columns of table "pokemon_v2_movechange"
"""
input movechange_max_order_by {
  accuracy: order_by
  id: order_by
  move_effect_chance: order_by
  move_effect_id: order_by
  move_id: order_by
  power: order_by
  pp: order_by
  type_id: order_by
  version_group_id: order_by
}

"""aggregate min on columns"""
type movechange_min_fields {
  accuracy: Int
  id: Int
  move_effect_chance: Int
  move_effect_id: Int
  move_id: Int
  power: Int
  pp: Int
  type_id: Int
  version_group_id: Int
}

"""
order by min() on columns of table "pokemon_v2_movechange"
"""
input movechange_min_order_by {
  accuracy: order_by
  id: order_by
  move_effect_chance: order_by
  move_effect_id: order_by
  move_id: order_by
  power: order_by
  pp: order_by
  type_id: order_by
  version_group_id: order_by
}

"""Ordering options when selecting data from "pokemon_v2_movechange"."""
input movechange_order_by {
  accuracy: order_by
  id: order_by
  move: move_order_by
  move_effect_chance: order_by
  move_effect_id: order_by
  move_id: order_by
  moveeffect: moveeffect_order_by
  power: order_by
  pp: order_by
  type: type_order_by
  type_id: order_by
  version_group_id: order_by
  versiongroup: versiongroup_order_by
}

"""
select columns of table "pokemon_v2_movechange"
"""
enum movechange_select_column {
  """column name"""
  accuracy

  """column name"""
  id

  """column name"""
  move_effect_chance

  """column name"""
  move_effect_id

  """column name"""
  move_id

  """column name"""
  power

  """column name"""
  pp

  """column name"""
  type_id

  """column name"""
  version_group_id
}

"""aggregate stddev on columns"""
type movechange_stddev_fields {
  accuracy: Float
  id: Float
  move_effect_chance: Float
  move_effect_id: Float
  move_id: Float
  power: Float
  pp: Float
  type_id: Float
  version_group_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_movechange"
"""
input movechange_stddev_order_by {
  accuracy: order_by
  id: order_by
  move_effect_chance: order_by
  move_effect_id: order_by
  move_id: order_by
  power: order_by
  pp: order_by
  type_id: order_by
  version_group_id: order_by
}

"""aggregate stddev_pop on columns"""
type movechange_stddev_pop_fields {
  accuracy: Float
  id: Float
  move_effect_chance: Float
  move_effect_id: Float
  move_id: Float
  power: Float
  pp: Float
  type_id: Float
  version_group_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_movechange"
"""
input movechange_stddev_pop_order_by {
  accuracy: order_by
  id: order_by
  move_effect_chance: order_by
  move_effect_id: order_by
  move_id: order_by
  power: order_by
  pp: order_by
  type_id: order_by
  version_group_id: order_by
}

"""aggregate stddev_samp on columns"""
type movechange_stddev_samp_fields {
  accuracy: Float
  id: Float
  move_effect_chance: Float
  move_effect_id: Float
  move_id: Float
  power: Float
  pp: Float
  type_id: Float
  version_group_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_movechange"
"""
input movechange_stddev_samp_order_by {
  accuracy: order_by
  id: order_by
  move_effect_chance: order_by
  move_effect_id: order_by
  move_id: order_by
  power: order_by
  pp: order_by
  type_id: order_by
  version_group_id: order_by
}

"""aggregate sum on columns"""
type movechange_sum_fields {
  accuracy: Int
  id: Int
  move_effect_chance: Int
  move_effect_id: Int
  move_id: Int
  power: Int
  pp: Int
  type_id: Int
  version_group_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_movechange"
"""
input movechange_sum_order_by {
  accuracy: order_by
  id: order_by
  move_effect_chance: order_by
  move_effect_id: order_by
  move_id: order_by
  power: order_by
  pp: order_by
  type_id: order_by
  version_group_id: order_by
}

"""aggregate var_pop on columns"""
type movechange_var_pop_fields {
  accuracy: Float
  id: Float
  move_effect_chance: Float
  move_effect_id: Float
  move_id: Float
  power: Float
  pp: Float
  type_id: Float
  version_group_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_movechange"
"""
input movechange_var_pop_order_by {
  accuracy: order_by
  id: order_by
  move_effect_chance: order_by
  move_effect_id: order_by
  move_id: order_by
  power: order_by
  pp: order_by
  type_id: order_by
  version_group_id: order_by
}

"""aggregate var_samp on columns"""
type movechange_var_samp_fields {
  accuracy: Float
  id: Float
  move_effect_chance: Float
  move_effect_id: Float
  move_id: Float
  power: Float
  pp: Float
  type_id: Float
  version_group_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_movechange"
"""
input movechange_var_samp_order_by {
  accuracy: order_by
  id: order_by
  move_effect_chance: order_by
  move_effect_id: order_by
  move_id: order_by
  power: order_by
  pp: order_by
  type_id: order_by
  version_group_id: order_by
}

"""aggregate variance on columns"""
type movechange_variance_fields {
  accuracy: Float
  id: Float
  move_effect_chance: Float
  move_effect_id: Float
  move_id: Float
  power: Float
  pp: Float
  type_id: Float
  version_group_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_movechange"
"""
input movechange_variance_order_by {
  accuracy: order_by
  id: order_by
  move_effect_chance: order_by
  move_effect_id: order_by
  move_id: order_by
  power: order_by
  pp: order_by
  type_id: order_by
  version_group_id: order_by
}

"""
columns and relationships of "pokemon_v2_movedamageclass"
"""
type movedamageclass {
  id: Int!

  """An array relationship"""
  movedamageclassdescriptions(
    """distinct select on columns"""
    distinct_on: [movedamageclassdescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movedamageclassdescription_order_by!]

    """filter the rows returned"""
    where: movedamageclassdescription_bool_exp
  ): [movedamageclassdescription!]!

  """An aggregate relationship"""
  movedamageclassdescriptions_aggregate(
    """distinct select on columns"""
    distinct_on: [movedamageclassdescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movedamageclassdescription_order_by!]

    """filter the rows returned"""
    where: movedamageclassdescription_bool_exp
  ): movedamageclassdescription_aggregate!

  """An array relationship"""
  movedamageclassnames(
    """distinct select on columns"""
    distinct_on: [movedamageclassname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movedamageclassname_order_by!]

    """filter the rows returned"""
    where: movedamageclassname_bool_exp
  ): [movedamageclassname!]!

  """An aggregate relationship"""
  movedamageclassnames_aggregate(
    """distinct select on columns"""
    distinct_on: [movedamageclassname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movedamageclassname_order_by!]

    """filter the rows returned"""
    where: movedamageclassname_bool_exp
  ): movedamageclassname_aggregate!

  """An array relationship"""
  moves(
    """distinct select on columns"""
    distinct_on: [move_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [move_order_by!]

    """filter the rows returned"""
    where: move_bool_exp
  ): [move!]!

  """An aggregate relationship"""
  moves_aggregate(
    """distinct select on columns"""
    distinct_on: [move_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [move_order_by!]

    """filter the rows returned"""
    where: move_bool_exp
  ): move_aggregate!
  name: String!

  """An array relationship"""
  stats(
    """distinct select on columns"""
    distinct_on: [stat_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [stat_order_by!]

    """filter the rows returned"""
    where: stat_bool_exp
  ): [stat!]!

  """An aggregate relationship"""
  stats_aggregate(
    """distinct select on columns"""
    distinct_on: [stat_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [stat_order_by!]

    """filter the rows returned"""
    where: stat_bool_exp
  ): stat_aggregate!

  """An array relationship"""
  types(
    """distinct select on columns"""
    distinct_on: [type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [type_order_by!]

    """filter the rows returned"""
    where: type_bool_exp
  ): [type!]!

  """An aggregate relationship"""
  types_aggregate(
    """distinct select on columns"""
    distinct_on: [type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [type_order_by!]

    """filter the rows returned"""
    where: type_bool_exp
  ): type_aggregate!
}

"""
aggregated selection of "pokemon_v2_movedamageclass"
"""
type movedamageclass_aggregate {
  aggregate: movedamageclass_aggregate_fields
  nodes: [movedamageclass!]!
}

"""
aggregate fields of "pokemon_v2_movedamageclass"
"""
type movedamageclass_aggregate_fields {
  avg: movedamageclass_avg_fields
  count(columns: [movedamageclass_select_column!], distinct: Boolean): Int!
  max: movedamageclass_max_fields
  min: movedamageclass_min_fields
  stddev: movedamageclass_stddev_fields
  stddev_pop: movedamageclass_stddev_pop_fields
  stddev_samp: movedamageclass_stddev_samp_fields
  sum: movedamageclass_sum_fields
  var_pop: movedamageclass_var_pop_fields
  var_samp: movedamageclass_var_samp_fields
  variance: movedamageclass_variance_fields
}

"""aggregate avg on columns"""
type movedamageclass_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "pokemon_v2_movedamageclass". All fields are combined with a logical 'AND'.
"""
input movedamageclass_bool_exp {
  _and: [movedamageclass_bool_exp!]
  _not: movedamageclass_bool_exp
  _or: [movedamageclass_bool_exp!]
  id: Int_comparison_exp
  movedamageclassdescriptions: movedamageclassdescription_bool_exp
  movedamageclassdescriptions_aggregate: movedamageclassdescription_aggregate_bool_exp
  movedamageclassnames: movedamageclassname_bool_exp
  movedamageclassnames_aggregate: movedamageclassname_aggregate_bool_exp
  moves: move_bool_exp
  moves_aggregate: move_aggregate_bool_exp
  name: String_comparison_exp
  stats: stat_bool_exp
  stats_aggregate: stat_aggregate_bool_exp
  types: type_bool_exp
  types_aggregate: type_aggregate_bool_exp
}

"""aggregate max on columns"""
type movedamageclass_max_fields {
  id: Int
  name: String
}

"""aggregate min on columns"""
type movedamageclass_min_fields {
  id: Int
  name: String
}

"""
Ordering options when selecting data from "pokemon_v2_movedamageclass".
"""
input movedamageclass_order_by {
  id: order_by
  movedamageclassdescriptions_aggregate: movedamageclassdescription_aggregate_order_by
  movedamageclassnames_aggregate: movedamageclassname_aggregate_order_by
  moves_aggregate: move_aggregate_order_by
  name: order_by
  stats_aggregate: stat_aggregate_order_by
  types_aggregate: type_aggregate_order_by
}

"""
select columns of table "pokemon_v2_movedamageclass"
"""
enum movedamageclass_select_column {
  """column name"""
  id

  """column name"""
  name
}

"""aggregate stddev on columns"""
type movedamageclass_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type movedamageclass_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type movedamageclass_stddev_samp_fields {
  id: Float
}

"""aggregate sum on columns"""
type movedamageclass_sum_fields {
  id: Int
}

"""aggregate var_pop on columns"""
type movedamageclass_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type movedamageclass_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type movedamageclass_variance_fields {
  id: Float
}

"""
columns and relationships of "pokemon_v2_movedamageclassdescription"
"""
type movedamageclassdescription {
  description: String!
  id: Int!

  """An object relationship"""
  language: language
  language_id: Int
  move_damage_class_id: Int

  """An object relationship"""
  movedamageclass: movedamageclass
}

"""
aggregated selection of "pokemon_v2_movedamageclassdescription"
"""
type movedamageclassdescription_aggregate {
  aggregate: movedamageclassdescription_aggregate_fields
  nodes: [movedamageclassdescription!]!
}

input movedamageclassdescription_aggregate_bool_exp {
  count: movedamageclassdescription_aggregate_bool_exp_count
}

input movedamageclassdescription_aggregate_bool_exp_count {
  arguments: [movedamageclassdescription_select_column!]
  distinct: Boolean
  filter: movedamageclassdescription_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_movedamageclassdescription"
"""
type movedamageclassdescription_aggregate_fields {
  avg: movedamageclassdescription_avg_fields
  count(columns: [movedamageclassdescription_select_column!], distinct: Boolean): Int!
  max: movedamageclassdescription_max_fields
  min: movedamageclassdescription_min_fields
  stddev: movedamageclassdescription_stddev_fields
  stddev_pop: movedamageclassdescription_stddev_pop_fields
  stddev_samp: movedamageclassdescription_stddev_samp_fields
  sum: movedamageclassdescription_sum_fields
  var_pop: movedamageclassdescription_var_pop_fields
  var_samp: movedamageclassdescription_var_samp_fields
  variance: movedamageclassdescription_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_movedamageclassdescription"
"""
input movedamageclassdescription_aggregate_order_by {
  avg: movedamageclassdescription_avg_order_by
  count: order_by
  max: movedamageclassdescription_max_order_by
  min: movedamageclassdescription_min_order_by
  stddev: movedamageclassdescription_stddev_order_by
  stddev_pop: movedamageclassdescription_stddev_pop_order_by
  stddev_samp: movedamageclassdescription_stddev_samp_order_by
  sum: movedamageclassdescription_sum_order_by
  var_pop: movedamageclassdescription_var_pop_order_by
  var_samp: movedamageclassdescription_var_samp_order_by
  variance: movedamageclassdescription_variance_order_by
}

"""aggregate avg on columns"""
type movedamageclassdescription_avg_fields {
  id: Float
  language_id: Float
  move_damage_class_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_movedamageclassdescription"
"""
input movedamageclassdescription_avg_order_by {
  id: order_by
  language_id: order_by
  move_damage_class_id: order_by
}

"""
Boolean expression to filter rows from the table
"pokemon_v2_movedamageclassdescription". All fields are combined with a logical 'AND'.
"""
input movedamageclassdescription_bool_exp {
  _and: [movedamageclassdescription_bool_exp!]
  _not: movedamageclassdescription_bool_exp
  _or: [movedamageclassdescription_bool_exp!]
  description: String_comparison_exp
  id: Int_comparison_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
  move_damage_class_id: Int_comparison_exp
  movedamageclass: movedamageclass_bool_exp
}

"""aggregate max on columns"""
type movedamageclassdescription_max_fields {
  description: String
  id: Int
  language_id: Int
  move_damage_class_id: Int
}

"""
order by max() on columns of table "pokemon_v2_movedamageclassdescription"
"""
input movedamageclassdescription_max_order_by {
  description: order_by
  id: order_by
  language_id: order_by
  move_damage_class_id: order_by
}

"""aggregate min on columns"""
type movedamageclassdescription_min_fields {
  description: String
  id: Int
  language_id: Int
  move_damage_class_id: Int
}

"""
order by min() on columns of table "pokemon_v2_movedamageclassdescription"
"""
input movedamageclassdescription_min_order_by {
  description: order_by
  id: order_by
  language_id: order_by
  move_damage_class_id: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_movedamageclassdescription".
"""
input movedamageclassdescription_order_by {
  description: order_by
  id: order_by
  language: language_order_by
  language_id: order_by
  move_damage_class_id: order_by
  movedamageclass: movedamageclass_order_by
}

"""
select columns of table "pokemon_v2_movedamageclassdescription"
"""
enum movedamageclassdescription_select_column {
  """column name"""
  description

  """column name"""
  id

  """column name"""
  language_id

  """column name"""
  move_damage_class_id
}

"""aggregate stddev on columns"""
type movedamageclassdescription_stddev_fields {
  id: Float
  language_id: Float
  move_damage_class_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_movedamageclassdescription"
"""
input movedamageclassdescription_stddev_order_by {
  id: order_by
  language_id: order_by
  move_damage_class_id: order_by
}

"""aggregate stddev_pop on columns"""
type movedamageclassdescription_stddev_pop_fields {
  id: Float
  language_id: Float
  move_damage_class_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_movedamageclassdescription"
"""
input movedamageclassdescription_stddev_pop_order_by {
  id: order_by
  language_id: order_by
  move_damage_class_id: order_by
}

"""aggregate stddev_samp on columns"""
type movedamageclassdescription_stddev_samp_fields {
  id: Float
  language_id: Float
  move_damage_class_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_movedamageclassdescription"
"""
input movedamageclassdescription_stddev_samp_order_by {
  id: order_by
  language_id: order_by
  move_damage_class_id: order_by
}

"""aggregate sum on columns"""
type movedamageclassdescription_sum_fields {
  id: Int
  language_id: Int
  move_damage_class_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_movedamageclassdescription"
"""
input movedamageclassdescription_sum_order_by {
  id: order_by
  language_id: order_by
  move_damage_class_id: order_by
}

"""aggregate var_pop on columns"""
type movedamageclassdescription_var_pop_fields {
  id: Float
  language_id: Float
  move_damage_class_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_movedamageclassdescription"
"""
input movedamageclassdescription_var_pop_order_by {
  id: order_by
  language_id: order_by
  move_damage_class_id: order_by
}

"""aggregate var_samp on columns"""
type movedamageclassdescription_var_samp_fields {
  id: Float
  language_id: Float
  move_damage_class_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_movedamageclassdescription"
"""
input movedamageclassdescription_var_samp_order_by {
  id: order_by
  language_id: order_by
  move_damage_class_id: order_by
}

"""aggregate variance on columns"""
type movedamageclassdescription_variance_fields {
  id: Float
  language_id: Float
  move_damage_class_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_movedamageclassdescription"
"""
input movedamageclassdescription_variance_order_by {
  id: order_by
  language_id: order_by
  move_damage_class_id: order_by
}

"""
columns and relationships of "pokemon_v2_movedamageclassname"
"""
type movedamageclassname {
  id: Int!

  """An object relationship"""
  language: language
  language_id: Int
  move_damage_class_id: Int

  """An object relationship"""
  movedamageclass: movedamageclass
  name: String!
}

"""
aggregated selection of "pokemon_v2_movedamageclassname"
"""
type movedamageclassname_aggregate {
  aggregate: movedamageclassname_aggregate_fields
  nodes: [movedamageclassname!]!
}

input movedamageclassname_aggregate_bool_exp {
  count: movedamageclassname_aggregate_bool_exp_count
}

input movedamageclassname_aggregate_bool_exp_count {
  arguments: [movedamageclassname_select_column!]
  distinct: Boolean
  filter: movedamageclassname_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_movedamageclassname"
"""
type movedamageclassname_aggregate_fields {
  avg: movedamageclassname_avg_fields
  count(columns: [movedamageclassname_select_column!], distinct: Boolean): Int!
  max: movedamageclassname_max_fields
  min: movedamageclassname_min_fields
  stddev: movedamageclassname_stddev_fields
  stddev_pop: movedamageclassname_stddev_pop_fields
  stddev_samp: movedamageclassname_stddev_samp_fields
  sum: movedamageclassname_sum_fields
  var_pop: movedamageclassname_var_pop_fields
  var_samp: movedamageclassname_var_samp_fields
  variance: movedamageclassname_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_movedamageclassname"
"""
input movedamageclassname_aggregate_order_by {
  avg: movedamageclassname_avg_order_by
  count: order_by
  max: movedamageclassname_max_order_by
  min: movedamageclassname_min_order_by
  stddev: movedamageclassname_stddev_order_by
  stddev_pop: movedamageclassname_stddev_pop_order_by
  stddev_samp: movedamageclassname_stddev_samp_order_by
  sum: movedamageclassname_sum_order_by
  var_pop: movedamageclassname_var_pop_order_by
  var_samp: movedamageclassname_var_samp_order_by
  variance: movedamageclassname_variance_order_by
}

"""aggregate avg on columns"""
type movedamageclassname_avg_fields {
  id: Float
  language_id: Float
  move_damage_class_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_movedamageclassname"
"""
input movedamageclassname_avg_order_by {
  id: order_by
  language_id: order_by
  move_damage_class_id: order_by
}

"""
Boolean expression to filter rows from the table
"pokemon_v2_movedamageclassname". All fields are combined with a logical 'AND'.
"""
input movedamageclassname_bool_exp {
  _and: [movedamageclassname_bool_exp!]
  _not: movedamageclassname_bool_exp
  _or: [movedamageclassname_bool_exp!]
  id: Int_comparison_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
  move_damage_class_id: Int_comparison_exp
  movedamageclass: movedamageclass_bool_exp
  name: String_comparison_exp
}

"""aggregate max on columns"""
type movedamageclassname_max_fields {
  id: Int
  language_id: Int
  move_damage_class_id: Int
  name: String
}

"""
order by max() on columns of table "pokemon_v2_movedamageclassname"
"""
input movedamageclassname_max_order_by {
  id: order_by
  language_id: order_by
  move_damage_class_id: order_by
  name: order_by
}

"""aggregate min on columns"""
type movedamageclassname_min_fields {
  id: Int
  language_id: Int
  move_damage_class_id: Int
  name: String
}

"""
order by min() on columns of table "pokemon_v2_movedamageclassname"
"""
input movedamageclassname_min_order_by {
  id: order_by
  language_id: order_by
  move_damage_class_id: order_by
  name: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_movedamageclassname".
"""
input movedamageclassname_order_by {
  id: order_by
  language: language_order_by
  language_id: order_by
  move_damage_class_id: order_by
  movedamageclass: movedamageclass_order_by
  name: order_by
}

"""
select columns of table "pokemon_v2_movedamageclassname"
"""
enum movedamageclassname_select_column {
  """column name"""
  id

  """column name"""
  language_id

  """column name"""
  move_damage_class_id

  """column name"""
  name
}

"""aggregate stddev on columns"""
type movedamageclassname_stddev_fields {
  id: Float
  language_id: Float
  move_damage_class_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_movedamageclassname"
"""
input movedamageclassname_stddev_order_by {
  id: order_by
  language_id: order_by
  move_damage_class_id: order_by
}

"""aggregate stddev_pop on columns"""
type movedamageclassname_stddev_pop_fields {
  id: Float
  language_id: Float
  move_damage_class_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_movedamageclassname"
"""
input movedamageclassname_stddev_pop_order_by {
  id: order_by
  language_id: order_by
  move_damage_class_id: order_by
}

"""aggregate stddev_samp on columns"""
type movedamageclassname_stddev_samp_fields {
  id: Float
  language_id: Float
  move_damage_class_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_movedamageclassname"
"""
input movedamageclassname_stddev_samp_order_by {
  id: order_by
  language_id: order_by
  move_damage_class_id: order_by
}

"""aggregate sum on columns"""
type movedamageclassname_sum_fields {
  id: Int
  language_id: Int
  move_damage_class_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_movedamageclassname"
"""
input movedamageclassname_sum_order_by {
  id: order_by
  language_id: order_by
  move_damage_class_id: order_by
}

"""aggregate var_pop on columns"""
type movedamageclassname_var_pop_fields {
  id: Float
  language_id: Float
  move_damage_class_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_movedamageclassname"
"""
input movedamageclassname_var_pop_order_by {
  id: order_by
  language_id: order_by
  move_damage_class_id: order_by
}

"""aggregate var_samp on columns"""
type movedamageclassname_var_samp_fields {
  id: Float
  language_id: Float
  move_damage_class_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_movedamageclassname"
"""
input movedamageclassname_var_samp_order_by {
  id: order_by
  language_id: order_by
  move_damage_class_id: order_by
}

"""aggregate variance on columns"""
type movedamageclassname_variance_fields {
  id: Float
  language_id: Float
  move_damage_class_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_movedamageclassname"
"""
input movedamageclassname_variance_order_by {
  id: order_by
  language_id: order_by
  move_damage_class_id: order_by
}

"""
columns and relationships of "pokemon_v2_moveeffect"
"""
type moveeffect {
  id: Int!

  """An array relationship"""
  movechanges(
    """distinct select on columns"""
    distinct_on: [movechange_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movechange_order_by!]

    """filter the rows returned"""
    where: movechange_bool_exp
  ): [movechange!]!

  """An aggregate relationship"""
  movechanges_aggregate(
    """distinct select on columns"""
    distinct_on: [movechange_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movechange_order_by!]

    """filter the rows returned"""
    where: movechange_bool_exp
  ): movechange_aggregate!

  """An array relationship"""
  moveeffectchanges(
    """distinct select on columns"""
    distinct_on: [moveeffectchange_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [moveeffectchange_order_by!]

    """filter the rows returned"""
    where: moveeffectchange_bool_exp
  ): [moveeffectchange!]!

  """An aggregate relationship"""
  moveeffectchanges_aggregate(
    """distinct select on columns"""
    distinct_on: [moveeffectchange_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [moveeffectchange_order_by!]

    """filter the rows returned"""
    where: moveeffectchange_bool_exp
  ): moveeffectchange_aggregate!

  """An array relationship"""
  moveeffecteffecttexts(
    """distinct select on columns"""
    distinct_on: [moveeffecteffecttext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [moveeffecteffecttext_order_by!]

    """filter the rows returned"""
    where: moveeffecteffecttext_bool_exp
  ): [moveeffecteffecttext!]!

  """An aggregate relationship"""
  moveeffecteffecttexts_aggregate(
    """distinct select on columns"""
    distinct_on: [moveeffecteffecttext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [moveeffecteffecttext_order_by!]

    """filter the rows returned"""
    where: moveeffecteffecttext_bool_exp
  ): moveeffecteffecttext_aggregate!

  """An array relationship"""
  moves(
    """distinct select on columns"""
    distinct_on: [move_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [move_order_by!]

    """filter the rows returned"""
    where: move_bool_exp
  ): [move!]!

  """An aggregate relationship"""
  moves_aggregate(
    """distinct select on columns"""
    distinct_on: [move_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [move_order_by!]

    """filter the rows returned"""
    where: move_bool_exp
  ): move_aggregate!
}

"""
aggregated selection of "pokemon_v2_moveeffect"
"""
type moveeffect_aggregate {
  aggregate: moveeffect_aggregate_fields
  nodes: [moveeffect!]!
}

"""
aggregate fields of "pokemon_v2_moveeffect"
"""
type moveeffect_aggregate_fields {
  avg: moveeffect_avg_fields
  count(columns: [moveeffect_select_column!], distinct: Boolean): Int!
  max: moveeffect_max_fields
  min: moveeffect_min_fields
  stddev: moveeffect_stddev_fields
  stddev_pop: moveeffect_stddev_pop_fields
  stddev_samp: moveeffect_stddev_samp_fields
  sum: moveeffect_sum_fields
  var_pop: moveeffect_var_pop_fields
  var_samp: moveeffect_var_samp_fields
  variance: moveeffect_variance_fields
}

"""aggregate avg on columns"""
type moveeffect_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "pokemon_v2_moveeffect". All fields are combined with a logical 'AND'.
"""
input moveeffect_bool_exp {
  _and: [moveeffect_bool_exp!]
  _not: moveeffect_bool_exp
  _or: [moveeffect_bool_exp!]
  id: Int_comparison_exp
  movechanges: movechange_bool_exp
  movechanges_aggregate: movechange_aggregate_bool_exp
  moveeffectchanges: moveeffectchange_bool_exp
  moveeffectchanges_aggregate: moveeffectchange_aggregate_bool_exp
  moveeffecteffecttexts: moveeffecteffecttext_bool_exp
  moveeffecteffecttexts_aggregate: moveeffecteffecttext_aggregate_bool_exp
  moves: move_bool_exp
  moves_aggregate: move_aggregate_bool_exp
}

"""aggregate max on columns"""
type moveeffect_max_fields {
  id: Int
}

"""aggregate min on columns"""
type moveeffect_min_fields {
  id: Int
}

"""Ordering options when selecting data from "pokemon_v2_moveeffect"."""
input moveeffect_order_by {
  id: order_by
  movechanges_aggregate: movechange_aggregate_order_by
  moveeffectchanges_aggregate: moveeffectchange_aggregate_order_by
  moveeffecteffecttexts_aggregate: moveeffecteffecttext_aggregate_order_by
  moves_aggregate: move_aggregate_order_by
}

"""
select columns of table "pokemon_v2_moveeffect"
"""
enum moveeffect_select_column {
  """column name"""
  id
}

"""aggregate stddev on columns"""
type moveeffect_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type moveeffect_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type moveeffect_stddev_samp_fields {
  id: Float
}

"""aggregate sum on columns"""
type moveeffect_sum_fields {
  id: Int
}

"""aggregate var_pop on columns"""
type moveeffect_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type moveeffect_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type moveeffect_variance_fields {
  id: Float
}

"""
columns and relationships of "pokemon_v2_moveeffectchange"
"""
type moveeffectchange {
  id: Int!
  move_effect_id: Int

  """An object relationship"""
  moveeffect: moveeffect

  """An array relationship"""
  moveeffectchangeeffecttexts(
    """distinct select on columns"""
    distinct_on: [moveeffectchangeeffecttext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [moveeffectchangeeffecttext_order_by!]

    """filter the rows returned"""
    where: moveeffectchangeeffecttext_bool_exp
  ): [moveeffectchangeeffecttext!]!

  """An aggregate relationship"""
  moveeffectchangeeffecttexts_aggregate(
    """distinct select on columns"""
    distinct_on: [moveeffectchangeeffecttext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [moveeffectchangeeffecttext_order_by!]

    """filter the rows returned"""
    where: moveeffectchangeeffecttext_bool_exp
  ): moveeffectchangeeffecttext_aggregate!
  version_group_id: Int

  """An object relationship"""
  versiongroup: versiongroup
}

"""
aggregated selection of "pokemon_v2_moveeffectchange"
"""
type moveeffectchange_aggregate {
  aggregate: moveeffectchange_aggregate_fields
  nodes: [moveeffectchange!]!
}

input moveeffectchange_aggregate_bool_exp {
  count: moveeffectchange_aggregate_bool_exp_count
}

input moveeffectchange_aggregate_bool_exp_count {
  arguments: [moveeffectchange_select_column!]
  distinct: Boolean
  filter: moveeffectchange_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_moveeffectchange"
"""
type moveeffectchange_aggregate_fields {
  avg: moveeffectchange_avg_fields
  count(columns: [moveeffectchange_select_column!], distinct: Boolean): Int!
  max: moveeffectchange_max_fields
  min: moveeffectchange_min_fields
  stddev: moveeffectchange_stddev_fields
  stddev_pop: moveeffectchange_stddev_pop_fields
  stddev_samp: moveeffectchange_stddev_samp_fields
  sum: moveeffectchange_sum_fields
  var_pop: moveeffectchange_var_pop_fields
  var_samp: moveeffectchange_var_samp_fields
  variance: moveeffectchange_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_moveeffectchange"
"""
input moveeffectchange_aggregate_order_by {
  avg: moveeffectchange_avg_order_by
  count: order_by
  max: moveeffectchange_max_order_by
  min: moveeffectchange_min_order_by
  stddev: moveeffectchange_stddev_order_by
  stddev_pop: moveeffectchange_stddev_pop_order_by
  stddev_samp: moveeffectchange_stddev_samp_order_by
  sum: moveeffectchange_sum_order_by
  var_pop: moveeffectchange_var_pop_order_by
  var_samp: moveeffectchange_var_samp_order_by
  variance: moveeffectchange_variance_order_by
}

"""aggregate avg on columns"""
type moveeffectchange_avg_fields {
  id: Float
  move_effect_id: Float
  version_group_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_moveeffectchange"
"""
input moveeffectchange_avg_order_by {
  id: order_by
  move_effect_id: order_by
  version_group_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_moveeffectchange".
All fields are combined with a logical 'AND'.
"""
input moveeffectchange_bool_exp {
  _and: [moveeffectchange_bool_exp!]
  _not: moveeffectchange_bool_exp
  _or: [moveeffectchange_bool_exp!]
  id: Int_comparison_exp
  move_effect_id: Int_comparison_exp
  moveeffect: moveeffect_bool_exp
  moveeffectchangeeffecttexts: moveeffectchangeeffecttext_bool_exp
  moveeffectchangeeffecttexts_aggregate: moveeffectchangeeffecttext_aggregate_bool_exp
  version_group_id: Int_comparison_exp
  versiongroup: versiongroup_bool_exp
}

"""aggregate max on columns"""
type moveeffectchange_max_fields {
  id: Int
  move_effect_id: Int
  version_group_id: Int
}

"""
order by max() on columns of table "pokemon_v2_moveeffectchange"
"""
input moveeffectchange_max_order_by {
  id: order_by
  move_effect_id: order_by
  version_group_id: order_by
}

"""aggregate min on columns"""
type moveeffectchange_min_fields {
  id: Int
  move_effect_id: Int
  version_group_id: Int
}

"""
order by min() on columns of table "pokemon_v2_moveeffectchange"
"""
input moveeffectchange_min_order_by {
  id: order_by
  move_effect_id: order_by
  version_group_id: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_moveeffectchange".
"""
input moveeffectchange_order_by {
  id: order_by
  move_effect_id: order_by
  moveeffect: moveeffect_order_by
  moveeffectchangeeffecttexts_aggregate: moveeffectchangeeffecttext_aggregate_order_by
  version_group_id: order_by
  versiongroup: versiongroup_order_by
}

"""
select columns of table "pokemon_v2_moveeffectchange"
"""
enum moveeffectchange_select_column {
  """column name"""
  id

  """column name"""
  move_effect_id

  """column name"""
  version_group_id
}

"""aggregate stddev on columns"""
type moveeffectchange_stddev_fields {
  id: Float
  move_effect_id: Float
  version_group_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_moveeffectchange"
"""
input moveeffectchange_stddev_order_by {
  id: order_by
  move_effect_id: order_by
  version_group_id: order_by
}

"""aggregate stddev_pop on columns"""
type moveeffectchange_stddev_pop_fields {
  id: Float
  move_effect_id: Float
  version_group_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_moveeffectchange"
"""
input moveeffectchange_stddev_pop_order_by {
  id: order_by
  move_effect_id: order_by
  version_group_id: order_by
}

"""aggregate stddev_samp on columns"""
type moveeffectchange_stddev_samp_fields {
  id: Float
  move_effect_id: Float
  version_group_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_moveeffectchange"
"""
input moveeffectchange_stddev_samp_order_by {
  id: order_by
  move_effect_id: order_by
  version_group_id: order_by
}

"""aggregate sum on columns"""
type moveeffectchange_sum_fields {
  id: Int
  move_effect_id: Int
  version_group_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_moveeffectchange"
"""
input moveeffectchange_sum_order_by {
  id: order_by
  move_effect_id: order_by
  version_group_id: order_by
}

"""aggregate var_pop on columns"""
type moveeffectchange_var_pop_fields {
  id: Float
  move_effect_id: Float
  version_group_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_moveeffectchange"
"""
input moveeffectchange_var_pop_order_by {
  id: order_by
  move_effect_id: order_by
  version_group_id: order_by
}

"""aggregate var_samp on columns"""
type moveeffectchange_var_samp_fields {
  id: Float
  move_effect_id: Float
  version_group_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_moveeffectchange"
"""
input moveeffectchange_var_samp_order_by {
  id: order_by
  move_effect_id: order_by
  version_group_id: order_by
}

"""aggregate variance on columns"""
type moveeffectchange_variance_fields {
  id: Float
  move_effect_id: Float
  version_group_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_moveeffectchange"
"""
input moveeffectchange_variance_order_by {
  id: order_by
  move_effect_id: order_by
  version_group_id: order_by
}

"""
columns and relationships of "pokemon_v2_moveeffectchangeeffecttext"
"""
type moveeffectchangeeffecttext {
  effect: String!
  id: Int!

  """An object relationship"""
  language: language
  language_id: Int
  move_effect_change_id: Int

  """An object relationship"""
  moveeffectchange: moveeffectchange
}

"""
aggregated selection of "pokemon_v2_moveeffectchangeeffecttext"
"""
type moveeffectchangeeffecttext_aggregate {
  aggregate: moveeffectchangeeffecttext_aggregate_fields
  nodes: [moveeffectchangeeffecttext!]!
}

input moveeffectchangeeffecttext_aggregate_bool_exp {
  count: moveeffectchangeeffecttext_aggregate_bool_exp_count
}

input moveeffectchangeeffecttext_aggregate_bool_exp_count {
  arguments: [moveeffectchangeeffecttext_select_column!]
  distinct: Boolean
  filter: moveeffectchangeeffecttext_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_moveeffectchangeeffecttext"
"""
type moveeffectchangeeffecttext_aggregate_fields {
  avg: moveeffectchangeeffecttext_avg_fields
  count(columns: [moveeffectchangeeffecttext_select_column!], distinct: Boolean): Int!
  max: moveeffectchangeeffecttext_max_fields
  min: moveeffectchangeeffecttext_min_fields
  stddev: moveeffectchangeeffecttext_stddev_fields
  stddev_pop: moveeffectchangeeffecttext_stddev_pop_fields
  stddev_samp: moveeffectchangeeffecttext_stddev_samp_fields
  sum: moveeffectchangeeffecttext_sum_fields
  var_pop: moveeffectchangeeffecttext_var_pop_fields
  var_samp: moveeffectchangeeffecttext_var_samp_fields
  variance: moveeffectchangeeffecttext_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_moveeffectchangeeffecttext"
"""
input moveeffectchangeeffecttext_aggregate_order_by {
  avg: moveeffectchangeeffecttext_avg_order_by
  count: order_by
  max: moveeffectchangeeffecttext_max_order_by
  min: moveeffectchangeeffecttext_min_order_by
  stddev: moveeffectchangeeffecttext_stddev_order_by
  stddev_pop: moveeffectchangeeffecttext_stddev_pop_order_by
  stddev_samp: moveeffectchangeeffecttext_stddev_samp_order_by
  sum: moveeffectchangeeffecttext_sum_order_by
  var_pop: moveeffectchangeeffecttext_var_pop_order_by
  var_samp: moveeffectchangeeffecttext_var_samp_order_by
  variance: moveeffectchangeeffecttext_variance_order_by
}

"""aggregate avg on columns"""
type moveeffectchangeeffecttext_avg_fields {
  id: Float
  language_id: Float
  move_effect_change_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_moveeffectchangeeffecttext"
"""
input moveeffectchangeeffecttext_avg_order_by {
  id: order_by
  language_id: order_by
  move_effect_change_id: order_by
}

"""
Boolean expression to filter rows from the table
"pokemon_v2_moveeffectchangeeffecttext". All fields are combined with a logical 'AND'.
"""
input moveeffectchangeeffecttext_bool_exp {
  _and: [moveeffectchangeeffecttext_bool_exp!]
  _not: moveeffectchangeeffecttext_bool_exp
  _or: [moveeffectchangeeffecttext_bool_exp!]
  effect: String_comparison_exp
  id: Int_comparison_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
  move_effect_change_id: Int_comparison_exp
  moveeffectchange: moveeffectchange_bool_exp
}

"""aggregate max on columns"""
type moveeffectchangeeffecttext_max_fields {
  effect: String
  id: Int
  language_id: Int
  move_effect_change_id: Int
}

"""
order by max() on columns of table "pokemon_v2_moveeffectchangeeffecttext"
"""
input moveeffectchangeeffecttext_max_order_by {
  effect: order_by
  id: order_by
  language_id: order_by
  move_effect_change_id: order_by
}

"""aggregate min on columns"""
type moveeffectchangeeffecttext_min_fields {
  effect: String
  id: Int
  language_id: Int
  move_effect_change_id: Int
}

"""
order by min() on columns of table "pokemon_v2_moveeffectchangeeffecttext"
"""
input moveeffectchangeeffecttext_min_order_by {
  effect: order_by
  id: order_by
  language_id: order_by
  move_effect_change_id: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_moveeffectchangeeffecttext".
"""
input moveeffectchangeeffecttext_order_by {
  effect: order_by
  id: order_by
  language: language_order_by
  language_id: order_by
  move_effect_change_id: order_by
  moveeffectchange: moveeffectchange_order_by
}

"""
select columns of table "pokemon_v2_moveeffectchangeeffecttext"
"""
enum moveeffectchangeeffecttext_select_column {
  """column name"""
  effect

  """column name"""
  id

  """column name"""
  language_id

  """column name"""
  move_effect_change_id
}

"""aggregate stddev on columns"""
type moveeffectchangeeffecttext_stddev_fields {
  id: Float
  language_id: Float
  move_effect_change_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_moveeffectchangeeffecttext"
"""
input moveeffectchangeeffecttext_stddev_order_by {
  id: order_by
  language_id: order_by
  move_effect_change_id: order_by
}

"""aggregate stddev_pop on columns"""
type moveeffectchangeeffecttext_stddev_pop_fields {
  id: Float
  language_id: Float
  move_effect_change_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_moveeffectchangeeffecttext"
"""
input moveeffectchangeeffecttext_stddev_pop_order_by {
  id: order_by
  language_id: order_by
  move_effect_change_id: order_by
}

"""aggregate stddev_samp on columns"""
type moveeffectchangeeffecttext_stddev_samp_fields {
  id: Float
  language_id: Float
  move_effect_change_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_moveeffectchangeeffecttext"
"""
input moveeffectchangeeffecttext_stddev_samp_order_by {
  id: order_by
  language_id: order_by
  move_effect_change_id: order_by
}

"""aggregate sum on columns"""
type moveeffectchangeeffecttext_sum_fields {
  id: Int
  language_id: Int
  move_effect_change_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_moveeffectchangeeffecttext"
"""
input moveeffectchangeeffecttext_sum_order_by {
  id: order_by
  language_id: order_by
  move_effect_change_id: order_by
}

"""aggregate var_pop on columns"""
type moveeffectchangeeffecttext_var_pop_fields {
  id: Float
  language_id: Float
  move_effect_change_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_moveeffectchangeeffecttext"
"""
input moveeffectchangeeffecttext_var_pop_order_by {
  id: order_by
  language_id: order_by
  move_effect_change_id: order_by
}

"""aggregate var_samp on columns"""
type moveeffectchangeeffecttext_var_samp_fields {
  id: Float
  language_id: Float
  move_effect_change_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_moveeffectchangeeffecttext"
"""
input moveeffectchangeeffecttext_var_samp_order_by {
  id: order_by
  language_id: order_by
  move_effect_change_id: order_by
}

"""aggregate variance on columns"""
type moveeffectchangeeffecttext_variance_fields {
  id: Float
  language_id: Float
  move_effect_change_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_moveeffectchangeeffecttext"
"""
input moveeffectchangeeffecttext_variance_order_by {
  id: order_by
  language_id: order_by
  move_effect_change_id: order_by
}

"""
columns and relationships of "pokemon_v2_moveeffecteffecttext"
"""
type moveeffecteffecttext {
  effect: String!
  id: Int!

  """An object relationship"""
  language: language
  language_id: Int
  move_effect_id: Int

  """An object relationship"""
  moveeffect: moveeffect
  short_effect: String!
}

"""
aggregated selection of "pokemon_v2_moveeffecteffecttext"
"""
type moveeffecteffecttext_aggregate {
  aggregate: moveeffecteffecttext_aggregate_fields
  nodes: [moveeffecteffecttext!]!
}

input moveeffecteffecttext_aggregate_bool_exp {
  count: moveeffecteffecttext_aggregate_bool_exp_count
}

input moveeffecteffecttext_aggregate_bool_exp_count {
  arguments: [moveeffecteffecttext_select_column!]
  distinct: Boolean
  filter: moveeffecteffecttext_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_moveeffecteffecttext"
"""
type moveeffecteffecttext_aggregate_fields {
  avg: moveeffecteffecttext_avg_fields
  count(columns: [moveeffecteffecttext_select_column!], distinct: Boolean): Int!
  max: moveeffecteffecttext_max_fields
  min: moveeffecteffecttext_min_fields
  stddev: moveeffecteffecttext_stddev_fields
  stddev_pop: moveeffecteffecttext_stddev_pop_fields
  stddev_samp: moveeffecteffecttext_stddev_samp_fields
  sum: moveeffecteffecttext_sum_fields
  var_pop: moveeffecteffecttext_var_pop_fields
  var_samp: moveeffecteffecttext_var_samp_fields
  variance: moveeffecteffecttext_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_moveeffecteffecttext"
"""
input moveeffecteffecttext_aggregate_order_by {
  avg: moveeffecteffecttext_avg_order_by
  count: order_by
  max: moveeffecteffecttext_max_order_by
  min: moveeffecteffecttext_min_order_by
  stddev: moveeffecteffecttext_stddev_order_by
  stddev_pop: moveeffecteffecttext_stddev_pop_order_by
  stddev_samp: moveeffecteffecttext_stddev_samp_order_by
  sum: moveeffecteffecttext_sum_order_by
  var_pop: moveeffecteffecttext_var_pop_order_by
  var_samp: moveeffecteffecttext_var_samp_order_by
  variance: moveeffecteffecttext_variance_order_by
}

"""aggregate avg on columns"""
type moveeffecteffecttext_avg_fields {
  id: Float
  language_id: Float
  move_effect_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_moveeffecteffecttext"
"""
input moveeffecteffecttext_avg_order_by {
  id: order_by
  language_id: order_by
  move_effect_id: order_by
}

"""
Boolean expression to filter rows from the table
"pokemon_v2_moveeffecteffecttext". All fields are combined with a logical 'AND'.
"""
input moveeffecteffecttext_bool_exp {
  _and: [moveeffecteffecttext_bool_exp!]
  _not: moveeffecteffecttext_bool_exp
  _or: [moveeffecteffecttext_bool_exp!]
  effect: String_comparison_exp
  id: Int_comparison_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
  move_effect_id: Int_comparison_exp
  moveeffect: moveeffect_bool_exp
  short_effect: String_comparison_exp
}

"""aggregate max on columns"""
type moveeffecteffecttext_max_fields {
  effect: String
  id: Int
  language_id: Int
  move_effect_id: Int
  short_effect: String
}

"""
order by max() on columns of table "pokemon_v2_moveeffecteffecttext"
"""
input moveeffecteffecttext_max_order_by {
  effect: order_by
  id: order_by
  language_id: order_by
  move_effect_id: order_by
  short_effect: order_by
}

"""aggregate min on columns"""
type moveeffecteffecttext_min_fields {
  effect: String
  id: Int
  language_id: Int
  move_effect_id: Int
  short_effect: String
}

"""
order by min() on columns of table "pokemon_v2_moveeffecteffecttext"
"""
input moveeffecteffecttext_min_order_by {
  effect: order_by
  id: order_by
  language_id: order_by
  move_effect_id: order_by
  short_effect: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_moveeffecteffecttext".
"""
input moveeffecteffecttext_order_by {
  effect: order_by
  id: order_by
  language: language_order_by
  language_id: order_by
  move_effect_id: order_by
  moveeffect: moveeffect_order_by
  short_effect: order_by
}

"""
select columns of table "pokemon_v2_moveeffecteffecttext"
"""
enum moveeffecteffecttext_select_column {
  """column name"""
  effect

  """column name"""
  id

  """column name"""
  language_id

  """column name"""
  move_effect_id

  """column name"""
  short_effect
}

"""aggregate stddev on columns"""
type moveeffecteffecttext_stddev_fields {
  id: Float
  language_id: Float
  move_effect_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_moveeffecteffecttext"
"""
input moveeffecteffecttext_stddev_order_by {
  id: order_by
  language_id: order_by
  move_effect_id: order_by
}

"""aggregate stddev_pop on columns"""
type moveeffecteffecttext_stddev_pop_fields {
  id: Float
  language_id: Float
  move_effect_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_moveeffecteffecttext"
"""
input moveeffecteffecttext_stddev_pop_order_by {
  id: order_by
  language_id: order_by
  move_effect_id: order_by
}

"""aggregate stddev_samp on columns"""
type moveeffecteffecttext_stddev_samp_fields {
  id: Float
  language_id: Float
  move_effect_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_moveeffecteffecttext"
"""
input moveeffecteffecttext_stddev_samp_order_by {
  id: order_by
  language_id: order_by
  move_effect_id: order_by
}

"""aggregate sum on columns"""
type moveeffecteffecttext_sum_fields {
  id: Int
  language_id: Int
  move_effect_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_moveeffecteffecttext"
"""
input moveeffecteffecttext_sum_order_by {
  id: order_by
  language_id: order_by
  move_effect_id: order_by
}

"""aggregate var_pop on columns"""
type moveeffecteffecttext_var_pop_fields {
  id: Float
  language_id: Float
  move_effect_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_moveeffecteffecttext"
"""
input moveeffecteffecttext_var_pop_order_by {
  id: order_by
  language_id: order_by
  move_effect_id: order_by
}

"""aggregate var_samp on columns"""
type moveeffecteffecttext_var_samp_fields {
  id: Float
  language_id: Float
  move_effect_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_moveeffecteffecttext"
"""
input moveeffecteffecttext_var_samp_order_by {
  id: order_by
  language_id: order_by
  move_effect_id: order_by
}

"""aggregate variance on columns"""
type moveeffecteffecttext_variance_fields {
  id: Float
  language_id: Float
  move_effect_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_moveeffecteffecttext"
"""
input moveeffecteffecttext_variance_order_by {
  id: order_by
  language_id: order_by
  move_effect_id: order_by
}

"""
columns and relationships of "pokemon_v2_moveflavortext"
"""
type moveflavortext {
  flavor_text: String!
  id: Int!

  """An object relationship"""
  language: language
  language_id: Int

  """An object relationship"""
  move: move
  move_id: Int
  version_group_id: Int

  """An object relationship"""
  versiongroup: versiongroup
}

"""
aggregated selection of "pokemon_v2_moveflavortext"
"""
type moveflavortext_aggregate {
  aggregate: moveflavortext_aggregate_fields
  nodes: [moveflavortext!]!
}

input moveflavortext_aggregate_bool_exp {
  count: moveflavortext_aggregate_bool_exp_count
}

input moveflavortext_aggregate_bool_exp_count {
  arguments: [moveflavortext_select_column!]
  distinct: Boolean
  filter: moveflavortext_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_moveflavortext"
"""
type moveflavortext_aggregate_fields {
  avg: moveflavortext_avg_fields
  count(columns: [moveflavortext_select_column!], distinct: Boolean): Int!
  max: moveflavortext_max_fields
  min: moveflavortext_min_fields
  stddev: moveflavortext_stddev_fields
  stddev_pop: moveflavortext_stddev_pop_fields
  stddev_samp: moveflavortext_stddev_samp_fields
  sum: moveflavortext_sum_fields
  var_pop: moveflavortext_var_pop_fields
  var_samp: moveflavortext_var_samp_fields
  variance: moveflavortext_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_moveflavortext"
"""
input moveflavortext_aggregate_order_by {
  avg: moveflavortext_avg_order_by
  count: order_by
  max: moveflavortext_max_order_by
  min: moveflavortext_min_order_by
  stddev: moveflavortext_stddev_order_by
  stddev_pop: moveflavortext_stddev_pop_order_by
  stddev_samp: moveflavortext_stddev_samp_order_by
  sum: moveflavortext_sum_order_by
  var_pop: moveflavortext_var_pop_order_by
  var_samp: moveflavortext_var_samp_order_by
  variance: moveflavortext_variance_order_by
}

"""aggregate avg on columns"""
type moveflavortext_avg_fields {
  id: Float
  language_id: Float
  move_id: Float
  version_group_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_moveflavortext"
"""
input moveflavortext_avg_order_by {
  id: order_by
  language_id: order_by
  move_id: order_by
  version_group_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_moveflavortext". All fields are combined with a logical 'AND'.
"""
input moveflavortext_bool_exp {
  _and: [moveflavortext_bool_exp!]
  _not: moveflavortext_bool_exp
  _or: [moveflavortext_bool_exp!]
  flavor_text: String_comparison_exp
  id: Int_comparison_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
  move: move_bool_exp
  move_id: Int_comparison_exp
  version_group_id: Int_comparison_exp
  versiongroup: versiongroup_bool_exp
}

"""aggregate max on columns"""
type moveflavortext_max_fields {
  flavor_text: String
  id: Int
  language_id: Int
  move_id: Int
  version_group_id: Int
}

"""
order by max() on columns of table "pokemon_v2_moveflavortext"
"""
input moveflavortext_max_order_by {
  flavor_text: order_by
  id: order_by
  language_id: order_by
  move_id: order_by
  version_group_id: order_by
}

"""aggregate min on columns"""
type moveflavortext_min_fields {
  flavor_text: String
  id: Int
  language_id: Int
  move_id: Int
  version_group_id: Int
}

"""
order by min() on columns of table "pokemon_v2_moveflavortext"
"""
input moveflavortext_min_order_by {
  flavor_text: order_by
  id: order_by
  language_id: order_by
  move_id: order_by
  version_group_id: order_by
}

"""Ordering options when selecting data from "pokemon_v2_moveflavortext"."""
input moveflavortext_order_by {
  flavor_text: order_by
  id: order_by
  language: language_order_by
  language_id: order_by
  move: move_order_by
  move_id: order_by
  version_group_id: order_by
  versiongroup: versiongroup_order_by
}

"""
select columns of table "pokemon_v2_moveflavortext"
"""
enum moveflavortext_select_column {
  """column name"""
  flavor_text

  """column name"""
  id

  """column name"""
  language_id

  """column name"""
  move_id

  """column name"""
  version_group_id
}

"""aggregate stddev on columns"""
type moveflavortext_stddev_fields {
  id: Float
  language_id: Float
  move_id: Float
  version_group_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_moveflavortext"
"""
input moveflavortext_stddev_order_by {
  id: order_by
  language_id: order_by
  move_id: order_by
  version_group_id: order_by
}

"""aggregate stddev_pop on columns"""
type moveflavortext_stddev_pop_fields {
  id: Float
  language_id: Float
  move_id: Float
  version_group_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_moveflavortext"
"""
input moveflavortext_stddev_pop_order_by {
  id: order_by
  language_id: order_by
  move_id: order_by
  version_group_id: order_by
}

"""aggregate stddev_samp on columns"""
type moveflavortext_stddev_samp_fields {
  id: Float
  language_id: Float
  move_id: Float
  version_group_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_moveflavortext"
"""
input moveflavortext_stddev_samp_order_by {
  id: order_by
  language_id: order_by
  move_id: order_by
  version_group_id: order_by
}

"""aggregate sum on columns"""
type moveflavortext_sum_fields {
  id: Int
  language_id: Int
  move_id: Int
  version_group_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_moveflavortext"
"""
input moveflavortext_sum_order_by {
  id: order_by
  language_id: order_by
  move_id: order_by
  version_group_id: order_by
}

"""aggregate var_pop on columns"""
type moveflavortext_var_pop_fields {
  id: Float
  language_id: Float
  move_id: Float
  version_group_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_moveflavortext"
"""
input moveflavortext_var_pop_order_by {
  id: order_by
  language_id: order_by
  move_id: order_by
  version_group_id: order_by
}

"""aggregate var_samp on columns"""
type moveflavortext_var_samp_fields {
  id: Float
  language_id: Float
  move_id: Float
  version_group_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_moveflavortext"
"""
input moveflavortext_var_samp_order_by {
  id: order_by
  language_id: order_by
  move_id: order_by
  version_group_id: order_by
}

"""aggregate variance on columns"""
type moveflavortext_variance_fields {
  id: Float
  language_id: Float
  move_id: Float
  version_group_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_moveflavortext"
"""
input moveflavortext_variance_order_by {
  id: order_by
  language_id: order_by
  move_id: order_by
  version_group_id: order_by
}

"""
columns and relationships of "pokemon_v2_movelearnmethod"
"""
type movelearnmethod {
  id: Int!

  """An array relationship"""
  movelearnmethoddescriptions(
    """distinct select on columns"""
    distinct_on: [movelearnmethoddescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movelearnmethoddescription_order_by!]

    """filter the rows returned"""
    where: movelearnmethoddescription_bool_exp
  ): [movelearnmethoddescription!]!

  """An aggregate relationship"""
  movelearnmethoddescriptions_aggregate(
    """distinct select on columns"""
    distinct_on: [movelearnmethoddescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movelearnmethoddescription_order_by!]

    """filter the rows returned"""
    where: movelearnmethoddescription_bool_exp
  ): movelearnmethoddescription_aggregate!

  """An array relationship"""
  movelearnmethodnames(
    """distinct select on columns"""
    distinct_on: [movelearnmethodname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movelearnmethodname_order_by!]

    """filter the rows returned"""
    where: movelearnmethodname_bool_exp
  ): [movelearnmethodname!]!

  """An aggregate relationship"""
  movelearnmethodnames_aggregate(
    """distinct select on columns"""
    distinct_on: [movelearnmethodname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movelearnmethodname_order_by!]

    """filter the rows returned"""
    where: movelearnmethodname_bool_exp
  ): movelearnmethodname_aggregate!
  name: String!

  """An array relationship"""
  pokemonmoves(
    """distinct select on columns"""
    distinct_on: [pokemonmove_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonmove_order_by!]

    """filter the rows returned"""
    where: pokemonmove_bool_exp
  ): [pokemonmove!]!

  """An aggregate relationship"""
  pokemonmoves_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonmove_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonmove_order_by!]

    """filter the rows returned"""
    where: pokemonmove_bool_exp
  ): pokemonmove_aggregate!

  """An array relationship"""
  versiongroupmovelearnmethods(
    """distinct select on columns"""
    distinct_on: [versiongroupmovelearnmethod_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [versiongroupmovelearnmethod_order_by!]

    """filter the rows returned"""
    where: versiongroupmovelearnmethod_bool_exp
  ): [versiongroupmovelearnmethod!]!

  """An aggregate relationship"""
  versiongroupmovelearnmethods_aggregate(
    """distinct select on columns"""
    distinct_on: [versiongroupmovelearnmethod_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [versiongroupmovelearnmethod_order_by!]

    """filter the rows returned"""
    where: versiongroupmovelearnmethod_bool_exp
  ): versiongroupmovelearnmethod_aggregate!
}

"""
aggregated selection of "pokemon_v2_movelearnmethod"
"""
type movelearnmethod_aggregate {
  aggregate: movelearnmethod_aggregate_fields
  nodes: [movelearnmethod!]!
}

"""
aggregate fields of "pokemon_v2_movelearnmethod"
"""
type movelearnmethod_aggregate_fields {
  avg: movelearnmethod_avg_fields
  count(columns: [movelearnmethod_select_column!], distinct: Boolean): Int!
  max: movelearnmethod_max_fields
  min: movelearnmethod_min_fields
  stddev: movelearnmethod_stddev_fields
  stddev_pop: movelearnmethod_stddev_pop_fields
  stddev_samp: movelearnmethod_stddev_samp_fields
  sum: movelearnmethod_sum_fields
  var_pop: movelearnmethod_var_pop_fields
  var_samp: movelearnmethod_var_samp_fields
  variance: movelearnmethod_variance_fields
}

"""aggregate avg on columns"""
type movelearnmethod_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "pokemon_v2_movelearnmethod". All fields are combined with a logical 'AND'.
"""
input movelearnmethod_bool_exp {
  _and: [movelearnmethod_bool_exp!]
  _not: movelearnmethod_bool_exp
  _or: [movelearnmethod_bool_exp!]
  id: Int_comparison_exp
  movelearnmethoddescriptions: movelearnmethoddescription_bool_exp
  movelearnmethoddescriptions_aggregate: movelearnmethoddescription_aggregate_bool_exp
  movelearnmethodnames: movelearnmethodname_bool_exp
  movelearnmethodnames_aggregate: movelearnmethodname_aggregate_bool_exp
  name: String_comparison_exp
  pokemonmoves: pokemonmove_bool_exp
  pokemonmoves_aggregate: pokemonmove_aggregate_bool_exp
  versiongroupmovelearnmethods: versiongroupmovelearnmethod_bool_exp
  versiongroupmovelearnmethods_aggregate: versiongroupmovelearnmethod_aggregate_bool_exp
}

"""aggregate max on columns"""
type movelearnmethod_max_fields {
  id: Int
  name: String
}

"""aggregate min on columns"""
type movelearnmethod_min_fields {
  id: Int
  name: String
}

"""
Ordering options when selecting data from "pokemon_v2_movelearnmethod".
"""
input movelearnmethod_order_by {
  id: order_by
  movelearnmethoddescriptions_aggregate: movelearnmethoddescription_aggregate_order_by
  movelearnmethodnames_aggregate: movelearnmethodname_aggregate_order_by
  name: order_by
  pokemonmoves_aggregate: pokemonmove_aggregate_order_by
  versiongroupmovelearnmethods_aggregate: versiongroupmovelearnmethod_aggregate_order_by
}

"""
select columns of table "pokemon_v2_movelearnmethod"
"""
enum movelearnmethod_select_column {
  """column name"""
  id

  """column name"""
  name
}

"""aggregate stddev on columns"""
type movelearnmethod_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type movelearnmethod_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type movelearnmethod_stddev_samp_fields {
  id: Float
}

"""aggregate sum on columns"""
type movelearnmethod_sum_fields {
  id: Int
}

"""aggregate var_pop on columns"""
type movelearnmethod_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type movelearnmethod_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type movelearnmethod_variance_fields {
  id: Float
}

"""
columns and relationships of "pokemon_v2_movelearnmethoddescription"
"""
type movelearnmethoddescription {
  description: String!
  id: Int!

  """An object relationship"""
  language: language
  language_id: Int
  move_learn_method_id: Int

  """An object relationship"""
  movelearnmethod: movelearnmethod
}

"""
aggregated selection of "pokemon_v2_movelearnmethoddescription"
"""
type movelearnmethoddescription_aggregate {
  aggregate: movelearnmethoddescription_aggregate_fields
  nodes: [movelearnmethoddescription!]!
}

input movelearnmethoddescription_aggregate_bool_exp {
  count: movelearnmethoddescription_aggregate_bool_exp_count
}

input movelearnmethoddescription_aggregate_bool_exp_count {
  arguments: [movelearnmethoddescription_select_column!]
  distinct: Boolean
  filter: movelearnmethoddescription_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_movelearnmethoddescription"
"""
type movelearnmethoddescription_aggregate_fields {
  avg: movelearnmethoddescription_avg_fields
  count(columns: [movelearnmethoddescription_select_column!], distinct: Boolean): Int!
  max: movelearnmethoddescription_max_fields
  min: movelearnmethoddescription_min_fields
  stddev: movelearnmethoddescription_stddev_fields
  stddev_pop: movelearnmethoddescription_stddev_pop_fields
  stddev_samp: movelearnmethoddescription_stddev_samp_fields
  sum: movelearnmethoddescription_sum_fields
  var_pop: movelearnmethoddescription_var_pop_fields
  var_samp: movelearnmethoddescription_var_samp_fields
  variance: movelearnmethoddescription_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_movelearnmethoddescription"
"""
input movelearnmethoddescription_aggregate_order_by {
  avg: movelearnmethoddescription_avg_order_by
  count: order_by
  max: movelearnmethoddescription_max_order_by
  min: movelearnmethoddescription_min_order_by
  stddev: movelearnmethoddescription_stddev_order_by
  stddev_pop: movelearnmethoddescription_stddev_pop_order_by
  stddev_samp: movelearnmethoddescription_stddev_samp_order_by
  sum: movelearnmethoddescription_sum_order_by
  var_pop: movelearnmethoddescription_var_pop_order_by
  var_samp: movelearnmethoddescription_var_samp_order_by
  variance: movelearnmethoddescription_variance_order_by
}

"""aggregate avg on columns"""
type movelearnmethoddescription_avg_fields {
  id: Float
  language_id: Float
  move_learn_method_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_movelearnmethoddescription"
"""
input movelearnmethoddescription_avg_order_by {
  id: order_by
  language_id: order_by
  move_learn_method_id: order_by
}

"""
Boolean expression to filter rows from the table
"pokemon_v2_movelearnmethoddescription". All fields are combined with a logical 'AND'.
"""
input movelearnmethoddescription_bool_exp {
  _and: [movelearnmethoddescription_bool_exp!]
  _not: movelearnmethoddescription_bool_exp
  _or: [movelearnmethoddescription_bool_exp!]
  description: String_comparison_exp
  id: Int_comparison_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
  move_learn_method_id: Int_comparison_exp
  movelearnmethod: movelearnmethod_bool_exp
}

"""aggregate max on columns"""
type movelearnmethoddescription_max_fields {
  description: String
  id: Int
  language_id: Int
  move_learn_method_id: Int
}

"""
order by max() on columns of table "pokemon_v2_movelearnmethoddescription"
"""
input movelearnmethoddescription_max_order_by {
  description: order_by
  id: order_by
  language_id: order_by
  move_learn_method_id: order_by
}

"""aggregate min on columns"""
type movelearnmethoddescription_min_fields {
  description: String
  id: Int
  language_id: Int
  move_learn_method_id: Int
}

"""
order by min() on columns of table "pokemon_v2_movelearnmethoddescription"
"""
input movelearnmethoddescription_min_order_by {
  description: order_by
  id: order_by
  language_id: order_by
  move_learn_method_id: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_movelearnmethoddescription".
"""
input movelearnmethoddescription_order_by {
  description: order_by
  id: order_by
  language: language_order_by
  language_id: order_by
  move_learn_method_id: order_by
  movelearnmethod: movelearnmethod_order_by
}

"""
select columns of table "pokemon_v2_movelearnmethoddescription"
"""
enum movelearnmethoddescription_select_column {
  """column name"""
  description

  """column name"""
  id

  """column name"""
  language_id

  """column name"""
  move_learn_method_id
}

"""aggregate stddev on columns"""
type movelearnmethoddescription_stddev_fields {
  id: Float
  language_id: Float
  move_learn_method_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_movelearnmethoddescription"
"""
input movelearnmethoddescription_stddev_order_by {
  id: order_by
  language_id: order_by
  move_learn_method_id: order_by
}

"""aggregate stddev_pop on columns"""
type movelearnmethoddescription_stddev_pop_fields {
  id: Float
  language_id: Float
  move_learn_method_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_movelearnmethoddescription"
"""
input movelearnmethoddescription_stddev_pop_order_by {
  id: order_by
  language_id: order_by
  move_learn_method_id: order_by
}

"""aggregate stddev_samp on columns"""
type movelearnmethoddescription_stddev_samp_fields {
  id: Float
  language_id: Float
  move_learn_method_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_movelearnmethoddescription"
"""
input movelearnmethoddescription_stddev_samp_order_by {
  id: order_by
  language_id: order_by
  move_learn_method_id: order_by
}

"""aggregate sum on columns"""
type movelearnmethoddescription_sum_fields {
  id: Int
  language_id: Int
  move_learn_method_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_movelearnmethoddescription"
"""
input movelearnmethoddescription_sum_order_by {
  id: order_by
  language_id: order_by
  move_learn_method_id: order_by
}

"""aggregate var_pop on columns"""
type movelearnmethoddescription_var_pop_fields {
  id: Float
  language_id: Float
  move_learn_method_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_movelearnmethoddescription"
"""
input movelearnmethoddescription_var_pop_order_by {
  id: order_by
  language_id: order_by
  move_learn_method_id: order_by
}

"""aggregate var_samp on columns"""
type movelearnmethoddescription_var_samp_fields {
  id: Float
  language_id: Float
  move_learn_method_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_movelearnmethoddescription"
"""
input movelearnmethoddescription_var_samp_order_by {
  id: order_by
  language_id: order_by
  move_learn_method_id: order_by
}

"""aggregate variance on columns"""
type movelearnmethoddescription_variance_fields {
  id: Float
  language_id: Float
  move_learn_method_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_movelearnmethoddescription"
"""
input movelearnmethoddescription_variance_order_by {
  id: order_by
  language_id: order_by
  move_learn_method_id: order_by
}

"""
columns and relationships of "pokemon_v2_movelearnmethodname"
"""
type movelearnmethodname {
  id: Int!

  """An object relationship"""
  language: language
  language_id: Int
  move_learn_method_id: Int

  """An object relationship"""
  movelearnmethod: movelearnmethod
  name: String!
}

"""
aggregated selection of "pokemon_v2_movelearnmethodname"
"""
type movelearnmethodname_aggregate {
  aggregate: movelearnmethodname_aggregate_fields
  nodes: [movelearnmethodname!]!
}

input movelearnmethodname_aggregate_bool_exp {
  count: movelearnmethodname_aggregate_bool_exp_count
}

input movelearnmethodname_aggregate_bool_exp_count {
  arguments: [movelearnmethodname_select_column!]
  distinct: Boolean
  filter: movelearnmethodname_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_movelearnmethodname"
"""
type movelearnmethodname_aggregate_fields {
  avg: movelearnmethodname_avg_fields
  count(columns: [movelearnmethodname_select_column!], distinct: Boolean): Int!
  max: movelearnmethodname_max_fields
  min: movelearnmethodname_min_fields
  stddev: movelearnmethodname_stddev_fields
  stddev_pop: movelearnmethodname_stddev_pop_fields
  stddev_samp: movelearnmethodname_stddev_samp_fields
  sum: movelearnmethodname_sum_fields
  var_pop: movelearnmethodname_var_pop_fields
  var_samp: movelearnmethodname_var_samp_fields
  variance: movelearnmethodname_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_movelearnmethodname"
"""
input movelearnmethodname_aggregate_order_by {
  avg: movelearnmethodname_avg_order_by
  count: order_by
  max: movelearnmethodname_max_order_by
  min: movelearnmethodname_min_order_by
  stddev: movelearnmethodname_stddev_order_by
  stddev_pop: movelearnmethodname_stddev_pop_order_by
  stddev_samp: movelearnmethodname_stddev_samp_order_by
  sum: movelearnmethodname_sum_order_by
  var_pop: movelearnmethodname_var_pop_order_by
  var_samp: movelearnmethodname_var_samp_order_by
  variance: movelearnmethodname_variance_order_by
}

"""aggregate avg on columns"""
type movelearnmethodname_avg_fields {
  id: Float
  language_id: Float
  move_learn_method_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_movelearnmethodname"
"""
input movelearnmethodname_avg_order_by {
  id: order_by
  language_id: order_by
  move_learn_method_id: order_by
}

"""
Boolean expression to filter rows from the table
"pokemon_v2_movelearnmethodname". All fields are combined with a logical 'AND'.
"""
input movelearnmethodname_bool_exp {
  _and: [movelearnmethodname_bool_exp!]
  _not: movelearnmethodname_bool_exp
  _or: [movelearnmethodname_bool_exp!]
  id: Int_comparison_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
  move_learn_method_id: Int_comparison_exp
  movelearnmethod: movelearnmethod_bool_exp
  name: String_comparison_exp
}

"""aggregate max on columns"""
type movelearnmethodname_max_fields {
  id: Int
  language_id: Int
  move_learn_method_id: Int
  name: String
}

"""
order by max() on columns of table "pokemon_v2_movelearnmethodname"
"""
input movelearnmethodname_max_order_by {
  id: order_by
  language_id: order_by
  move_learn_method_id: order_by
  name: order_by
}

"""aggregate min on columns"""
type movelearnmethodname_min_fields {
  id: Int
  language_id: Int
  move_learn_method_id: Int
  name: String
}

"""
order by min() on columns of table "pokemon_v2_movelearnmethodname"
"""
input movelearnmethodname_min_order_by {
  id: order_by
  language_id: order_by
  move_learn_method_id: order_by
  name: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_movelearnmethodname".
"""
input movelearnmethodname_order_by {
  id: order_by
  language: language_order_by
  language_id: order_by
  move_learn_method_id: order_by
  movelearnmethod: movelearnmethod_order_by
  name: order_by
}

"""
select columns of table "pokemon_v2_movelearnmethodname"
"""
enum movelearnmethodname_select_column {
  """column name"""
  id

  """column name"""
  language_id

  """column name"""
  move_learn_method_id

  """column name"""
  name
}

"""aggregate stddev on columns"""
type movelearnmethodname_stddev_fields {
  id: Float
  language_id: Float
  move_learn_method_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_movelearnmethodname"
"""
input movelearnmethodname_stddev_order_by {
  id: order_by
  language_id: order_by
  move_learn_method_id: order_by
}

"""aggregate stddev_pop on columns"""
type movelearnmethodname_stddev_pop_fields {
  id: Float
  language_id: Float
  move_learn_method_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_movelearnmethodname"
"""
input movelearnmethodname_stddev_pop_order_by {
  id: order_by
  language_id: order_by
  move_learn_method_id: order_by
}

"""aggregate stddev_samp on columns"""
type movelearnmethodname_stddev_samp_fields {
  id: Float
  language_id: Float
  move_learn_method_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_movelearnmethodname"
"""
input movelearnmethodname_stddev_samp_order_by {
  id: order_by
  language_id: order_by
  move_learn_method_id: order_by
}

"""aggregate sum on columns"""
type movelearnmethodname_sum_fields {
  id: Int
  language_id: Int
  move_learn_method_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_movelearnmethodname"
"""
input movelearnmethodname_sum_order_by {
  id: order_by
  language_id: order_by
  move_learn_method_id: order_by
}

"""aggregate var_pop on columns"""
type movelearnmethodname_var_pop_fields {
  id: Float
  language_id: Float
  move_learn_method_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_movelearnmethodname"
"""
input movelearnmethodname_var_pop_order_by {
  id: order_by
  language_id: order_by
  move_learn_method_id: order_by
}

"""aggregate var_samp on columns"""
type movelearnmethodname_var_samp_fields {
  id: Float
  language_id: Float
  move_learn_method_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_movelearnmethodname"
"""
input movelearnmethodname_var_samp_order_by {
  id: order_by
  language_id: order_by
  move_learn_method_id: order_by
}

"""aggregate variance on columns"""
type movelearnmethodname_variance_fields {
  id: Float
  language_id: Float
  move_learn_method_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_movelearnmethodname"
"""
input movelearnmethodname_variance_order_by {
  id: order_by
  language_id: order_by
  move_learn_method_id: order_by
}

"""
columns and relationships of "pokemon_v2_movemeta"
"""
type movemeta {
  ailment_chance: Int
  crit_rate: Int
  drain: Int
  flinch_chance: Int
  healing: Int
  id: Int!
  max_hits: Int
  max_turns: Int
  min_hits: Int
  min_turns: Int

  """An object relationship"""
  move: move!
  move_id: Int!
  move_meta_ailment_id: Int
  move_meta_category_id: Int

  """An object relationship"""
  movemetaailment: movemetaailment

  """An object relationship"""
  movemetacategory: movemetacategory
  stat_chance: Int
}

"""
aggregated selection of "pokemon_v2_movemeta"
"""
type movemeta_aggregate {
  aggregate: movemeta_aggregate_fields
  nodes: [movemeta!]!
}

input movemeta_aggregate_bool_exp {
  count: movemeta_aggregate_bool_exp_count
}

input movemeta_aggregate_bool_exp_count {
  arguments: [movemeta_select_column!]
  distinct: Boolean
  filter: movemeta_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_movemeta"
"""
type movemeta_aggregate_fields {
  avg: movemeta_avg_fields
  count(columns: [movemeta_select_column!], distinct: Boolean): Int!
  max: movemeta_max_fields
  min: movemeta_min_fields
  stddev: movemeta_stddev_fields
  stddev_pop: movemeta_stddev_pop_fields
  stddev_samp: movemeta_stddev_samp_fields
  sum: movemeta_sum_fields
  var_pop: movemeta_var_pop_fields
  var_samp: movemeta_var_samp_fields
  variance: movemeta_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_movemeta"
"""
input movemeta_aggregate_order_by {
  avg: movemeta_avg_order_by
  count: order_by
  max: movemeta_max_order_by
  min: movemeta_min_order_by
  stddev: movemeta_stddev_order_by
  stddev_pop: movemeta_stddev_pop_order_by
  stddev_samp: movemeta_stddev_samp_order_by
  sum: movemeta_sum_order_by
  var_pop: movemeta_var_pop_order_by
  var_samp: movemeta_var_samp_order_by
  variance: movemeta_variance_order_by
}

"""aggregate avg on columns"""
type movemeta_avg_fields {
  ailment_chance: Float
  crit_rate: Float
  drain: Float
  flinch_chance: Float
  healing: Float
  id: Float
  max_hits: Float
  max_turns: Float
  min_hits: Float
  min_turns: Float
  move_id: Float
  move_meta_ailment_id: Float
  move_meta_category_id: Float
  stat_chance: Float
}

"""
order by avg() on columns of table "pokemon_v2_movemeta"
"""
input movemeta_avg_order_by {
  ailment_chance: order_by
  crit_rate: order_by
  drain: order_by
  flinch_chance: order_by
  healing: order_by
  id: order_by
  max_hits: order_by
  max_turns: order_by
  min_hits: order_by
  min_turns: order_by
  move_id: order_by
  move_meta_ailment_id: order_by
  move_meta_category_id: order_by
  stat_chance: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_movemeta". All fields are combined with a logical 'AND'.
"""
input movemeta_bool_exp {
  _and: [movemeta_bool_exp!]
  _not: movemeta_bool_exp
  _or: [movemeta_bool_exp!]
  ailment_chance: Int_comparison_exp
  crit_rate: Int_comparison_exp
  drain: Int_comparison_exp
  flinch_chance: Int_comparison_exp
  healing: Int_comparison_exp
  id: Int_comparison_exp
  max_hits: Int_comparison_exp
  max_turns: Int_comparison_exp
  min_hits: Int_comparison_exp
  min_turns: Int_comparison_exp
  move: move_bool_exp
  move_id: Int_comparison_exp
  move_meta_ailment_id: Int_comparison_exp
  move_meta_category_id: Int_comparison_exp
  movemetaailment: movemetaailment_bool_exp
  movemetacategory: movemetacategory_bool_exp
  stat_chance: Int_comparison_exp
}

"""aggregate max on columns"""
type movemeta_max_fields {
  ailment_chance: Int
  crit_rate: Int
  drain: Int
  flinch_chance: Int
  healing: Int
  id: Int
  max_hits: Int
  max_turns: Int
  min_hits: Int
  min_turns: Int
  move_id: Int
  move_meta_ailment_id: Int
  move_meta_category_id: Int
  stat_chance: Int
}

"""
order by max() on columns of table "pokemon_v2_movemeta"
"""
input movemeta_max_order_by {
  ailment_chance: order_by
  crit_rate: order_by
  drain: order_by
  flinch_chance: order_by
  healing: order_by
  id: order_by
  max_hits: order_by
  max_turns: order_by
  min_hits: order_by
  min_turns: order_by
  move_id: order_by
  move_meta_ailment_id: order_by
  move_meta_category_id: order_by
  stat_chance: order_by
}

"""aggregate min on columns"""
type movemeta_min_fields {
  ailment_chance: Int
  crit_rate: Int
  drain: Int
  flinch_chance: Int
  healing: Int
  id: Int
  max_hits: Int
  max_turns: Int
  min_hits: Int
  min_turns: Int
  move_id: Int
  move_meta_ailment_id: Int
  move_meta_category_id: Int
  stat_chance: Int
}

"""
order by min() on columns of table "pokemon_v2_movemeta"
"""
input movemeta_min_order_by {
  ailment_chance: order_by
  crit_rate: order_by
  drain: order_by
  flinch_chance: order_by
  healing: order_by
  id: order_by
  max_hits: order_by
  max_turns: order_by
  min_hits: order_by
  min_turns: order_by
  move_id: order_by
  move_meta_ailment_id: order_by
  move_meta_category_id: order_by
  stat_chance: order_by
}

"""Ordering options when selecting data from "pokemon_v2_movemeta"."""
input movemeta_order_by {
  ailment_chance: order_by
  crit_rate: order_by
  drain: order_by
  flinch_chance: order_by
  healing: order_by
  id: order_by
  max_hits: order_by
  max_turns: order_by
  min_hits: order_by
  min_turns: order_by
  move: move_order_by
  move_id: order_by
  move_meta_ailment_id: order_by
  move_meta_category_id: order_by
  movemetaailment: movemetaailment_order_by
  movemetacategory: movemetacategory_order_by
  stat_chance: order_by
}

"""
select columns of table "pokemon_v2_movemeta"
"""
enum movemeta_select_column {
  """column name"""
  ailment_chance

  """column name"""
  crit_rate

  """column name"""
  drain

  """column name"""
  flinch_chance

  """column name"""
  healing

  """column name"""
  id

  """column name"""
  max_hits

  """column name"""
  max_turns

  """column name"""
  min_hits

  """column name"""
  min_turns

  """column name"""
  move_id

  """column name"""
  move_meta_ailment_id

  """column name"""
  move_meta_category_id

  """column name"""
  stat_chance
}

"""aggregate stddev on columns"""
type movemeta_stddev_fields {
  ailment_chance: Float
  crit_rate: Float
  drain: Float
  flinch_chance: Float
  healing: Float
  id: Float
  max_hits: Float
  max_turns: Float
  min_hits: Float
  min_turns: Float
  move_id: Float
  move_meta_ailment_id: Float
  move_meta_category_id: Float
  stat_chance: Float
}

"""
order by stddev() on columns of table "pokemon_v2_movemeta"
"""
input movemeta_stddev_order_by {
  ailment_chance: order_by
  crit_rate: order_by
  drain: order_by
  flinch_chance: order_by
  healing: order_by
  id: order_by
  max_hits: order_by
  max_turns: order_by
  min_hits: order_by
  min_turns: order_by
  move_id: order_by
  move_meta_ailment_id: order_by
  move_meta_category_id: order_by
  stat_chance: order_by
}

"""aggregate stddev_pop on columns"""
type movemeta_stddev_pop_fields {
  ailment_chance: Float
  crit_rate: Float
  drain: Float
  flinch_chance: Float
  healing: Float
  id: Float
  max_hits: Float
  max_turns: Float
  min_hits: Float
  min_turns: Float
  move_id: Float
  move_meta_ailment_id: Float
  move_meta_category_id: Float
  stat_chance: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_movemeta"
"""
input movemeta_stddev_pop_order_by {
  ailment_chance: order_by
  crit_rate: order_by
  drain: order_by
  flinch_chance: order_by
  healing: order_by
  id: order_by
  max_hits: order_by
  max_turns: order_by
  min_hits: order_by
  min_turns: order_by
  move_id: order_by
  move_meta_ailment_id: order_by
  move_meta_category_id: order_by
  stat_chance: order_by
}

"""aggregate stddev_samp on columns"""
type movemeta_stddev_samp_fields {
  ailment_chance: Float
  crit_rate: Float
  drain: Float
  flinch_chance: Float
  healing: Float
  id: Float
  max_hits: Float
  max_turns: Float
  min_hits: Float
  min_turns: Float
  move_id: Float
  move_meta_ailment_id: Float
  move_meta_category_id: Float
  stat_chance: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_movemeta"
"""
input movemeta_stddev_samp_order_by {
  ailment_chance: order_by
  crit_rate: order_by
  drain: order_by
  flinch_chance: order_by
  healing: order_by
  id: order_by
  max_hits: order_by
  max_turns: order_by
  min_hits: order_by
  min_turns: order_by
  move_id: order_by
  move_meta_ailment_id: order_by
  move_meta_category_id: order_by
  stat_chance: order_by
}

"""aggregate sum on columns"""
type movemeta_sum_fields {
  ailment_chance: Int
  crit_rate: Int
  drain: Int
  flinch_chance: Int
  healing: Int
  id: Int
  max_hits: Int
  max_turns: Int
  min_hits: Int
  min_turns: Int
  move_id: Int
  move_meta_ailment_id: Int
  move_meta_category_id: Int
  stat_chance: Int
}

"""
order by sum() on columns of table "pokemon_v2_movemeta"
"""
input movemeta_sum_order_by {
  ailment_chance: order_by
  crit_rate: order_by
  drain: order_by
  flinch_chance: order_by
  healing: order_by
  id: order_by
  max_hits: order_by
  max_turns: order_by
  min_hits: order_by
  min_turns: order_by
  move_id: order_by
  move_meta_ailment_id: order_by
  move_meta_category_id: order_by
  stat_chance: order_by
}

"""aggregate var_pop on columns"""
type movemeta_var_pop_fields {
  ailment_chance: Float
  crit_rate: Float
  drain: Float
  flinch_chance: Float
  healing: Float
  id: Float
  max_hits: Float
  max_turns: Float
  min_hits: Float
  min_turns: Float
  move_id: Float
  move_meta_ailment_id: Float
  move_meta_category_id: Float
  stat_chance: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_movemeta"
"""
input movemeta_var_pop_order_by {
  ailment_chance: order_by
  crit_rate: order_by
  drain: order_by
  flinch_chance: order_by
  healing: order_by
  id: order_by
  max_hits: order_by
  max_turns: order_by
  min_hits: order_by
  min_turns: order_by
  move_id: order_by
  move_meta_ailment_id: order_by
  move_meta_category_id: order_by
  stat_chance: order_by
}

"""aggregate var_samp on columns"""
type movemeta_var_samp_fields {
  ailment_chance: Float
  crit_rate: Float
  drain: Float
  flinch_chance: Float
  healing: Float
  id: Float
  max_hits: Float
  max_turns: Float
  min_hits: Float
  min_turns: Float
  move_id: Float
  move_meta_ailment_id: Float
  move_meta_category_id: Float
  stat_chance: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_movemeta"
"""
input movemeta_var_samp_order_by {
  ailment_chance: order_by
  crit_rate: order_by
  drain: order_by
  flinch_chance: order_by
  healing: order_by
  id: order_by
  max_hits: order_by
  max_turns: order_by
  min_hits: order_by
  min_turns: order_by
  move_id: order_by
  move_meta_ailment_id: order_by
  move_meta_category_id: order_by
  stat_chance: order_by
}

"""aggregate variance on columns"""
type movemeta_variance_fields {
  ailment_chance: Float
  crit_rate: Float
  drain: Float
  flinch_chance: Float
  healing: Float
  id: Float
  max_hits: Float
  max_turns: Float
  min_hits: Float
  min_turns: Float
  move_id: Float
  move_meta_ailment_id: Float
  move_meta_category_id: Float
  stat_chance: Float
}

"""
order by variance() on columns of table "pokemon_v2_movemeta"
"""
input movemeta_variance_order_by {
  ailment_chance: order_by
  crit_rate: order_by
  drain: order_by
  flinch_chance: order_by
  healing: order_by
  id: order_by
  max_hits: order_by
  max_turns: order_by
  min_hits: order_by
  min_turns: order_by
  move_id: order_by
  move_meta_ailment_id: order_by
  move_meta_category_id: order_by
  stat_chance: order_by
}

"""
columns and relationships of "pokemon_v2_movemetaailment"
"""
type movemetaailment {
  id: Int!

  """An array relationship"""
  movemeta(
    """distinct select on columns"""
    distinct_on: [movemeta_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movemeta_order_by!]

    """filter the rows returned"""
    where: movemeta_bool_exp
  ): [movemeta!]!

  """An aggregate relationship"""
  movemeta_aggregate(
    """distinct select on columns"""
    distinct_on: [movemeta_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movemeta_order_by!]

    """filter the rows returned"""
    where: movemeta_bool_exp
  ): movemeta_aggregate!

  """An array relationship"""
  movemetaailmentnames(
    """distinct select on columns"""
    distinct_on: [movemetaailmentname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movemetaailmentname_order_by!]

    """filter the rows returned"""
    where: movemetaailmentname_bool_exp
  ): [movemetaailmentname!]!

  """An aggregate relationship"""
  movemetaailmentnames_aggregate(
    """distinct select on columns"""
    distinct_on: [movemetaailmentname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movemetaailmentname_order_by!]

    """filter the rows returned"""
    where: movemetaailmentname_bool_exp
  ): movemetaailmentname_aggregate!
  name: String!
}

"""
aggregated selection of "pokemon_v2_movemetaailment"
"""
type movemetaailment_aggregate {
  aggregate: movemetaailment_aggregate_fields
  nodes: [movemetaailment!]!
}

"""
aggregate fields of "pokemon_v2_movemetaailment"
"""
type movemetaailment_aggregate_fields {
  avg: movemetaailment_avg_fields
  count(columns: [movemetaailment_select_column!], distinct: Boolean): Int!
  max: movemetaailment_max_fields
  min: movemetaailment_min_fields
  stddev: movemetaailment_stddev_fields
  stddev_pop: movemetaailment_stddev_pop_fields
  stddev_samp: movemetaailment_stddev_samp_fields
  sum: movemetaailment_sum_fields
  var_pop: movemetaailment_var_pop_fields
  var_samp: movemetaailment_var_samp_fields
  variance: movemetaailment_variance_fields
}

"""aggregate avg on columns"""
type movemetaailment_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "pokemon_v2_movemetaailment". All fields are combined with a logical 'AND'.
"""
input movemetaailment_bool_exp {
  _and: [movemetaailment_bool_exp!]
  _not: movemetaailment_bool_exp
  _or: [movemetaailment_bool_exp!]
  id: Int_comparison_exp
  movemeta: movemeta_bool_exp
  movemeta_aggregate: movemeta_aggregate_bool_exp
  movemetaailmentnames: movemetaailmentname_bool_exp
  movemetaailmentnames_aggregate: movemetaailmentname_aggregate_bool_exp
  name: String_comparison_exp
}

"""aggregate max on columns"""
type movemetaailment_max_fields {
  id: Int
  name: String
}

"""aggregate min on columns"""
type movemetaailment_min_fields {
  id: Int
  name: String
}

"""
Ordering options when selecting data from "pokemon_v2_movemetaailment".
"""
input movemetaailment_order_by {
  id: order_by
  movemeta_aggregate: movemeta_aggregate_order_by
  movemetaailmentnames_aggregate: movemetaailmentname_aggregate_order_by
  name: order_by
}

"""
select columns of table "pokemon_v2_movemetaailment"
"""
enum movemetaailment_select_column {
  """column name"""
  id

  """column name"""
  name
}

"""aggregate stddev on columns"""
type movemetaailment_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type movemetaailment_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type movemetaailment_stddev_samp_fields {
  id: Float
}

"""aggregate sum on columns"""
type movemetaailment_sum_fields {
  id: Int
}

"""aggregate var_pop on columns"""
type movemetaailment_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type movemetaailment_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type movemetaailment_variance_fields {
  id: Float
}

"""
columns and relationships of "pokemon_v2_movemetaailmentname"
"""
type movemetaailmentname {
  id: Int!

  """An object relationship"""
  language: language
  language_id: Int
  move_meta_ailment_id: Int

  """An object relationship"""
  movemetaailment: movemetaailment
  name: String!
}

"""
aggregated selection of "pokemon_v2_movemetaailmentname"
"""
type movemetaailmentname_aggregate {
  aggregate: movemetaailmentname_aggregate_fields
  nodes: [movemetaailmentname!]!
}

input movemetaailmentname_aggregate_bool_exp {
  count: movemetaailmentname_aggregate_bool_exp_count
}

input movemetaailmentname_aggregate_bool_exp_count {
  arguments: [movemetaailmentname_select_column!]
  distinct: Boolean
  filter: movemetaailmentname_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_movemetaailmentname"
"""
type movemetaailmentname_aggregate_fields {
  avg: movemetaailmentname_avg_fields
  count(columns: [movemetaailmentname_select_column!], distinct: Boolean): Int!
  max: movemetaailmentname_max_fields
  min: movemetaailmentname_min_fields
  stddev: movemetaailmentname_stddev_fields
  stddev_pop: movemetaailmentname_stddev_pop_fields
  stddev_samp: movemetaailmentname_stddev_samp_fields
  sum: movemetaailmentname_sum_fields
  var_pop: movemetaailmentname_var_pop_fields
  var_samp: movemetaailmentname_var_samp_fields
  variance: movemetaailmentname_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_movemetaailmentname"
"""
input movemetaailmentname_aggregate_order_by {
  avg: movemetaailmentname_avg_order_by
  count: order_by
  max: movemetaailmentname_max_order_by
  min: movemetaailmentname_min_order_by
  stddev: movemetaailmentname_stddev_order_by
  stddev_pop: movemetaailmentname_stddev_pop_order_by
  stddev_samp: movemetaailmentname_stddev_samp_order_by
  sum: movemetaailmentname_sum_order_by
  var_pop: movemetaailmentname_var_pop_order_by
  var_samp: movemetaailmentname_var_samp_order_by
  variance: movemetaailmentname_variance_order_by
}

"""aggregate avg on columns"""
type movemetaailmentname_avg_fields {
  id: Float
  language_id: Float
  move_meta_ailment_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_movemetaailmentname"
"""
input movemetaailmentname_avg_order_by {
  id: order_by
  language_id: order_by
  move_meta_ailment_id: order_by
}

"""
Boolean expression to filter rows from the table
"pokemon_v2_movemetaailmentname". All fields are combined with a logical 'AND'.
"""
input movemetaailmentname_bool_exp {
  _and: [movemetaailmentname_bool_exp!]
  _not: movemetaailmentname_bool_exp
  _or: [movemetaailmentname_bool_exp!]
  id: Int_comparison_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
  move_meta_ailment_id: Int_comparison_exp
  movemetaailment: movemetaailment_bool_exp
  name: String_comparison_exp
}

"""aggregate max on columns"""
type movemetaailmentname_max_fields {
  id: Int
  language_id: Int
  move_meta_ailment_id: Int
  name: String
}

"""
order by max() on columns of table "pokemon_v2_movemetaailmentname"
"""
input movemetaailmentname_max_order_by {
  id: order_by
  language_id: order_by
  move_meta_ailment_id: order_by
  name: order_by
}

"""aggregate min on columns"""
type movemetaailmentname_min_fields {
  id: Int
  language_id: Int
  move_meta_ailment_id: Int
  name: String
}

"""
order by min() on columns of table "pokemon_v2_movemetaailmentname"
"""
input movemetaailmentname_min_order_by {
  id: order_by
  language_id: order_by
  move_meta_ailment_id: order_by
  name: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_movemetaailmentname".
"""
input movemetaailmentname_order_by {
  id: order_by
  language: language_order_by
  language_id: order_by
  move_meta_ailment_id: order_by
  movemetaailment: movemetaailment_order_by
  name: order_by
}

"""
select columns of table "pokemon_v2_movemetaailmentname"
"""
enum movemetaailmentname_select_column {
  """column name"""
  id

  """column name"""
  language_id

  """column name"""
  move_meta_ailment_id

  """column name"""
  name
}

"""aggregate stddev on columns"""
type movemetaailmentname_stddev_fields {
  id: Float
  language_id: Float
  move_meta_ailment_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_movemetaailmentname"
"""
input movemetaailmentname_stddev_order_by {
  id: order_by
  language_id: order_by
  move_meta_ailment_id: order_by
}

"""aggregate stddev_pop on columns"""
type movemetaailmentname_stddev_pop_fields {
  id: Float
  language_id: Float
  move_meta_ailment_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_movemetaailmentname"
"""
input movemetaailmentname_stddev_pop_order_by {
  id: order_by
  language_id: order_by
  move_meta_ailment_id: order_by
}

"""aggregate stddev_samp on columns"""
type movemetaailmentname_stddev_samp_fields {
  id: Float
  language_id: Float
  move_meta_ailment_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_movemetaailmentname"
"""
input movemetaailmentname_stddev_samp_order_by {
  id: order_by
  language_id: order_by
  move_meta_ailment_id: order_by
}

"""aggregate sum on columns"""
type movemetaailmentname_sum_fields {
  id: Int
  language_id: Int
  move_meta_ailment_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_movemetaailmentname"
"""
input movemetaailmentname_sum_order_by {
  id: order_by
  language_id: order_by
  move_meta_ailment_id: order_by
}

"""aggregate var_pop on columns"""
type movemetaailmentname_var_pop_fields {
  id: Float
  language_id: Float
  move_meta_ailment_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_movemetaailmentname"
"""
input movemetaailmentname_var_pop_order_by {
  id: order_by
  language_id: order_by
  move_meta_ailment_id: order_by
}

"""aggregate var_samp on columns"""
type movemetaailmentname_var_samp_fields {
  id: Float
  language_id: Float
  move_meta_ailment_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_movemetaailmentname"
"""
input movemetaailmentname_var_samp_order_by {
  id: order_by
  language_id: order_by
  move_meta_ailment_id: order_by
}

"""aggregate variance on columns"""
type movemetaailmentname_variance_fields {
  id: Float
  language_id: Float
  move_meta_ailment_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_movemetaailmentname"
"""
input movemetaailmentname_variance_order_by {
  id: order_by
  language_id: order_by
  move_meta_ailment_id: order_by
}

"""
columns and relationships of "pokemon_v2_movemetacategory"
"""
type movemetacategory {
  id: Int!

  """An array relationship"""
  movemeta(
    """distinct select on columns"""
    distinct_on: [movemeta_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movemeta_order_by!]

    """filter the rows returned"""
    where: movemeta_bool_exp
  ): [movemeta!]!

  """An aggregate relationship"""
  movemeta_aggregate(
    """distinct select on columns"""
    distinct_on: [movemeta_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movemeta_order_by!]

    """filter the rows returned"""
    where: movemeta_bool_exp
  ): movemeta_aggregate!

  """An array relationship"""
  movemetacategorydescriptions(
    """distinct select on columns"""
    distinct_on: [movemetacategorydescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movemetacategorydescription_order_by!]

    """filter the rows returned"""
    where: movemetacategorydescription_bool_exp
  ): [movemetacategorydescription!]!

  """An aggregate relationship"""
  movemetacategorydescriptions_aggregate(
    """distinct select on columns"""
    distinct_on: [movemetacategorydescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movemetacategorydescription_order_by!]

    """filter the rows returned"""
    where: movemetacategorydescription_bool_exp
  ): movemetacategorydescription_aggregate!
  name: String!
}

"""
aggregated selection of "pokemon_v2_movemetacategory"
"""
type movemetacategory_aggregate {
  aggregate: movemetacategory_aggregate_fields
  nodes: [movemetacategory!]!
}

"""
aggregate fields of "pokemon_v2_movemetacategory"
"""
type movemetacategory_aggregate_fields {
  avg: movemetacategory_avg_fields
  count(columns: [movemetacategory_select_column!], distinct: Boolean): Int!
  max: movemetacategory_max_fields
  min: movemetacategory_min_fields
  stddev: movemetacategory_stddev_fields
  stddev_pop: movemetacategory_stddev_pop_fields
  stddev_samp: movemetacategory_stddev_samp_fields
  sum: movemetacategory_sum_fields
  var_pop: movemetacategory_var_pop_fields
  var_samp: movemetacategory_var_samp_fields
  variance: movemetacategory_variance_fields
}

"""aggregate avg on columns"""
type movemetacategory_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "pokemon_v2_movemetacategory".
All fields are combined with a logical 'AND'.
"""
input movemetacategory_bool_exp {
  _and: [movemetacategory_bool_exp!]
  _not: movemetacategory_bool_exp
  _or: [movemetacategory_bool_exp!]
  id: Int_comparison_exp
  movemeta: movemeta_bool_exp
  movemeta_aggregate: movemeta_aggregate_bool_exp
  movemetacategorydescriptions: movemetacategorydescription_bool_exp
  movemetacategorydescriptions_aggregate: movemetacategorydescription_aggregate_bool_exp
  name: String_comparison_exp
}

"""aggregate max on columns"""
type movemetacategory_max_fields {
  id: Int
  name: String
}

"""aggregate min on columns"""
type movemetacategory_min_fields {
  id: Int
  name: String
}

"""
Ordering options when selecting data from "pokemon_v2_movemetacategory".
"""
input movemetacategory_order_by {
  id: order_by
  movemeta_aggregate: movemeta_aggregate_order_by
  movemetacategorydescriptions_aggregate: movemetacategorydescription_aggregate_order_by
  name: order_by
}

"""
select columns of table "pokemon_v2_movemetacategory"
"""
enum movemetacategory_select_column {
  """column name"""
  id

  """column name"""
  name
}

"""aggregate stddev on columns"""
type movemetacategory_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type movemetacategory_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type movemetacategory_stddev_samp_fields {
  id: Float
}

"""aggregate sum on columns"""
type movemetacategory_sum_fields {
  id: Int
}

"""aggregate var_pop on columns"""
type movemetacategory_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type movemetacategory_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type movemetacategory_variance_fields {
  id: Float
}

"""
columns and relationships of "pokemon_v2_movemetacategorydescription"
"""
type movemetacategorydescription {
  description: String!
  id: Int!

  """An object relationship"""
  language: language
  language_id: Int
  move_meta_category_id: Int

  """An object relationship"""
  movemetacategory: movemetacategory
}

"""
aggregated selection of "pokemon_v2_movemetacategorydescription"
"""
type movemetacategorydescription_aggregate {
  aggregate: movemetacategorydescription_aggregate_fields
  nodes: [movemetacategorydescription!]!
}

input movemetacategorydescription_aggregate_bool_exp {
  count: movemetacategorydescription_aggregate_bool_exp_count
}

input movemetacategorydescription_aggregate_bool_exp_count {
  arguments: [movemetacategorydescription_select_column!]
  distinct: Boolean
  filter: movemetacategorydescription_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_movemetacategorydescription"
"""
type movemetacategorydescription_aggregate_fields {
  avg: movemetacategorydescription_avg_fields
  count(columns: [movemetacategorydescription_select_column!], distinct: Boolean): Int!
  max: movemetacategorydescription_max_fields
  min: movemetacategorydescription_min_fields
  stddev: movemetacategorydescription_stddev_fields
  stddev_pop: movemetacategorydescription_stddev_pop_fields
  stddev_samp: movemetacategorydescription_stddev_samp_fields
  sum: movemetacategorydescription_sum_fields
  var_pop: movemetacategorydescription_var_pop_fields
  var_samp: movemetacategorydescription_var_samp_fields
  variance: movemetacategorydescription_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_movemetacategorydescription"
"""
input movemetacategorydescription_aggregate_order_by {
  avg: movemetacategorydescription_avg_order_by
  count: order_by
  max: movemetacategorydescription_max_order_by
  min: movemetacategorydescription_min_order_by
  stddev: movemetacategorydescription_stddev_order_by
  stddev_pop: movemetacategorydescription_stddev_pop_order_by
  stddev_samp: movemetacategorydescription_stddev_samp_order_by
  sum: movemetacategorydescription_sum_order_by
  var_pop: movemetacategorydescription_var_pop_order_by
  var_samp: movemetacategorydescription_var_samp_order_by
  variance: movemetacategorydescription_variance_order_by
}

"""aggregate avg on columns"""
type movemetacategorydescription_avg_fields {
  id: Float
  language_id: Float
  move_meta_category_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_movemetacategorydescription"
"""
input movemetacategorydescription_avg_order_by {
  id: order_by
  language_id: order_by
  move_meta_category_id: order_by
}

"""
Boolean expression to filter rows from the table
"pokemon_v2_movemetacategorydescription". All fields are combined with a logical 'AND'.
"""
input movemetacategorydescription_bool_exp {
  _and: [movemetacategorydescription_bool_exp!]
  _not: movemetacategorydescription_bool_exp
  _or: [movemetacategorydescription_bool_exp!]
  description: String_comparison_exp
  id: Int_comparison_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
  move_meta_category_id: Int_comparison_exp
  movemetacategory: movemetacategory_bool_exp
}

"""aggregate max on columns"""
type movemetacategorydescription_max_fields {
  description: String
  id: Int
  language_id: Int
  move_meta_category_id: Int
}

"""
order by max() on columns of table "pokemon_v2_movemetacategorydescription"
"""
input movemetacategorydescription_max_order_by {
  description: order_by
  id: order_by
  language_id: order_by
  move_meta_category_id: order_by
}

"""aggregate min on columns"""
type movemetacategorydescription_min_fields {
  description: String
  id: Int
  language_id: Int
  move_meta_category_id: Int
}

"""
order by min() on columns of table "pokemon_v2_movemetacategorydescription"
"""
input movemetacategorydescription_min_order_by {
  description: order_by
  id: order_by
  language_id: order_by
  move_meta_category_id: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_movemetacategorydescription".
"""
input movemetacategorydescription_order_by {
  description: order_by
  id: order_by
  language: language_order_by
  language_id: order_by
  move_meta_category_id: order_by
  movemetacategory: movemetacategory_order_by
}

"""
select columns of table "pokemon_v2_movemetacategorydescription"
"""
enum movemetacategorydescription_select_column {
  """column name"""
  description

  """column name"""
  id

  """column name"""
  language_id

  """column name"""
  move_meta_category_id
}

"""aggregate stddev on columns"""
type movemetacategorydescription_stddev_fields {
  id: Float
  language_id: Float
  move_meta_category_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_movemetacategorydescription"
"""
input movemetacategorydescription_stddev_order_by {
  id: order_by
  language_id: order_by
  move_meta_category_id: order_by
}

"""aggregate stddev_pop on columns"""
type movemetacategorydescription_stddev_pop_fields {
  id: Float
  language_id: Float
  move_meta_category_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_movemetacategorydescription"
"""
input movemetacategorydescription_stddev_pop_order_by {
  id: order_by
  language_id: order_by
  move_meta_category_id: order_by
}

"""aggregate stddev_samp on columns"""
type movemetacategorydescription_stddev_samp_fields {
  id: Float
  language_id: Float
  move_meta_category_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_movemetacategorydescription"
"""
input movemetacategorydescription_stddev_samp_order_by {
  id: order_by
  language_id: order_by
  move_meta_category_id: order_by
}

"""aggregate sum on columns"""
type movemetacategorydescription_sum_fields {
  id: Int
  language_id: Int
  move_meta_category_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_movemetacategorydescription"
"""
input movemetacategorydescription_sum_order_by {
  id: order_by
  language_id: order_by
  move_meta_category_id: order_by
}

"""aggregate var_pop on columns"""
type movemetacategorydescription_var_pop_fields {
  id: Float
  language_id: Float
  move_meta_category_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_movemetacategorydescription"
"""
input movemetacategorydescription_var_pop_order_by {
  id: order_by
  language_id: order_by
  move_meta_category_id: order_by
}

"""aggregate var_samp on columns"""
type movemetacategorydescription_var_samp_fields {
  id: Float
  language_id: Float
  move_meta_category_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_movemetacategorydescription"
"""
input movemetacategorydescription_var_samp_order_by {
  id: order_by
  language_id: order_by
  move_meta_category_id: order_by
}

"""aggregate variance on columns"""
type movemetacategorydescription_variance_fields {
  id: Float
  language_id: Float
  move_meta_category_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_movemetacategorydescription"
"""
input movemetacategorydescription_variance_order_by {
  id: order_by
  language_id: order_by
  move_meta_category_id: order_by
}

"""
columns and relationships of "pokemon_v2_movemetastatchange"
"""
type movemetastatchange {
  change: Int!
  id: Int!

  """An object relationship"""
  move: move
  move_id: Int

  """An object relationship"""
  stat: stat
  stat_id: Int
}

"""
aggregated selection of "pokemon_v2_movemetastatchange"
"""
type movemetastatchange_aggregate {
  aggregate: movemetastatchange_aggregate_fields
  nodes: [movemetastatchange!]!
}

input movemetastatchange_aggregate_bool_exp {
  count: movemetastatchange_aggregate_bool_exp_count
}

input movemetastatchange_aggregate_bool_exp_count {
  arguments: [movemetastatchange_select_column!]
  distinct: Boolean
  filter: movemetastatchange_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_movemetastatchange"
"""
type movemetastatchange_aggregate_fields {
  avg: movemetastatchange_avg_fields
  count(columns: [movemetastatchange_select_column!], distinct: Boolean): Int!
  max: movemetastatchange_max_fields
  min: movemetastatchange_min_fields
  stddev: movemetastatchange_stddev_fields
  stddev_pop: movemetastatchange_stddev_pop_fields
  stddev_samp: movemetastatchange_stddev_samp_fields
  sum: movemetastatchange_sum_fields
  var_pop: movemetastatchange_var_pop_fields
  var_samp: movemetastatchange_var_samp_fields
  variance: movemetastatchange_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_movemetastatchange"
"""
input movemetastatchange_aggregate_order_by {
  avg: movemetastatchange_avg_order_by
  count: order_by
  max: movemetastatchange_max_order_by
  min: movemetastatchange_min_order_by
  stddev: movemetastatchange_stddev_order_by
  stddev_pop: movemetastatchange_stddev_pop_order_by
  stddev_samp: movemetastatchange_stddev_samp_order_by
  sum: movemetastatchange_sum_order_by
  var_pop: movemetastatchange_var_pop_order_by
  var_samp: movemetastatchange_var_samp_order_by
  variance: movemetastatchange_variance_order_by
}

"""aggregate avg on columns"""
type movemetastatchange_avg_fields {
  change: Float
  id: Float
  move_id: Float
  stat_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_movemetastatchange"
"""
input movemetastatchange_avg_order_by {
  change: order_by
  id: order_by
  move_id: order_by
  stat_id: order_by
}

"""
Boolean expression to filter rows from the table
"pokemon_v2_movemetastatchange". All fields are combined with a logical 'AND'.
"""
input movemetastatchange_bool_exp {
  _and: [movemetastatchange_bool_exp!]
  _not: movemetastatchange_bool_exp
  _or: [movemetastatchange_bool_exp!]
  change: Int_comparison_exp
  id: Int_comparison_exp
  move: move_bool_exp
  move_id: Int_comparison_exp
  stat: stat_bool_exp
  stat_id: Int_comparison_exp
}

"""aggregate max on columns"""
type movemetastatchange_max_fields {
  change: Int
  id: Int
  move_id: Int
  stat_id: Int
}

"""
order by max() on columns of table "pokemon_v2_movemetastatchange"
"""
input movemetastatchange_max_order_by {
  change: order_by
  id: order_by
  move_id: order_by
  stat_id: order_by
}

"""aggregate min on columns"""
type movemetastatchange_min_fields {
  change: Int
  id: Int
  move_id: Int
  stat_id: Int
}

"""
order by min() on columns of table "pokemon_v2_movemetastatchange"
"""
input movemetastatchange_min_order_by {
  change: order_by
  id: order_by
  move_id: order_by
  stat_id: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_movemetastatchange".
"""
input movemetastatchange_order_by {
  change: order_by
  id: order_by
  move: move_order_by
  move_id: order_by
  stat: stat_order_by
  stat_id: order_by
}

"""
select columns of table "pokemon_v2_movemetastatchange"
"""
enum movemetastatchange_select_column {
  """column name"""
  change

  """column name"""
  id

  """column name"""
  move_id

  """column name"""
  stat_id
}

"""aggregate stddev on columns"""
type movemetastatchange_stddev_fields {
  change: Float
  id: Float
  move_id: Float
  stat_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_movemetastatchange"
"""
input movemetastatchange_stddev_order_by {
  change: order_by
  id: order_by
  move_id: order_by
  stat_id: order_by
}

"""aggregate stddev_pop on columns"""
type movemetastatchange_stddev_pop_fields {
  change: Float
  id: Float
  move_id: Float
  stat_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_movemetastatchange"
"""
input movemetastatchange_stddev_pop_order_by {
  change: order_by
  id: order_by
  move_id: order_by
  stat_id: order_by
}

"""aggregate stddev_samp on columns"""
type movemetastatchange_stddev_samp_fields {
  change: Float
  id: Float
  move_id: Float
  stat_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_movemetastatchange"
"""
input movemetastatchange_stddev_samp_order_by {
  change: order_by
  id: order_by
  move_id: order_by
  stat_id: order_by
}

"""aggregate sum on columns"""
type movemetastatchange_sum_fields {
  change: Int
  id: Int
  move_id: Int
  stat_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_movemetastatchange"
"""
input movemetastatchange_sum_order_by {
  change: order_by
  id: order_by
  move_id: order_by
  stat_id: order_by
}

"""aggregate var_pop on columns"""
type movemetastatchange_var_pop_fields {
  change: Float
  id: Float
  move_id: Float
  stat_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_movemetastatchange"
"""
input movemetastatchange_var_pop_order_by {
  change: order_by
  id: order_by
  move_id: order_by
  stat_id: order_by
}

"""aggregate var_samp on columns"""
type movemetastatchange_var_samp_fields {
  change: Float
  id: Float
  move_id: Float
  stat_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_movemetastatchange"
"""
input movemetastatchange_var_samp_order_by {
  change: order_by
  id: order_by
  move_id: order_by
  stat_id: order_by
}

"""aggregate variance on columns"""
type movemetastatchange_variance_fields {
  change: Float
  id: Float
  move_id: Float
  stat_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_movemetastatchange"
"""
input movemetastatchange_variance_order_by {
  change: order_by
  id: order_by
  move_id: order_by
  stat_id: order_by
}

"""
columns and relationships of "pokemon_v2_movename"
"""
type movename {
  id: Int!

  """An object relationship"""
  language: language
  language_id: Int

  """An object relationship"""
  move: move
  move_id: Int
  name: String!
}

"""
aggregated selection of "pokemon_v2_movename"
"""
type movename_aggregate {
  aggregate: movename_aggregate_fields
  nodes: [movename!]!
}

input movename_aggregate_bool_exp {
  count: movename_aggregate_bool_exp_count
}

input movename_aggregate_bool_exp_count {
  arguments: [movename_select_column!]
  distinct: Boolean
  filter: movename_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_movename"
"""
type movename_aggregate_fields {
  avg: movename_avg_fields
  count(columns: [movename_select_column!], distinct: Boolean): Int!
  max: movename_max_fields
  min: movename_min_fields
  stddev: movename_stddev_fields
  stddev_pop: movename_stddev_pop_fields
  stddev_samp: movename_stddev_samp_fields
  sum: movename_sum_fields
  var_pop: movename_var_pop_fields
  var_samp: movename_var_samp_fields
  variance: movename_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_movename"
"""
input movename_aggregate_order_by {
  avg: movename_avg_order_by
  count: order_by
  max: movename_max_order_by
  min: movename_min_order_by
  stddev: movename_stddev_order_by
  stddev_pop: movename_stddev_pop_order_by
  stddev_samp: movename_stddev_samp_order_by
  sum: movename_sum_order_by
  var_pop: movename_var_pop_order_by
  var_samp: movename_var_samp_order_by
  variance: movename_variance_order_by
}

"""aggregate avg on columns"""
type movename_avg_fields {
  id: Float
  language_id: Float
  move_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_movename"
"""
input movename_avg_order_by {
  id: order_by
  language_id: order_by
  move_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_movename". All fields are combined with a logical 'AND'.
"""
input movename_bool_exp {
  _and: [movename_bool_exp!]
  _not: movename_bool_exp
  _or: [movename_bool_exp!]
  id: Int_comparison_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
  move: move_bool_exp
  move_id: Int_comparison_exp
  name: String_comparison_exp
}

"""aggregate max on columns"""
type movename_max_fields {
  id: Int
  language_id: Int
  move_id: Int
  name: String
}

"""
order by max() on columns of table "pokemon_v2_movename"
"""
input movename_max_order_by {
  id: order_by
  language_id: order_by
  move_id: order_by
  name: order_by
}

"""aggregate min on columns"""
type movename_min_fields {
  id: Int
  language_id: Int
  move_id: Int
  name: String
}

"""
order by min() on columns of table "pokemon_v2_movename"
"""
input movename_min_order_by {
  id: order_by
  language_id: order_by
  move_id: order_by
  name: order_by
}

"""Ordering options when selecting data from "pokemon_v2_movename"."""
input movename_order_by {
  id: order_by
  language: language_order_by
  language_id: order_by
  move: move_order_by
  move_id: order_by
  name: order_by
}

"""
select columns of table "pokemon_v2_movename"
"""
enum movename_select_column {
  """column name"""
  id

  """column name"""
  language_id

  """column name"""
  move_id

  """column name"""
  name
}

"""aggregate stddev on columns"""
type movename_stddev_fields {
  id: Float
  language_id: Float
  move_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_movename"
"""
input movename_stddev_order_by {
  id: order_by
  language_id: order_by
  move_id: order_by
}

"""aggregate stddev_pop on columns"""
type movename_stddev_pop_fields {
  id: Float
  language_id: Float
  move_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_movename"
"""
input movename_stddev_pop_order_by {
  id: order_by
  language_id: order_by
  move_id: order_by
}

"""aggregate stddev_samp on columns"""
type movename_stddev_samp_fields {
  id: Float
  language_id: Float
  move_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_movename"
"""
input movename_stddev_samp_order_by {
  id: order_by
  language_id: order_by
  move_id: order_by
}

"""aggregate sum on columns"""
type movename_sum_fields {
  id: Int
  language_id: Int
  move_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_movename"
"""
input movename_sum_order_by {
  id: order_by
  language_id: order_by
  move_id: order_by
}

"""aggregate var_pop on columns"""
type movename_var_pop_fields {
  id: Float
  language_id: Float
  move_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_movename"
"""
input movename_var_pop_order_by {
  id: order_by
  language_id: order_by
  move_id: order_by
}

"""aggregate var_samp on columns"""
type movename_var_samp_fields {
  id: Float
  language_id: Float
  move_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_movename"
"""
input movename_var_samp_order_by {
  id: order_by
  language_id: order_by
  move_id: order_by
}

"""aggregate variance on columns"""
type movename_variance_fields {
  id: Float
  language_id: Float
  move_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_movename"
"""
input movename_variance_order_by {
  id: order_by
  language_id: order_by
  move_id: order_by
}

"""
columns and relationships of "pokemon_v2_movetarget"
"""
type movetarget {
  id: Int!

  """An array relationship"""
  moves(
    """distinct select on columns"""
    distinct_on: [move_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [move_order_by!]

    """filter the rows returned"""
    where: move_bool_exp
  ): [move!]!

  """An aggregate relationship"""
  moves_aggregate(
    """distinct select on columns"""
    distinct_on: [move_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [move_order_by!]

    """filter the rows returned"""
    where: move_bool_exp
  ): move_aggregate!

  """An array relationship"""
  movetargetdescriptions(
    """distinct select on columns"""
    distinct_on: [movetargetdescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movetargetdescription_order_by!]

    """filter the rows returned"""
    where: movetargetdescription_bool_exp
  ): [movetargetdescription!]!

  """An aggregate relationship"""
  movetargetdescriptions_aggregate(
    """distinct select on columns"""
    distinct_on: [movetargetdescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movetargetdescription_order_by!]

    """filter the rows returned"""
    where: movetargetdescription_bool_exp
  ): movetargetdescription_aggregate!

  """An array relationship"""
  movetargetnames(
    """distinct select on columns"""
    distinct_on: [movetargetname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movetargetname_order_by!]

    """filter the rows returned"""
    where: movetargetname_bool_exp
  ): [movetargetname!]!

  """An aggregate relationship"""
  movetargetnames_aggregate(
    """distinct select on columns"""
    distinct_on: [movetargetname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movetargetname_order_by!]

    """filter the rows returned"""
    where: movetargetname_bool_exp
  ): movetargetname_aggregate!
  name: String!
}

"""
aggregated selection of "pokemon_v2_movetarget"
"""
type movetarget_aggregate {
  aggregate: movetarget_aggregate_fields
  nodes: [movetarget!]!
}

"""
aggregate fields of "pokemon_v2_movetarget"
"""
type movetarget_aggregate_fields {
  avg: movetarget_avg_fields
  count(columns: [movetarget_select_column!], distinct: Boolean): Int!
  max: movetarget_max_fields
  min: movetarget_min_fields
  stddev: movetarget_stddev_fields
  stddev_pop: movetarget_stddev_pop_fields
  stddev_samp: movetarget_stddev_samp_fields
  sum: movetarget_sum_fields
  var_pop: movetarget_var_pop_fields
  var_samp: movetarget_var_samp_fields
  variance: movetarget_variance_fields
}

"""aggregate avg on columns"""
type movetarget_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "pokemon_v2_movetarget". All fields are combined with a logical 'AND'.
"""
input movetarget_bool_exp {
  _and: [movetarget_bool_exp!]
  _not: movetarget_bool_exp
  _or: [movetarget_bool_exp!]
  id: Int_comparison_exp
  moves: move_bool_exp
  moves_aggregate: move_aggregate_bool_exp
  movetargetdescriptions: movetargetdescription_bool_exp
  movetargetdescriptions_aggregate: movetargetdescription_aggregate_bool_exp
  movetargetnames: movetargetname_bool_exp
  movetargetnames_aggregate: movetargetname_aggregate_bool_exp
  name: String_comparison_exp
}

"""aggregate max on columns"""
type movetarget_max_fields {
  id: Int
  name: String
}

"""aggregate min on columns"""
type movetarget_min_fields {
  id: Int
  name: String
}

"""Ordering options when selecting data from "pokemon_v2_movetarget"."""
input movetarget_order_by {
  id: order_by
  moves_aggregate: move_aggregate_order_by
  movetargetdescriptions_aggregate: movetargetdescription_aggregate_order_by
  movetargetnames_aggregate: movetargetname_aggregate_order_by
  name: order_by
}

"""
select columns of table "pokemon_v2_movetarget"
"""
enum movetarget_select_column {
  """column name"""
  id

  """column name"""
  name
}

"""aggregate stddev on columns"""
type movetarget_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type movetarget_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type movetarget_stddev_samp_fields {
  id: Float
}

"""aggregate sum on columns"""
type movetarget_sum_fields {
  id: Int
}

"""aggregate var_pop on columns"""
type movetarget_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type movetarget_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type movetarget_variance_fields {
  id: Float
}

"""
columns and relationships of "pokemon_v2_movetargetdescription"
"""
type movetargetdescription {
  description: String!
  id: Int!

  """An object relationship"""
  language: language
  language_id: Int
  move_target_id: Int

  """An object relationship"""
  movetarget: movetarget
}

"""
aggregated selection of "pokemon_v2_movetargetdescription"
"""
type movetargetdescription_aggregate {
  aggregate: movetargetdescription_aggregate_fields
  nodes: [movetargetdescription!]!
}

input movetargetdescription_aggregate_bool_exp {
  count: movetargetdescription_aggregate_bool_exp_count
}

input movetargetdescription_aggregate_bool_exp_count {
  arguments: [movetargetdescription_select_column!]
  distinct: Boolean
  filter: movetargetdescription_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_movetargetdescription"
"""
type movetargetdescription_aggregate_fields {
  avg: movetargetdescription_avg_fields
  count(columns: [movetargetdescription_select_column!], distinct: Boolean): Int!
  max: movetargetdescription_max_fields
  min: movetargetdescription_min_fields
  stddev: movetargetdescription_stddev_fields
  stddev_pop: movetargetdescription_stddev_pop_fields
  stddev_samp: movetargetdescription_stddev_samp_fields
  sum: movetargetdescription_sum_fields
  var_pop: movetargetdescription_var_pop_fields
  var_samp: movetargetdescription_var_samp_fields
  variance: movetargetdescription_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_movetargetdescription"
"""
input movetargetdescription_aggregate_order_by {
  avg: movetargetdescription_avg_order_by
  count: order_by
  max: movetargetdescription_max_order_by
  min: movetargetdescription_min_order_by
  stddev: movetargetdescription_stddev_order_by
  stddev_pop: movetargetdescription_stddev_pop_order_by
  stddev_samp: movetargetdescription_stddev_samp_order_by
  sum: movetargetdescription_sum_order_by
  var_pop: movetargetdescription_var_pop_order_by
  var_samp: movetargetdescription_var_samp_order_by
  variance: movetargetdescription_variance_order_by
}

"""aggregate avg on columns"""
type movetargetdescription_avg_fields {
  id: Float
  language_id: Float
  move_target_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_movetargetdescription"
"""
input movetargetdescription_avg_order_by {
  id: order_by
  language_id: order_by
  move_target_id: order_by
}

"""
Boolean expression to filter rows from the table
"pokemon_v2_movetargetdescription". All fields are combined with a logical 'AND'.
"""
input movetargetdescription_bool_exp {
  _and: [movetargetdescription_bool_exp!]
  _not: movetargetdescription_bool_exp
  _or: [movetargetdescription_bool_exp!]
  description: String_comparison_exp
  id: Int_comparison_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
  move_target_id: Int_comparison_exp
  movetarget: movetarget_bool_exp
}

"""aggregate max on columns"""
type movetargetdescription_max_fields {
  description: String
  id: Int
  language_id: Int
  move_target_id: Int
}

"""
order by max() on columns of table "pokemon_v2_movetargetdescription"
"""
input movetargetdescription_max_order_by {
  description: order_by
  id: order_by
  language_id: order_by
  move_target_id: order_by
}

"""aggregate min on columns"""
type movetargetdescription_min_fields {
  description: String
  id: Int
  language_id: Int
  move_target_id: Int
}

"""
order by min() on columns of table "pokemon_v2_movetargetdescription"
"""
input movetargetdescription_min_order_by {
  description: order_by
  id: order_by
  language_id: order_by
  move_target_id: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_movetargetdescription".
"""
input movetargetdescription_order_by {
  description: order_by
  id: order_by
  language: language_order_by
  language_id: order_by
  move_target_id: order_by
  movetarget: movetarget_order_by
}

"""
select columns of table "pokemon_v2_movetargetdescription"
"""
enum movetargetdescription_select_column {
  """column name"""
  description

  """column name"""
  id

  """column name"""
  language_id

  """column name"""
  move_target_id
}

"""aggregate stddev on columns"""
type movetargetdescription_stddev_fields {
  id: Float
  language_id: Float
  move_target_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_movetargetdescription"
"""
input movetargetdescription_stddev_order_by {
  id: order_by
  language_id: order_by
  move_target_id: order_by
}

"""aggregate stddev_pop on columns"""
type movetargetdescription_stddev_pop_fields {
  id: Float
  language_id: Float
  move_target_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_movetargetdescription"
"""
input movetargetdescription_stddev_pop_order_by {
  id: order_by
  language_id: order_by
  move_target_id: order_by
}

"""aggregate stddev_samp on columns"""
type movetargetdescription_stddev_samp_fields {
  id: Float
  language_id: Float
  move_target_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_movetargetdescription"
"""
input movetargetdescription_stddev_samp_order_by {
  id: order_by
  language_id: order_by
  move_target_id: order_by
}

"""aggregate sum on columns"""
type movetargetdescription_sum_fields {
  id: Int
  language_id: Int
  move_target_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_movetargetdescription"
"""
input movetargetdescription_sum_order_by {
  id: order_by
  language_id: order_by
  move_target_id: order_by
}

"""aggregate var_pop on columns"""
type movetargetdescription_var_pop_fields {
  id: Float
  language_id: Float
  move_target_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_movetargetdescription"
"""
input movetargetdescription_var_pop_order_by {
  id: order_by
  language_id: order_by
  move_target_id: order_by
}

"""aggregate var_samp on columns"""
type movetargetdescription_var_samp_fields {
  id: Float
  language_id: Float
  move_target_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_movetargetdescription"
"""
input movetargetdescription_var_samp_order_by {
  id: order_by
  language_id: order_by
  move_target_id: order_by
}

"""aggregate variance on columns"""
type movetargetdescription_variance_fields {
  id: Float
  language_id: Float
  move_target_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_movetargetdescription"
"""
input movetargetdescription_variance_order_by {
  id: order_by
  language_id: order_by
  move_target_id: order_by
}

"""
columns and relationships of "pokemon_v2_movetargetname"
"""
type movetargetname {
  id: Int!

  """An object relationship"""
  language: language
  language_id: Int
  move_target_id: Int

  """An object relationship"""
  movetarget: movetarget
  name: String!
}

"""
aggregated selection of "pokemon_v2_movetargetname"
"""
type movetargetname_aggregate {
  aggregate: movetargetname_aggregate_fields
  nodes: [movetargetname!]!
}

input movetargetname_aggregate_bool_exp {
  count: movetargetname_aggregate_bool_exp_count
}

input movetargetname_aggregate_bool_exp_count {
  arguments: [movetargetname_select_column!]
  distinct: Boolean
  filter: movetargetname_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_movetargetname"
"""
type movetargetname_aggregate_fields {
  avg: movetargetname_avg_fields
  count(columns: [movetargetname_select_column!], distinct: Boolean): Int!
  max: movetargetname_max_fields
  min: movetargetname_min_fields
  stddev: movetargetname_stddev_fields
  stddev_pop: movetargetname_stddev_pop_fields
  stddev_samp: movetargetname_stddev_samp_fields
  sum: movetargetname_sum_fields
  var_pop: movetargetname_var_pop_fields
  var_samp: movetargetname_var_samp_fields
  variance: movetargetname_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_movetargetname"
"""
input movetargetname_aggregate_order_by {
  avg: movetargetname_avg_order_by
  count: order_by
  max: movetargetname_max_order_by
  min: movetargetname_min_order_by
  stddev: movetargetname_stddev_order_by
  stddev_pop: movetargetname_stddev_pop_order_by
  stddev_samp: movetargetname_stddev_samp_order_by
  sum: movetargetname_sum_order_by
  var_pop: movetargetname_var_pop_order_by
  var_samp: movetargetname_var_samp_order_by
  variance: movetargetname_variance_order_by
}

"""aggregate avg on columns"""
type movetargetname_avg_fields {
  id: Float
  language_id: Float
  move_target_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_movetargetname"
"""
input movetargetname_avg_order_by {
  id: order_by
  language_id: order_by
  move_target_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_movetargetname". All fields are combined with a logical 'AND'.
"""
input movetargetname_bool_exp {
  _and: [movetargetname_bool_exp!]
  _not: movetargetname_bool_exp
  _or: [movetargetname_bool_exp!]
  id: Int_comparison_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
  move_target_id: Int_comparison_exp
  movetarget: movetarget_bool_exp
  name: String_comparison_exp
}

"""aggregate max on columns"""
type movetargetname_max_fields {
  id: Int
  language_id: Int
  move_target_id: Int
  name: String
}

"""
order by max() on columns of table "pokemon_v2_movetargetname"
"""
input movetargetname_max_order_by {
  id: order_by
  language_id: order_by
  move_target_id: order_by
  name: order_by
}

"""aggregate min on columns"""
type movetargetname_min_fields {
  id: Int
  language_id: Int
  move_target_id: Int
  name: String
}

"""
order by min() on columns of table "pokemon_v2_movetargetname"
"""
input movetargetname_min_order_by {
  id: order_by
  language_id: order_by
  move_target_id: order_by
  name: order_by
}

"""Ordering options when selecting data from "pokemon_v2_movetargetname"."""
input movetargetname_order_by {
  id: order_by
  language: language_order_by
  language_id: order_by
  move_target_id: order_by
  movetarget: movetarget_order_by
  name: order_by
}

"""
select columns of table "pokemon_v2_movetargetname"
"""
enum movetargetname_select_column {
  """column name"""
  id

  """column name"""
  language_id

  """column name"""
  move_target_id

  """column name"""
  name
}

"""aggregate stddev on columns"""
type movetargetname_stddev_fields {
  id: Float
  language_id: Float
  move_target_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_movetargetname"
"""
input movetargetname_stddev_order_by {
  id: order_by
  language_id: order_by
  move_target_id: order_by
}

"""aggregate stddev_pop on columns"""
type movetargetname_stddev_pop_fields {
  id: Float
  language_id: Float
  move_target_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_movetargetname"
"""
input movetargetname_stddev_pop_order_by {
  id: order_by
  language_id: order_by
  move_target_id: order_by
}

"""aggregate stddev_samp on columns"""
type movetargetname_stddev_samp_fields {
  id: Float
  language_id: Float
  move_target_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_movetargetname"
"""
input movetargetname_stddev_samp_order_by {
  id: order_by
  language_id: order_by
  move_target_id: order_by
}

"""aggregate sum on columns"""
type movetargetname_sum_fields {
  id: Int
  language_id: Int
  move_target_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_movetargetname"
"""
input movetargetname_sum_order_by {
  id: order_by
  language_id: order_by
  move_target_id: order_by
}

"""aggregate var_pop on columns"""
type movetargetname_var_pop_fields {
  id: Float
  language_id: Float
  move_target_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_movetargetname"
"""
input movetargetname_var_pop_order_by {
  id: order_by
  language_id: order_by
  move_target_id: order_by
}

"""aggregate var_samp on columns"""
type movetargetname_var_samp_fields {
  id: Float
  language_id: Float
  move_target_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_movetargetname"
"""
input movetargetname_var_samp_order_by {
  id: order_by
  language_id: order_by
  move_target_id: order_by
}

"""aggregate variance on columns"""
type movetargetname_variance_fields {
  id: Float
  language_id: Float
  move_target_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_movetargetname"
"""
input movetargetname_variance_order_by {
  id: order_by
  language_id: order_by
  move_target_id: order_by
}

"""
columns and relationships of "pokemon_v2_nature"
"""
type nature {
  """An object relationship"""
  BerryflavorByLikesFlavorId: berryflavor

  """An object relationship"""
  StatByIncreasedStatId: stat

  """An object relationship"""
  berryflavor: berryflavor
  decreased_stat_id: Int
  game_index: Int!
  hates_flavor_id: Int
  id: Int!
  increased_stat_id: Int
  likes_flavor_id: Int
  name: String!

  """An array relationship"""
  naturebattlestylepreferences(
    """distinct select on columns"""
    distinct_on: [naturebattlestylepreference_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [naturebattlestylepreference_order_by!]

    """filter the rows returned"""
    where: naturebattlestylepreference_bool_exp
  ): [naturebattlestylepreference!]!

  """An aggregate relationship"""
  naturebattlestylepreferences_aggregate(
    """distinct select on columns"""
    distinct_on: [naturebattlestylepreference_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [naturebattlestylepreference_order_by!]

    """filter the rows returned"""
    where: naturebattlestylepreference_bool_exp
  ): naturebattlestylepreference_aggregate!

  """An array relationship"""
  naturenames(
    """distinct select on columns"""
    distinct_on: [naturename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [naturename_order_by!]

    """filter the rows returned"""
    where: naturename_bool_exp
  ): [naturename!]!

  """An aggregate relationship"""
  naturenames_aggregate(
    """distinct select on columns"""
    distinct_on: [naturename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [naturename_order_by!]

    """filter the rows returned"""
    where: naturename_bool_exp
  ): naturename_aggregate!

  """An array relationship"""
  naturepokeathlonstats(
    """distinct select on columns"""
    distinct_on: [naturepokeathlonstat_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [naturepokeathlonstat_order_by!]

    """filter the rows returned"""
    where: naturepokeathlonstat_bool_exp
  ): [naturepokeathlonstat!]!

  """An aggregate relationship"""
  naturepokeathlonstats_aggregate(
    """distinct select on columns"""
    distinct_on: [naturepokeathlonstat_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [naturepokeathlonstat_order_by!]

    """filter the rows returned"""
    where: naturepokeathlonstat_bool_exp
  ): naturepokeathlonstat_aggregate!

  """An object relationship"""
  stat: stat
}

"""
aggregated selection of "pokemon_v2_nature"
"""
type nature_aggregate {
  aggregate: nature_aggregate_fields
  nodes: [nature!]!
}

input nature_aggregate_bool_exp {
  count: nature_aggregate_bool_exp_count
}

input nature_aggregate_bool_exp_count {
  arguments: [nature_select_column!]
  distinct: Boolean
  filter: nature_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_nature"
"""
type nature_aggregate_fields {
  avg: nature_avg_fields
  count(columns: [nature_select_column!], distinct: Boolean): Int!
  max: nature_max_fields
  min: nature_min_fields
  stddev: nature_stddev_fields
  stddev_pop: nature_stddev_pop_fields
  stddev_samp: nature_stddev_samp_fields
  sum: nature_sum_fields
  var_pop: nature_var_pop_fields
  var_samp: nature_var_samp_fields
  variance: nature_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_nature"
"""
input nature_aggregate_order_by {
  avg: nature_avg_order_by
  count: order_by
  max: nature_max_order_by
  min: nature_min_order_by
  stddev: nature_stddev_order_by
  stddev_pop: nature_stddev_pop_order_by
  stddev_samp: nature_stddev_samp_order_by
  sum: nature_sum_order_by
  var_pop: nature_var_pop_order_by
  var_samp: nature_var_samp_order_by
  variance: nature_variance_order_by
}

"""aggregate avg on columns"""
type nature_avg_fields {
  decreased_stat_id: Float
  game_index: Float
  hates_flavor_id: Float
  id: Float
  increased_stat_id: Float
  likes_flavor_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_nature"
"""
input nature_avg_order_by {
  decreased_stat_id: order_by
  game_index: order_by
  hates_flavor_id: order_by
  id: order_by
  increased_stat_id: order_by
  likes_flavor_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_nature". All fields are combined with a logical 'AND'.
"""
input nature_bool_exp {
  BerryflavorByLikesFlavorId: berryflavor_bool_exp
  StatByIncreasedStatId: stat_bool_exp
  _and: [nature_bool_exp!]
  _not: nature_bool_exp
  _or: [nature_bool_exp!]
  berryflavor: berryflavor_bool_exp
  decreased_stat_id: Int_comparison_exp
  game_index: Int_comparison_exp
  hates_flavor_id: Int_comparison_exp
  id: Int_comparison_exp
  increased_stat_id: Int_comparison_exp
  likes_flavor_id: Int_comparison_exp
  name: String_comparison_exp
  naturebattlestylepreferences: naturebattlestylepreference_bool_exp
  naturebattlestylepreferences_aggregate: naturebattlestylepreference_aggregate_bool_exp
  naturenames: naturename_bool_exp
  naturenames_aggregate: naturename_aggregate_bool_exp
  naturepokeathlonstats: naturepokeathlonstat_bool_exp
  naturepokeathlonstats_aggregate: naturepokeathlonstat_aggregate_bool_exp
  stat: stat_bool_exp
}

"""aggregate max on columns"""
type nature_max_fields {
  decreased_stat_id: Int
  game_index: Int
  hates_flavor_id: Int
  id: Int
  increased_stat_id: Int
  likes_flavor_id: Int
  name: String
}

"""
order by max() on columns of table "pokemon_v2_nature"
"""
input nature_max_order_by {
  decreased_stat_id: order_by
  game_index: order_by
  hates_flavor_id: order_by
  id: order_by
  increased_stat_id: order_by
  likes_flavor_id: order_by
  name: order_by
}

"""aggregate min on columns"""
type nature_min_fields {
  decreased_stat_id: Int
  game_index: Int
  hates_flavor_id: Int
  id: Int
  increased_stat_id: Int
  likes_flavor_id: Int
  name: String
}

"""
order by min() on columns of table "pokemon_v2_nature"
"""
input nature_min_order_by {
  decreased_stat_id: order_by
  game_index: order_by
  hates_flavor_id: order_by
  id: order_by
  increased_stat_id: order_by
  likes_flavor_id: order_by
  name: order_by
}

"""Ordering options when selecting data from "pokemon_v2_nature"."""
input nature_order_by {
  BerryflavorByLikesFlavorId: berryflavor_order_by
  StatByIncreasedStatId: stat_order_by
  berryflavor: berryflavor_order_by
  decreased_stat_id: order_by
  game_index: order_by
  hates_flavor_id: order_by
  id: order_by
  increased_stat_id: order_by
  likes_flavor_id: order_by
  name: order_by
  naturebattlestylepreferences_aggregate: naturebattlestylepreference_aggregate_order_by
  naturenames_aggregate: naturename_aggregate_order_by
  naturepokeathlonstats_aggregate: naturepokeathlonstat_aggregate_order_by
  stat: stat_order_by
}

"""
select columns of table "pokemon_v2_nature"
"""
enum nature_select_column {
  """column name"""
  decreased_stat_id

  """column name"""
  game_index

  """column name"""
  hates_flavor_id

  """column name"""
  id

  """column name"""
  increased_stat_id

  """column name"""
  likes_flavor_id

  """column name"""
  name
}

"""aggregate stddev on columns"""
type nature_stddev_fields {
  decreased_stat_id: Float
  game_index: Float
  hates_flavor_id: Float
  id: Float
  increased_stat_id: Float
  likes_flavor_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_nature"
"""
input nature_stddev_order_by {
  decreased_stat_id: order_by
  game_index: order_by
  hates_flavor_id: order_by
  id: order_by
  increased_stat_id: order_by
  likes_flavor_id: order_by
}

"""aggregate stddev_pop on columns"""
type nature_stddev_pop_fields {
  decreased_stat_id: Float
  game_index: Float
  hates_flavor_id: Float
  id: Float
  increased_stat_id: Float
  likes_flavor_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_nature"
"""
input nature_stddev_pop_order_by {
  decreased_stat_id: order_by
  game_index: order_by
  hates_flavor_id: order_by
  id: order_by
  increased_stat_id: order_by
  likes_flavor_id: order_by
}

"""aggregate stddev_samp on columns"""
type nature_stddev_samp_fields {
  decreased_stat_id: Float
  game_index: Float
  hates_flavor_id: Float
  id: Float
  increased_stat_id: Float
  likes_flavor_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_nature"
"""
input nature_stddev_samp_order_by {
  decreased_stat_id: order_by
  game_index: order_by
  hates_flavor_id: order_by
  id: order_by
  increased_stat_id: order_by
  likes_flavor_id: order_by
}

"""aggregate sum on columns"""
type nature_sum_fields {
  decreased_stat_id: Int
  game_index: Int
  hates_flavor_id: Int
  id: Int
  increased_stat_id: Int
  likes_flavor_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_nature"
"""
input nature_sum_order_by {
  decreased_stat_id: order_by
  game_index: order_by
  hates_flavor_id: order_by
  id: order_by
  increased_stat_id: order_by
  likes_flavor_id: order_by
}

"""aggregate var_pop on columns"""
type nature_var_pop_fields {
  decreased_stat_id: Float
  game_index: Float
  hates_flavor_id: Float
  id: Float
  increased_stat_id: Float
  likes_flavor_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_nature"
"""
input nature_var_pop_order_by {
  decreased_stat_id: order_by
  game_index: order_by
  hates_flavor_id: order_by
  id: order_by
  increased_stat_id: order_by
  likes_flavor_id: order_by
}

"""aggregate var_samp on columns"""
type nature_var_samp_fields {
  decreased_stat_id: Float
  game_index: Float
  hates_flavor_id: Float
  id: Float
  increased_stat_id: Float
  likes_flavor_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_nature"
"""
input nature_var_samp_order_by {
  decreased_stat_id: order_by
  game_index: order_by
  hates_flavor_id: order_by
  id: order_by
  increased_stat_id: order_by
  likes_flavor_id: order_by
}

"""aggregate variance on columns"""
type nature_variance_fields {
  decreased_stat_id: Float
  game_index: Float
  hates_flavor_id: Float
  id: Float
  increased_stat_id: Float
  likes_flavor_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_nature"
"""
input nature_variance_order_by {
  decreased_stat_id: order_by
  game_index: order_by
  hates_flavor_id: order_by
  id: order_by
  increased_stat_id: order_by
  likes_flavor_id: order_by
}

"""
columns and relationships of "pokemon_v2_naturebattlestylepreference"
"""
type naturebattlestylepreference {
  high_hp_preference: Int!
  id: Int!
  low_hp_preference: Int!
  move_battle_style_id: Int

  """An object relationship"""
  movebattlestyle: movebattlestyle

  """An object relationship"""
  nature: nature
  nature_id: Int
}

"""
aggregated selection of "pokemon_v2_naturebattlestylepreference"
"""
type naturebattlestylepreference_aggregate {
  aggregate: naturebattlestylepreference_aggregate_fields
  nodes: [naturebattlestylepreference!]!
}

input naturebattlestylepreference_aggregate_bool_exp {
  count: naturebattlestylepreference_aggregate_bool_exp_count
}

input naturebattlestylepreference_aggregate_bool_exp_count {
  arguments: [naturebattlestylepreference_select_column!]
  distinct: Boolean
  filter: naturebattlestylepreference_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_naturebattlestylepreference"
"""
type naturebattlestylepreference_aggregate_fields {
  avg: naturebattlestylepreference_avg_fields
  count(columns: [naturebattlestylepreference_select_column!], distinct: Boolean): Int!
  max: naturebattlestylepreference_max_fields
  min: naturebattlestylepreference_min_fields
  stddev: naturebattlestylepreference_stddev_fields
  stddev_pop: naturebattlestylepreference_stddev_pop_fields
  stddev_samp: naturebattlestylepreference_stddev_samp_fields
  sum: naturebattlestylepreference_sum_fields
  var_pop: naturebattlestylepreference_var_pop_fields
  var_samp: naturebattlestylepreference_var_samp_fields
  variance: naturebattlestylepreference_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_naturebattlestylepreference"
"""
input naturebattlestylepreference_aggregate_order_by {
  avg: naturebattlestylepreference_avg_order_by
  count: order_by
  max: naturebattlestylepreference_max_order_by
  min: naturebattlestylepreference_min_order_by
  stddev: naturebattlestylepreference_stddev_order_by
  stddev_pop: naturebattlestylepreference_stddev_pop_order_by
  stddev_samp: naturebattlestylepreference_stddev_samp_order_by
  sum: naturebattlestylepreference_sum_order_by
  var_pop: naturebattlestylepreference_var_pop_order_by
  var_samp: naturebattlestylepreference_var_samp_order_by
  variance: naturebattlestylepreference_variance_order_by
}

"""aggregate avg on columns"""
type naturebattlestylepreference_avg_fields {
  high_hp_preference: Float
  id: Float
  low_hp_preference: Float
  move_battle_style_id: Float
  nature_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_naturebattlestylepreference"
"""
input naturebattlestylepreference_avg_order_by {
  high_hp_preference: order_by
  id: order_by
  low_hp_preference: order_by
  move_battle_style_id: order_by
  nature_id: order_by
}

"""
Boolean expression to filter rows from the table
"pokemon_v2_naturebattlestylepreference". All fields are combined with a logical 'AND'.
"""
input naturebattlestylepreference_bool_exp {
  _and: [naturebattlestylepreference_bool_exp!]
  _not: naturebattlestylepreference_bool_exp
  _or: [naturebattlestylepreference_bool_exp!]
  high_hp_preference: Int_comparison_exp
  id: Int_comparison_exp
  low_hp_preference: Int_comparison_exp
  move_battle_style_id: Int_comparison_exp
  movebattlestyle: movebattlestyle_bool_exp
  nature: nature_bool_exp
  nature_id: Int_comparison_exp
}

"""aggregate max on columns"""
type naturebattlestylepreference_max_fields {
  high_hp_preference: Int
  id: Int
  low_hp_preference: Int
  move_battle_style_id: Int
  nature_id: Int
}

"""
order by max() on columns of table "pokemon_v2_naturebattlestylepreference"
"""
input naturebattlestylepreference_max_order_by {
  high_hp_preference: order_by
  id: order_by
  low_hp_preference: order_by
  move_battle_style_id: order_by
  nature_id: order_by
}

"""aggregate min on columns"""
type naturebattlestylepreference_min_fields {
  high_hp_preference: Int
  id: Int
  low_hp_preference: Int
  move_battle_style_id: Int
  nature_id: Int
}

"""
order by min() on columns of table "pokemon_v2_naturebattlestylepreference"
"""
input naturebattlestylepreference_min_order_by {
  high_hp_preference: order_by
  id: order_by
  low_hp_preference: order_by
  move_battle_style_id: order_by
  nature_id: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_naturebattlestylepreference".
"""
input naturebattlestylepreference_order_by {
  high_hp_preference: order_by
  id: order_by
  low_hp_preference: order_by
  move_battle_style_id: order_by
  movebattlestyle: movebattlestyle_order_by
  nature: nature_order_by
  nature_id: order_by
}

"""
select columns of table "pokemon_v2_naturebattlestylepreference"
"""
enum naturebattlestylepreference_select_column {
  """column name"""
  high_hp_preference

  """column name"""
  id

  """column name"""
  low_hp_preference

  """column name"""
  move_battle_style_id

  """column name"""
  nature_id
}

"""aggregate stddev on columns"""
type naturebattlestylepreference_stddev_fields {
  high_hp_preference: Float
  id: Float
  low_hp_preference: Float
  move_battle_style_id: Float
  nature_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_naturebattlestylepreference"
"""
input naturebattlestylepreference_stddev_order_by {
  high_hp_preference: order_by
  id: order_by
  low_hp_preference: order_by
  move_battle_style_id: order_by
  nature_id: order_by
}

"""aggregate stddev_pop on columns"""
type naturebattlestylepreference_stddev_pop_fields {
  high_hp_preference: Float
  id: Float
  low_hp_preference: Float
  move_battle_style_id: Float
  nature_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_naturebattlestylepreference"
"""
input naturebattlestylepreference_stddev_pop_order_by {
  high_hp_preference: order_by
  id: order_by
  low_hp_preference: order_by
  move_battle_style_id: order_by
  nature_id: order_by
}

"""aggregate stddev_samp on columns"""
type naturebattlestylepreference_stddev_samp_fields {
  high_hp_preference: Float
  id: Float
  low_hp_preference: Float
  move_battle_style_id: Float
  nature_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_naturebattlestylepreference"
"""
input naturebattlestylepreference_stddev_samp_order_by {
  high_hp_preference: order_by
  id: order_by
  low_hp_preference: order_by
  move_battle_style_id: order_by
  nature_id: order_by
}

"""aggregate sum on columns"""
type naturebattlestylepreference_sum_fields {
  high_hp_preference: Int
  id: Int
  low_hp_preference: Int
  move_battle_style_id: Int
  nature_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_naturebattlestylepreference"
"""
input naturebattlestylepreference_sum_order_by {
  high_hp_preference: order_by
  id: order_by
  low_hp_preference: order_by
  move_battle_style_id: order_by
  nature_id: order_by
}

"""aggregate var_pop on columns"""
type naturebattlestylepreference_var_pop_fields {
  high_hp_preference: Float
  id: Float
  low_hp_preference: Float
  move_battle_style_id: Float
  nature_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_naturebattlestylepreference"
"""
input naturebattlestylepreference_var_pop_order_by {
  high_hp_preference: order_by
  id: order_by
  low_hp_preference: order_by
  move_battle_style_id: order_by
  nature_id: order_by
}

"""aggregate var_samp on columns"""
type naturebattlestylepreference_var_samp_fields {
  high_hp_preference: Float
  id: Float
  low_hp_preference: Float
  move_battle_style_id: Float
  nature_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_naturebattlestylepreference"
"""
input naturebattlestylepreference_var_samp_order_by {
  high_hp_preference: order_by
  id: order_by
  low_hp_preference: order_by
  move_battle_style_id: order_by
  nature_id: order_by
}

"""aggregate variance on columns"""
type naturebattlestylepreference_variance_fields {
  high_hp_preference: Float
  id: Float
  low_hp_preference: Float
  move_battle_style_id: Float
  nature_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_naturebattlestylepreference"
"""
input naturebattlestylepreference_variance_order_by {
  high_hp_preference: order_by
  id: order_by
  low_hp_preference: order_by
  move_battle_style_id: order_by
  nature_id: order_by
}

"""
columns and relationships of "pokemon_v2_naturename"
"""
type naturename {
  id: Int!

  """An object relationship"""
  language: language
  language_id: Int
  name: String!

  """An object relationship"""
  nature: nature
  nature_id: Int
}

"""
aggregated selection of "pokemon_v2_naturename"
"""
type naturename_aggregate {
  aggregate: naturename_aggregate_fields
  nodes: [naturename!]!
}

input naturename_aggregate_bool_exp {
  count: naturename_aggregate_bool_exp_count
}

input naturename_aggregate_bool_exp_count {
  arguments: [naturename_select_column!]
  distinct: Boolean
  filter: naturename_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_naturename"
"""
type naturename_aggregate_fields {
  avg: naturename_avg_fields
  count(columns: [naturename_select_column!], distinct: Boolean): Int!
  max: naturename_max_fields
  min: naturename_min_fields
  stddev: naturename_stddev_fields
  stddev_pop: naturename_stddev_pop_fields
  stddev_samp: naturename_stddev_samp_fields
  sum: naturename_sum_fields
  var_pop: naturename_var_pop_fields
  var_samp: naturename_var_samp_fields
  variance: naturename_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_naturename"
"""
input naturename_aggregate_order_by {
  avg: naturename_avg_order_by
  count: order_by
  max: naturename_max_order_by
  min: naturename_min_order_by
  stddev: naturename_stddev_order_by
  stddev_pop: naturename_stddev_pop_order_by
  stddev_samp: naturename_stddev_samp_order_by
  sum: naturename_sum_order_by
  var_pop: naturename_var_pop_order_by
  var_samp: naturename_var_samp_order_by
  variance: naturename_variance_order_by
}

"""aggregate avg on columns"""
type naturename_avg_fields {
  id: Float
  language_id: Float
  nature_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_naturename"
"""
input naturename_avg_order_by {
  id: order_by
  language_id: order_by
  nature_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_naturename". All fields are combined with a logical 'AND'.
"""
input naturename_bool_exp {
  _and: [naturename_bool_exp!]
  _not: naturename_bool_exp
  _or: [naturename_bool_exp!]
  id: Int_comparison_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
  name: String_comparison_exp
  nature: nature_bool_exp
  nature_id: Int_comparison_exp
}

"""aggregate max on columns"""
type naturename_max_fields {
  id: Int
  language_id: Int
  name: String
  nature_id: Int
}

"""
order by max() on columns of table "pokemon_v2_naturename"
"""
input naturename_max_order_by {
  id: order_by
  language_id: order_by
  name: order_by
  nature_id: order_by
}

"""aggregate min on columns"""
type naturename_min_fields {
  id: Int
  language_id: Int
  name: String
  nature_id: Int
}

"""
order by min() on columns of table "pokemon_v2_naturename"
"""
input naturename_min_order_by {
  id: order_by
  language_id: order_by
  name: order_by
  nature_id: order_by
}

"""Ordering options when selecting data from "pokemon_v2_naturename"."""
input naturename_order_by {
  id: order_by
  language: language_order_by
  language_id: order_by
  name: order_by
  nature: nature_order_by
  nature_id: order_by
}

"""
select columns of table "pokemon_v2_naturename"
"""
enum naturename_select_column {
  """column name"""
  id

  """column name"""
  language_id

  """column name"""
  name

  """column name"""
  nature_id
}

"""aggregate stddev on columns"""
type naturename_stddev_fields {
  id: Float
  language_id: Float
  nature_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_naturename"
"""
input naturename_stddev_order_by {
  id: order_by
  language_id: order_by
  nature_id: order_by
}

"""aggregate stddev_pop on columns"""
type naturename_stddev_pop_fields {
  id: Float
  language_id: Float
  nature_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_naturename"
"""
input naturename_stddev_pop_order_by {
  id: order_by
  language_id: order_by
  nature_id: order_by
}

"""aggregate stddev_samp on columns"""
type naturename_stddev_samp_fields {
  id: Float
  language_id: Float
  nature_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_naturename"
"""
input naturename_stddev_samp_order_by {
  id: order_by
  language_id: order_by
  nature_id: order_by
}

"""aggregate sum on columns"""
type naturename_sum_fields {
  id: Int
  language_id: Int
  nature_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_naturename"
"""
input naturename_sum_order_by {
  id: order_by
  language_id: order_by
  nature_id: order_by
}

"""aggregate var_pop on columns"""
type naturename_var_pop_fields {
  id: Float
  language_id: Float
  nature_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_naturename"
"""
input naturename_var_pop_order_by {
  id: order_by
  language_id: order_by
  nature_id: order_by
}

"""aggregate var_samp on columns"""
type naturename_var_samp_fields {
  id: Float
  language_id: Float
  nature_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_naturename"
"""
input naturename_var_samp_order_by {
  id: order_by
  language_id: order_by
  nature_id: order_by
}

"""aggregate variance on columns"""
type naturename_variance_fields {
  id: Float
  language_id: Float
  nature_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_naturename"
"""
input naturename_variance_order_by {
  id: order_by
  language_id: order_by
  nature_id: order_by
}

"""
columns and relationships of "pokemon_v2_naturepokeathlonstat"
"""
type naturepokeathlonstat {
  id: Int!
  max_change: Int!

  """An object relationship"""
  nature: nature
  nature_id: Int
  pokeathlon_stat_id: Int

  """An object relationship"""
  pokeathlonstat: pokeathlonstat
}

"""
aggregated selection of "pokemon_v2_naturepokeathlonstat"
"""
type naturepokeathlonstat_aggregate {
  aggregate: naturepokeathlonstat_aggregate_fields
  nodes: [naturepokeathlonstat!]!
}

input naturepokeathlonstat_aggregate_bool_exp {
  count: naturepokeathlonstat_aggregate_bool_exp_count
}

input naturepokeathlonstat_aggregate_bool_exp_count {
  arguments: [naturepokeathlonstat_select_column!]
  distinct: Boolean
  filter: naturepokeathlonstat_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_naturepokeathlonstat"
"""
type naturepokeathlonstat_aggregate_fields {
  avg: naturepokeathlonstat_avg_fields
  count(columns: [naturepokeathlonstat_select_column!], distinct: Boolean): Int!
  max: naturepokeathlonstat_max_fields
  min: naturepokeathlonstat_min_fields
  stddev: naturepokeathlonstat_stddev_fields
  stddev_pop: naturepokeathlonstat_stddev_pop_fields
  stddev_samp: naturepokeathlonstat_stddev_samp_fields
  sum: naturepokeathlonstat_sum_fields
  var_pop: naturepokeathlonstat_var_pop_fields
  var_samp: naturepokeathlonstat_var_samp_fields
  variance: naturepokeathlonstat_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_naturepokeathlonstat"
"""
input naturepokeathlonstat_aggregate_order_by {
  avg: naturepokeathlonstat_avg_order_by
  count: order_by
  max: naturepokeathlonstat_max_order_by
  min: naturepokeathlonstat_min_order_by
  stddev: naturepokeathlonstat_stddev_order_by
  stddev_pop: naturepokeathlonstat_stddev_pop_order_by
  stddev_samp: naturepokeathlonstat_stddev_samp_order_by
  sum: naturepokeathlonstat_sum_order_by
  var_pop: naturepokeathlonstat_var_pop_order_by
  var_samp: naturepokeathlonstat_var_samp_order_by
  variance: naturepokeathlonstat_variance_order_by
}

"""aggregate avg on columns"""
type naturepokeathlonstat_avg_fields {
  id: Float
  max_change: Float
  nature_id: Float
  pokeathlon_stat_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_naturepokeathlonstat"
"""
input naturepokeathlonstat_avg_order_by {
  id: order_by
  max_change: order_by
  nature_id: order_by
  pokeathlon_stat_id: order_by
}

"""
Boolean expression to filter rows from the table
"pokemon_v2_naturepokeathlonstat". All fields are combined with a logical 'AND'.
"""
input naturepokeathlonstat_bool_exp {
  _and: [naturepokeathlonstat_bool_exp!]
  _not: naturepokeathlonstat_bool_exp
  _or: [naturepokeathlonstat_bool_exp!]
  id: Int_comparison_exp
  max_change: Int_comparison_exp
  nature: nature_bool_exp
  nature_id: Int_comparison_exp
  pokeathlon_stat_id: Int_comparison_exp
  pokeathlonstat: pokeathlonstat_bool_exp
}

"""aggregate max on columns"""
type naturepokeathlonstat_max_fields {
  id: Int
  max_change: Int
  nature_id: Int
  pokeathlon_stat_id: Int
}

"""
order by max() on columns of table "pokemon_v2_naturepokeathlonstat"
"""
input naturepokeathlonstat_max_order_by {
  id: order_by
  max_change: order_by
  nature_id: order_by
  pokeathlon_stat_id: order_by
}

"""aggregate min on columns"""
type naturepokeathlonstat_min_fields {
  id: Int
  max_change: Int
  nature_id: Int
  pokeathlon_stat_id: Int
}

"""
order by min() on columns of table "pokemon_v2_naturepokeathlonstat"
"""
input naturepokeathlonstat_min_order_by {
  id: order_by
  max_change: order_by
  nature_id: order_by
  pokeathlon_stat_id: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_naturepokeathlonstat".
"""
input naturepokeathlonstat_order_by {
  id: order_by
  max_change: order_by
  nature: nature_order_by
  nature_id: order_by
  pokeathlon_stat_id: order_by
  pokeathlonstat: pokeathlonstat_order_by
}

"""
select columns of table "pokemon_v2_naturepokeathlonstat"
"""
enum naturepokeathlonstat_select_column {
  """column name"""
  id

  """column name"""
  max_change

  """column name"""
  nature_id

  """column name"""
  pokeathlon_stat_id
}

"""aggregate stddev on columns"""
type naturepokeathlonstat_stddev_fields {
  id: Float
  max_change: Float
  nature_id: Float
  pokeathlon_stat_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_naturepokeathlonstat"
"""
input naturepokeathlonstat_stddev_order_by {
  id: order_by
  max_change: order_by
  nature_id: order_by
  pokeathlon_stat_id: order_by
}

"""aggregate stddev_pop on columns"""
type naturepokeathlonstat_stddev_pop_fields {
  id: Float
  max_change: Float
  nature_id: Float
  pokeathlon_stat_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_naturepokeathlonstat"
"""
input naturepokeathlonstat_stddev_pop_order_by {
  id: order_by
  max_change: order_by
  nature_id: order_by
  pokeathlon_stat_id: order_by
}

"""aggregate stddev_samp on columns"""
type naturepokeathlonstat_stddev_samp_fields {
  id: Float
  max_change: Float
  nature_id: Float
  pokeathlon_stat_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_naturepokeathlonstat"
"""
input naturepokeathlonstat_stddev_samp_order_by {
  id: order_by
  max_change: order_by
  nature_id: order_by
  pokeathlon_stat_id: order_by
}

"""aggregate sum on columns"""
type naturepokeathlonstat_sum_fields {
  id: Int
  max_change: Int
  nature_id: Int
  pokeathlon_stat_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_naturepokeathlonstat"
"""
input naturepokeathlonstat_sum_order_by {
  id: order_by
  max_change: order_by
  nature_id: order_by
  pokeathlon_stat_id: order_by
}

"""aggregate var_pop on columns"""
type naturepokeathlonstat_var_pop_fields {
  id: Float
  max_change: Float
  nature_id: Float
  pokeathlon_stat_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_naturepokeathlonstat"
"""
input naturepokeathlonstat_var_pop_order_by {
  id: order_by
  max_change: order_by
  nature_id: order_by
  pokeathlon_stat_id: order_by
}

"""aggregate var_samp on columns"""
type naturepokeathlonstat_var_samp_fields {
  id: Float
  max_change: Float
  nature_id: Float
  pokeathlon_stat_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_naturepokeathlonstat"
"""
input naturepokeathlonstat_var_samp_order_by {
  id: order_by
  max_change: order_by
  nature_id: order_by
  pokeathlon_stat_id: order_by
}

"""aggregate variance on columns"""
type naturepokeathlonstat_variance_fields {
  id: Float
  max_change: Float
  nature_id: Float
  pokeathlon_stat_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_naturepokeathlonstat"
"""
input naturepokeathlonstat_variance_order_by {
  id: order_by
  max_change: order_by
  nature_id: order_by
  pokeathlon_stat_id: order_by
}

"""column ordering options"""
enum order_by {
  """in ascending order, nulls last"""
  asc

  """in ascending order, nulls first"""
  asc_nulls_first

  """in ascending order, nulls last"""
  asc_nulls_last

  """in descending order, nulls first"""
  desc

  """in descending order, nulls first"""
  desc_nulls_first

  """in descending order, nulls last"""
  desc_nulls_last
}

"""
columns and relationships of "pokemon_v2_palpark"
"""
type palpark {
  base_score: Int
  id: Int!
  pal_park_area_id: Int

  """An object relationship"""
  palparkarea: palparkarea
  pokemon_species_id: Int

  """An object relationship"""
  pokemonspecy: pokemonspecies
  rate: Int!
}

"""
aggregated selection of "pokemon_v2_palpark"
"""
type palpark_aggregate {
  aggregate: palpark_aggregate_fields
  nodes: [palpark!]!
}

input palpark_aggregate_bool_exp {
  count: palpark_aggregate_bool_exp_count
}

input palpark_aggregate_bool_exp_count {
  arguments: [palpark_select_column!]
  distinct: Boolean
  filter: palpark_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_palpark"
"""
type palpark_aggregate_fields {
  avg: palpark_avg_fields
  count(columns: [palpark_select_column!], distinct: Boolean): Int!
  max: palpark_max_fields
  min: palpark_min_fields
  stddev: palpark_stddev_fields
  stddev_pop: palpark_stddev_pop_fields
  stddev_samp: palpark_stddev_samp_fields
  sum: palpark_sum_fields
  var_pop: palpark_var_pop_fields
  var_samp: palpark_var_samp_fields
  variance: palpark_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_palpark"
"""
input palpark_aggregate_order_by {
  avg: palpark_avg_order_by
  count: order_by
  max: palpark_max_order_by
  min: palpark_min_order_by
  stddev: palpark_stddev_order_by
  stddev_pop: palpark_stddev_pop_order_by
  stddev_samp: palpark_stddev_samp_order_by
  sum: palpark_sum_order_by
  var_pop: palpark_var_pop_order_by
  var_samp: palpark_var_samp_order_by
  variance: palpark_variance_order_by
}

"""aggregate avg on columns"""
type palpark_avg_fields {
  base_score: Float
  id: Float
  pal_park_area_id: Float
  pokemon_species_id: Float
  rate: Float
}

"""
order by avg() on columns of table "pokemon_v2_palpark"
"""
input palpark_avg_order_by {
  base_score: order_by
  id: order_by
  pal_park_area_id: order_by
  pokemon_species_id: order_by
  rate: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_palpark". All fields are combined with a logical 'AND'.
"""
input palpark_bool_exp {
  _and: [palpark_bool_exp!]
  _not: palpark_bool_exp
  _or: [palpark_bool_exp!]
  base_score: Int_comparison_exp
  id: Int_comparison_exp
  pal_park_area_id: Int_comparison_exp
  palparkarea: palparkarea_bool_exp
  pokemon_species_id: Int_comparison_exp
  pokemonspecy: pokemonspecies_bool_exp
  rate: Int_comparison_exp
}

"""aggregate max on columns"""
type palpark_max_fields {
  base_score: Int
  id: Int
  pal_park_area_id: Int
  pokemon_species_id: Int
  rate: Int
}

"""
order by max() on columns of table "pokemon_v2_palpark"
"""
input palpark_max_order_by {
  base_score: order_by
  id: order_by
  pal_park_area_id: order_by
  pokemon_species_id: order_by
  rate: order_by
}

"""aggregate min on columns"""
type palpark_min_fields {
  base_score: Int
  id: Int
  pal_park_area_id: Int
  pokemon_species_id: Int
  rate: Int
}

"""
order by min() on columns of table "pokemon_v2_palpark"
"""
input palpark_min_order_by {
  base_score: order_by
  id: order_by
  pal_park_area_id: order_by
  pokemon_species_id: order_by
  rate: order_by
}

"""Ordering options when selecting data from "pokemon_v2_palpark"."""
input palpark_order_by {
  base_score: order_by
  id: order_by
  pal_park_area_id: order_by
  palparkarea: palparkarea_order_by
  pokemon_species_id: order_by
  pokemonspecy: pokemonspecies_order_by
  rate: order_by
}

"""
select columns of table "pokemon_v2_palpark"
"""
enum palpark_select_column {
  """column name"""
  base_score

  """column name"""
  id

  """column name"""
  pal_park_area_id

  """column name"""
  pokemon_species_id

  """column name"""
  rate
}

"""aggregate stddev on columns"""
type palpark_stddev_fields {
  base_score: Float
  id: Float
  pal_park_area_id: Float
  pokemon_species_id: Float
  rate: Float
}

"""
order by stddev() on columns of table "pokemon_v2_palpark"
"""
input palpark_stddev_order_by {
  base_score: order_by
  id: order_by
  pal_park_area_id: order_by
  pokemon_species_id: order_by
  rate: order_by
}

"""aggregate stddev_pop on columns"""
type palpark_stddev_pop_fields {
  base_score: Float
  id: Float
  pal_park_area_id: Float
  pokemon_species_id: Float
  rate: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_palpark"
"""
input palpark_stddev_pop_order_by {
  base_score: order_by
  id: order_by
  pal_park_area_id: order_by
  pokemon_species_id: order_by
  rate: order_by
}

"""aggregate stddev_samp on columns"""
type palpark_stddev_samp_fields {
  base_score: Float
  id: Float
  pal_park_area_id: Float
  pokemon_species_id: Float
  rate: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_palpark"
"""
input palpark_stddev_samp_order_by {
  base_score: order_by
  id: order_by
  pal_park_area_id: order_by
  pokemon_species_id: order_by
  rate: order_by
}

"""aggregate sum on columns"""
type palpark_sum_fields {
  base_score: Int
  id: Int
  pal_park_area_id: Int
  pokemon_species_id: Int
  rate: Int
}

"""
order by sum() on columns of table "pokemon_v2_palpark"
"""
input palpark_sum_order_by {
  base_score: order_by
  id: order_by
  pal_park_area_id: order_by
  pokemon_species_id: order_by
  rate: order_by
}

"""aggregate var_pop on columns"""
type palpark_var_pop_fields {
  base_score: Float
  id: Float
  pal_park_area_id: Float
  pokemon_species_id: Float
  rate: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_palpark"
"""
input palpark_var_pop_order_by {
  base_score: order_by
  id: order_by
  pal_park_area_id: order_by
  pokemon_species_id: order_by
  rate: order_by
}

"""aggregate var_samp on columns"""
type palpark_var_samp_fields {
  base_score: Float
  id: Float
  pal_park_area_id: Float
  pokemon_species_id: Float
  rate: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_palpark"
"""
input palpark_var_samp_order_by {
  base_score: order_by
  id: order_by
  pal_park_area_id: order_by
  pokemon_species_id: order_by
  rate: order_by
}

"""aggregate variance on columns"""
type palpark_variance_fields {
  base_score: Float
  id: Float
  pal_park_area_id: Float
  pokemon_species_id: Float
  rate: Float
}

"""
order by variance() on columns of table "pokemon_v2_palpark"
"""
input palpark_variance_order_by {
  base_score: order_by
  id: order_by
  pal_park_area_id: order_by
  pokemon_species_id: order_by
  rate: order_by
}

"""
columns and relationships of "pokemon_v2_palparkarea"
"""
type palparkarea {
  id: Int!
  name: String!

  """An array relationship"""
  palparkareanames(
    """distinct select on columns"""
    distinct_on: [palparkareaname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [palparkareaname_order_by!]

    """filter the rows returned"""
    where: palparkareaname_bool_exp
  ): [palparkareaname!]!

  """An aggregate relationship"""
  palparkareanames_aggregate(
    """distinct select on columns"""
    distinct_on: [palparkareaname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [palparkareaname_order_by!]

    """filter the rows returned"""
    where: palparkareaname_bool_exp
  ): palparkareaname_aggregate!

  """An array relationship"""
  palparks(
    """distinct select on columns"""
    distinct_on: [palpark_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [palpark_order_by!]

    """filter the rows returned"""
    where: palpark_bool_exp
  ): [palpark!]!

  """An aggregate relationship"""
  palparks_aggregate(
    """distinct select on columns"""
    distinct_on: [palpark_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [palpark_order_by!]

    """filter the rows returned"""
    where: palpark_bool_exp
  ): palpark_aggregate!
}

"""
aggregated selection of "pokemon_v2_palparkarea"
"""
type palparkarea_aggregate {
  aggregate: palparkarea_aggregate_fields
  nodes: [palparkarea!]!
}

"""
aggregate fields of "pokemon_v2_palparkarea"
"""
type palparkarea_aggregate_fields {
  avg: palparkarea_avg_fields
  count(columns: [palparkarea_select_column!], distinct: Boolean): Int!
  max: palparkarea_max_fields
  min: palparkarea_min_fields
  stddev: palparkarea_stddev_fields
  stddev_pop: palparkarea_stddev_pop_fields
  stddev_samp: palparkarea_stddev_samp_fields
  sum: palparkarea_sum_fields
  var_pop: palparkarea_var_pop_fields
  var_samp: palparkarea_var_samp_fields
  variance: palparkarea_variance_fields
}

"""aggregate avg on columns"""
type palparkarea_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "pokemon_v2_palparkarea". All fields are combined with a logical 'AND'.
"""
input palparkarea_bool_exp {
  _and: [palparkarea_bool_exp!]
  _not: palparkarea_bool_exp
  _or: [palparkarea_bool_exp!]
  id: Int_comparison_exp
  name: String_comparison_exp
  palparkareanames: palparkareaname_bool_exp
  palparkareanames_aggregate: palparkareaname_aggregate_bool_exp
  palparks: palpark_bool_exp
  palparks_aggregate: palpark_aggregate_bool_exp
}

"""aggregate max on columns"""
type palparkarea_max_fields {
  id: Int
  name: String
}

"""aggregate min on columns"""
type palparkarea_min_fields {
  id: Int
  name: String
}

"""Ordering options when selecting data from "pokemon_v2_palparkarea"."""
input palparkarea_order_by {
  id: order_by
  name: order_by
  palparkareanames_aggregate: palparkareaname_aggregate_order_by
  palparks_aggregate: palpark_aggregate_order_by
}

"""
select columns of table "pokemon_v2_palparkarea"
"""
enum palparkarea_select_column {
  """column name"""
  id

  """column name"""
  name
}

"""aggregate stddev on columns"""
type palparkarea_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type palparkarea_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type palparkarea_stddev_samp_fields {
  id: Float
}

"""aggregate sum on columns"""
type palparkarea_sum_fields {
  id: Int
}

"""aggregate var_pop on columns"""
type palparkarea_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type palparkarea_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type palparkarea_variance_fields {
  id: Float
}

"""
columns and relationships of "pokemon_v2_palparkareaname"
"""
type palparkareaname {
  id: Int!

  """An object relationship"""
  language: language
  language_id: Int
  name: String!
  pal_park_area_id: Int

  """An object relationship"""
  palparkarea: palparkarea
}

"""
aggregated selection of "pokemon_v2_palparkareaname"
"""
type palparkareaname_aggregate {
  aggregate: palparkareaname_aggregate_fields
  nodes: [palparkareaname!]!
}

input palparkareaname_aggregate_bool_exp {
  count: palparkareaname_aggregate_bool_exp_count
}

input palparkareaname_aggregate_bool_exp_count {
  arguments: [palparkareaname_select_column!]
  distinct: Boolean
  filter: palparkareaname_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_palparkareaname"
"""
type palparkareaname_aggregate_fields {
  avg: palparkareaname_avg_fields
  count(columns: [palparkareaname_select_column!], distinct: Boolean): Int!
  max: palparkareaname_max_fields
  min: palparkareaname_min_fields
  stddev: palparkareaname_stddev_fields
  stddev_pop: palparkareaname_stddev_pop_fields
  stddev_samp: palparkareaname_stddev_samp_fields
  sum: palparkareaname_sum_fields
  var_pop: palparkareaname_var_pop_fields
  var_samp: palparkareaname_var_samp_fields
  variance: palparkareaname_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_palparkareaname"
"""
input palparkareaname_aggregate_order_by {
  avg: palparkareaname_avg_order_by
  count: order_by
  max: palparkareaname_max_order_by
  min: palparkareaname_min_order_by
  stddev: palparkareaname_stddev_order_by
  stddev_pop: palparkareaname_stddev_pop_order_by
  stddev_samp: palparkareaname_stddev_samp_order_by
  sum: palparkareaname_sum_order_by
  var_pop: palparkareaname_var_pop_order_by
  var_samp: palparkareaname_var_samp_order_by
  variance: palparkareaname_variance_order_by
}

"""aggregate avg on columns"""
type palparkareaname_avg_fields {
  id: Float
  language_id: Float
  pal_park_area_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_palparkareaname"
"""
input palparkareaname_avg_order_by {
  id: order_by
  language_id: order_by
  pal_park_area_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_palparkareaname". All fields are combined with a logical 'AND'.
"""
input palparkareaname_bool_exp {
  _and: [palparkareaname_bool_exp!]
  _not: palparkareaname_bool_exp
  _or: [palparkareaname_bool_exp!]
  id: Int_comparison_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
  name: String_comparison_exp
  pal_park_area_id: Int_comparison_exp
  palparkarea: palparkarea_bool_exp
}

"""aggregate max on columns"""
type palparkareaname_max_fields {
  id: Int
  language_id: Int
  name: String
  pal_park_area_id: Int
}

"""
order by max() on columns of table "pokemon_v2_palparkareaname"
"""
input palparkareaname_max_order_by {
  id: order_by
  language_id: order_by
  name: order_by
  pal_park_area_id: order_by
}

"""aggregate min on columns"""
type palparkareaname_min_fields {
  id: Int
  language_id: Int
  name: String
  pal_park_area_id: Int
}

"""
order by min() on columns of table "pokemon_v2_palparkareaname"
"""
input palparkareaname_min_order_by {
  id: order_by
  language_id: order_by
  name: order_by
  pal_park_area_id: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_palparkareaname".
"""
input palparkareaname_order_by {
  id: order_by
  language: language_order_by
  language_id: order_by
  name: order_by
  pal_park_area_id: order_by
  palparkarea: palparkarea_order_by
}

"""
select columns of table "pokemon_v2_palparkareaname"
"""
enum palparkareaname_select_column {
  """column name"""
  id

  """column name"""
  language_id

  """column name"""
  name

  """column name"""
  pal_park_area_id
}

"""aggregate stddev on columns"""
type palparkareaname_stddev_fields {
  id: Float
  language_id: Float
  pal_park_area_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_palparkareaname"
"""
input palparkareaname_stddev_order_by {
  id: order_by
  language_id: order_by
  pal_park_area_id: order_by
}

"""aggregate stddev_pop on columns"""
type palparkareaname_stddev_pop_fields {
  id: Float
  language_id: Float
  pal_park_area_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_palparkareaname"
"""
input palparkareaname_stddev_pop_order_by {
  id: order_by
  language_id: order_by
  pal_park_area_id: order_by
}

"""aggregate stddev_samp on columns"""
type palparkareaname_stddev_samp_fields {
  id: Float
  language_id: Float
  pal_park_area_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_palparkareaname"
"""
input palparkareaname_stddev_samp_order_by {
  id: order_by
  language_id: order_by
  pal_park_area_id: order_by
}

"""aggregate sum on columns"""
type palparkareaname_sum_fields {
  id: Int
  language_id: Int
  pal_park_area_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_palparkareaname"
"""
input palparkareaname_sum_order_by {
  id: order_by
  language_id: order_by
  pal_park_area_id: order_by
}

"""aggregate var_pop on columns"""
type palparkareaname_var_pop_fields {
  id: Float
  language_id: Float
  pal_park_area_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_palparkareaname"
"""
input palparkareaname_var_pop_order_by {
  id: order_by
  language_id: order_by
  pal_park_area_id: order_by
}

"""aggregate var_samp on columns"""
type palparkareaname_var_samp_fields {
  id: Float
  language_id: Float
  pal_park_area_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_palparkareaname"
"""
input palparkareaname_var_samp_order_by {
  id: order_by
  language_id: order_by
  pal_park_area_id: order_by
}

"""aggregate variance on columns"""
type palparkareaname_variance_fields {
  id: Float
  language_id: Float
  pal_park_area_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_palparkareaname"
"""
input palparkareaname_variance_order_by {
  id: order_by
  language_id: order_by
  pal_park_area_id: order_by
}

"""
columns and relationships of "pokemon_v2_pokeathlonstat"
"""
type pokeathlonstat {
  id: Int!
  name: String!

  """An array relationship"""
  naturepokeathlonstats(
    """distinct select on columns"""
    distinct_on: [naturepokeathlonstat_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [naturepokeathlonstat_order_by!]

    """filter the rows returned"""
    where: naturepokeathlonstat_bool_exp
  ): [naturepokeathlonstat!]!

  """An aggregate relationship"""
  naturepokeathlonstats_aggregate(
    """distinct select on columns"""
    distinct_on: [naturepokeathlonstat_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [naturepokeathlonstat_order_by!]

    """filter the rows returned"""
    where: naturepokeathlonstat_bool_exp
  ): naturepokeathlonstat_aggregate!

  """An array relationship"""
  pokeathlonstatnames(
    """distinct select on columns"""
    distinct_on: [pokeathlonstatname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokeathlonstatname_order_by!]

    """filter the rows returned"""
    where: pokeathlonstatname_bool_exp
  ): [pokeathlonstatname!]!

  """An aggregate relationship"""
  pokeathlonstatnames_aggregate(
    """distinct select on columns"""
    distinct_on: [pokeathlonstatname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokeathlonstatname_order_by!]

    """filter the rows returned"""
    where: pokeathlonstatname_bool_exp
  ): pokeathlonstatname_aggregate!
}

"""
aggregated selection of "pokemon_v2_pokeathlonstat"
"""
type pokeathlonstat_aggregate {
  aggregate: pokeathlonstat_aggregate_fields
  nodes: [pokeathlonstat!]!
}

"""
aggregate fields of "pokemon_v2_pokeathlonstat"
"""
type pokeathlonstat_aggregate_fields {
  avg: pokeathlonstat_avg_fields
  count(columns: [pokeathlonstat_select_column!], distinct: Boolean): Int!
  max: pokeathlonstat_max_fields
  min: pokeathlonstat_min_fields
  stddev: pokeathlonstat_stddev_fields
  stddev_pop: pokeathlonstat_stddev_pop_fields
  stddev_samp: pokeathlonstat_stddev_samp_fields
  sum: pokeathlonstat_sum_fields
  var_pop: pokeathlonstat_var_pop_fields
  var_samp: pokeathlonstat_var_samp_fields
  variance: pokeathlonstat_variance_fields
}

"""aggregate avg on columns"""
type pokeathlonstat_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "pokemon_v2_pokeathlonstat". All fields are combined with a logical 'AND'.
"""
input pokeathlonstat_bool_exp {
  _and: [pokeathlonstat_bool_exp!]
  _not: pokeathlonstat_bool_exp
  _or: [pokeathlonstat_bool_exp!]
  id: Int_comparison_exp
  name: String_comparison_exp
  naturepokeathlonstats: naturepokeathlonstat_bool_exp
  naturepokeathlonstats_aggregate: naturepokeathlonstat_aggregate_bool_exp
  pokeathlonstatnames: pokeathlonstatname_bool_exp
  pokeathlonstatnames_aggregate: pokeathlonstatname_aggregate_bool_exp
}

"""aggregate max on columns"""
type pokeathlonstat_max_fields {
  id: Int
  name: String
}

"""aggregate min on columns"""
type pokeathlonstat_min_fields {
  id: Int
  name: String
}

"""Ordering options when selecting data from "pokemon_v2_pokeathlonstat"."""
input pokeathlonstat_order_by {
  id: order_by
  name: order_by
  naturepokeathlonstats_aggregate: naturepokeathlonstat_aggregate_order_by
  pokeathlonstatnames_aggregate: pokeathlonstatname_aggregate_order_by
}

"""
select columns of table "pokemon_v2_pokeathlonstat"
"""
enum pokeathlonstat_select_column {
  """column name"""
  id

  """column name"""
  name
}

"""aggregate stddev on columns"""
type pokeathlonstat_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type pokeathlonstat_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type pokeathlonstat_stddev_samp_fields {
  id: Float
}

"""aggregate sum on columns"""
type pokeathlonstat_sum_fields {
  id: Int
}

"""aggregate var_pop on columns"""
type pokeathlonstat_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type pokeathlonstat_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type pokeathlonstat_variance_fields {
  id: Float
}

"""
columns and relationships of "pokemon_v2_pokeathlonstatname"
"""
type pokeathlonstatname {
  id: Int!

  """An object relationship"""
  language: language
  language_id: Int
  name: String!
  pokeathlon_stat_id: Int

  """An object relationship"""
  pokeathlonstat: pokeathlonstat
}

"""
aggregated selection of "pokemon_v2_pokeathlonstatname"
"""
type pokeathlonstatname_aggregate {
  aggregate: pokeathlonstatname_aggregate_fields
  nodes: [pokeathlonstatname!]!
}

input pokeathlonstatname_aggregate_bool_exp {
  count: pokeathlonstatname_aggregate_bool_exp_count
}

input pokeathlonstatname_aggregate_bool_exp_count {
  arguments: [pokeathlonstatname_select_column!]
  distinct: Boolean
  filter: pokeathlonstatname_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_pokeathlonstatname"
"""
type pokeathlonstatname_aggregate_fields {
  avg: pokeathlonstatname_avg_fields
  count(columns: [pokeathlonstatname_select_column!], distinct: Boolean): Int!
  max: pokeathlonstatname_max_fields
  min: pokeathlonstatname_min_fields
  stddev: pokeathlonstatname_stddev_fields
  stddev_pop: pokeathlonstatname_stddev_pop_fields
  stddev_samp: pokeathlonstatname_stddev_samp_fields
  sum: pokeathlonstatname_sum_fields
  var_pop: pokeathlonstatname_var_pop_fields
  var_samp: pokeathlonstatname_var_samp_fields
  variance: pokeathlonstatname_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_pokeathlonstatname"
"""
input pokeathlonstatname_aggregate_order_by {
  avg: pokeathlonstatname_avg_order_by
  count: order_by
  max: pokeathlonstatname_max_order_by
  min: pokeathlonstatname_min_order_by
  stddev: pokeathlonstatname_stddev_order_by
  stddev_pop: pokeathlonstatname_stddev_pop_order_by
  stddev_samp: pokeathlonstatname_stddev_samp_order_by
  sum: pokeathlonstatname_sum_order_by
  var_pop: pokeathlonstatname_var_pop_order_by
  var_samp: pokeathlonstatname_var_samp_order_by
  variance: pokeathlonstatname_variance_order_by
}

"""aggregate avg on columns"""
type pokeathlonstatname_avg_fields {
  id: Float
  language_id: Float
  pokeathlon_stat_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_pokeathlonstatname"
"""
input pokeathlonstatname_avg_order_by {
  id: order_by
  language_id: order_by
  pokeathlon_stat_id: order_by
}

"""
Boolean expression to filter rows from the table
"pokemon_v2_pokeathlonstatname". All fields are combined with a logical 'AND'.
"""
input pokeathlonstatname_bool_exp {
  _and: [pokeathlonstatname_bool_exp!]
  _not: pokeathlonstatname_bool_exp
  _or: [pokeathlonstatname_bool_exp!]
  id: Int_comparison_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
  name: String_comparison_exp
  pokeathlon_stat_id: Int_comparison_exp
  pokeathlonstat: pokeathlonstat_bool_exp
}

"""aggregate max on columns"""
type pokeathlonstatname_max_fields {
  id: Int
  language_id: Int
  name: String
  pokeathlon_stat_id: Int
}

"""
order by max() on columns of table "pokemon_v2_pokeathlonstatname"
"""
input pokeathlonstatname_max_order_by {
  id: order_by
  language_id: order_by
  name: order_by
  pokeathlon_stat_id: order_by
}

"""aggregate min on columns"""
type pokeathlonstatname_min_fields {
  id: Int
  language_id: Int
  name: String
  pokeathlon_stat_id: Int
}

"""
order by min() on columns of table "pokemon_v2_pokeathlonstatname"
"""
input pokeathlonstatname_min_order_by {
  id: order_by
  language_id: order_by
  name: order_by
  pokeathlon_stat_id: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_pokeathlonstatname".
"""
input pokeathlonstatname_order_by {
  id: order_by
  language: language_order_by
  language_id: order_by
  name: order_by
  pokeathlon_stat_id: order_by
  pokeathlonstat: pokeathlonstat_order_by
}

"""
select columns of table "pokemon_v2_pokeathlonstatname"
"""
enum pokeathlonstatname_select_column {
  """column name"""
  id

  """column name"""
  language_id

  """column name"""
  name

  """column name"""
  pokeathlon_stat_id
}

"""aggregate stddev on columns"""
type pokeathlonstatname_stddev_fields {
  id: Float
  language_id: Float
  pokeathlon_stat_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_pokeathlonstatname"
"""
input pokeathlonstatname_stddev_order_by {
  id: order_by
  language_id: order_by
  pokeathlon_stat_id: order_by
}

"""aggregate stddev_pop on columns"""
type pokeathlonstatname_stddev_pop_fields {
  id: Float
  language_id: Float
  pokeathlon_stat_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_pokeathlonstatname"
"""
input pokeathlonstatname_stddev_pop_order_by {
  id: order_by
  language_id: order_by
  pokeathlon_stat_id: order_by
}

"""aggregate stddev_samp on columns"""
type pokeathlonstatname_stddev_samp_fields {
  id: Float
  language_id: Float
  pokeathlon_stat_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_pokeathlonstatname"
"""
input pokeathlonstatname_stddev_samp_order_by {
  id: order_by
  language_id: order_by
  pokeathlon_stat_id: order_by
}

"""aggregate sum on columns"""
type pokeathlonstatname_sum_fields {
  id: Int
  language_id: Int
  pokeathlon_stat_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_pokeathlonstatname"
"""
input pokeathlonstatname_sum_order_by {
  id: order_by
  language_id: order_by
  pokeathlon_stat_id: order_by
}

"""aggregate var_pop on columns"""
type pokeathlonstatname_var_pop_fields {
  id: Float
  language_id: Float
  pokeathlon_stat_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_pokeathlonstatname"
"""
input pokeathlonstatname_var_pop_order_by {
  id: order_by
  language_id: order_by
  pokeathlon_stat_id: order_by
}

"""aggregate var_samp on columns"""
type pokeathlonstatname_var_samp_fields {
  id: Float
  language_id: Float
  pokeathlon_stat_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_pokeathlonstatname"
"""
input pokeathlonstatname_var_samp_order_by {
  id: order_by
  language_id: order_by
  pokeathlon_stat_id: order_by
}

"""aggregate variance on columns"""
type pokeathlonstatname_variance_fields {
  id: Float
  language_id: Float
  pokeathlon_stat_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_pokeathlonstatname"
"""
input pokeathlonstatname_variance_order_by {
  id: order_by
  language_id: order_by
  pokeathlon_stat_id: order_by
}

"""
columns and relationships of "pokemon_v2_pokedex"
"""
type pokedex {
  id: Int!
  is_main_series: Boolean!
  name: String!

  """An array relationship"""
  pokedexdescriptions(
    """distinct select on columns"""
    distinct_on: [pokedexdescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokedexdescription_order_by!]

    """filter the rows returned"""
    where: pokedexdescription_bool_exp
  ): [pokedexdescription!]!

  """An aggregate relationship"""
  pokedexdescriptions_aggregate(
    """distinct select on columns"""
    distinct_on: [pokedexdescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokedexdescription_order_by!]

    """filter the rows returned"""
    where: pokedexdescription_bool_exp
  ): pokedexdescription_aggregate!

  """An array relationship"""
  pokedexnames(
    """distinct select on columns"""
    distinct_on: [pokedexname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokedexname_order_by!]

    """filter the rows returned"""
    where: pokedexname_bool_exp
  ): [pokedexname!]!

  """An aggregate relationship"""
  pokedexnames_aggregate(
    """distinct select on columns"""
    distinct_on: [pokedexname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokedexname_order_by!]

    """filter the rows returned"""
    where: pokedexname_bool_exp
  ): pokedexname_aggregate!

  """An array relationship"""
  pokedexversiongroups(
    """distinct select on columns"""
    distinct_on: [pokedexversiongroup_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokedexversiongroup_order_by!]

    """filter the rows returned"""
    where: pokedexversiongroup_bool_exp
  ): [pokedexversiongroup!]!

  """An aggregate relationship"""
  pokedexversiongroups_aggregate(
    """distinct select on columns"""
    distinct_on: [pokedexversiongroup_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokedexversiongroup_order_by!]

    """filter the rows returned"""
    where: pokedexversiongroup_bool_exp
  ): pokedexversiongroup_aggregate!

  """An array relationship"""
  pokemondexnumbers(
    """distinct select on columns"""
    distinct_on: [pokemondexnumber_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemondexnumber_order_by!]

    """filter the rows returned"""
    where: pokemondexnumber_bool_exp
  ): [pokemondexnumber!]!

  """An aggregate relationship"""
  pokemondexnumbers_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemondexnumber_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemondexnumber_order_by!]

    """filter the rows returned"""
    where: pokemondexnumber_bool_exp
  ): pokemondexnumber_aggregate!

  """An object relationship"""
  region: region
  region_id: Int
}

"""
aggregated selection of "pokemon_v2_pokedex"
"""
type pokedex_aggregate {
  aggregate: pokedex_aggregate_fields
  nodes: [pokedex!]!
}

input pokedex_aggregate_bool_exp {
  bool_and: pokedex_aggregate_bool_exp_bool_and
  bool_or: pokedex_aggregate_bool_exp_bool_or
  count: pokedex_aggregate_bool_exp_count
}

input pokedex_aggregate_bool_exp_bool_and {
  arguments: pokedex_select_column_pokedex_aggregate_bool_exp_bool_and_arguments_columns!
  distinct: Boolean
  filter: pokedex_bool_exp
  predicate: Boolean_comparison_exp!
}

input pokedex_aggregate_bool_exp_bool_or {
  arguments: pokedex_select_column_pokedex_aggregate_bool_exp_bool_or_arguments_columns!
  distinct: Boolean
  filter: pokedex_bool_exp
  predicate: Boolean_comparison_exp!
}

input pokedex_aggregate_bool_exp_count {
  arguments: [pokedex_select_column!]
  distinct: Boolean
  filter: pokedex_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_pokedex"
"""
type pokedex_aggregate_fields {
  avg: pokedex_avg_fields
  count(columns: [pokedex_select_column!], distinct: Boolean): Int!
  max: pokedex_max_fields
  min: pokedex_min_fields
  stddev: pokedex_stddev_fields
  stddev_pop: pokedex_stddev_pop_fields
  stddev_samp: pokedex_stddev_samp_fields
  sum: pokedex_sum_fields
  var_pop: pokedex_var_pop_fields
  var_samp: pokedex_var_samp_fields
  variance: pokedex_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_pokedex"
"""
input pokedex_aggregate_order_by {
  avg: pokedex_avg_order_by
  count: order_by
  max: pokedex_max_order_by
  min: pokedex_min_order_by
  stddev: pokedex_stddev_order_by
  stddev_pop: pokedex_stddev_pop_order_by
  stddev_samp: pokedex_stddev_samp_order_by
  sum: pokedex_sum_order_by
  var_pop: pokedex_var_pop_order_by
  var_samp: pokedex_var_samp_order_by
  variance: pokedex_variance_order_by
}

"""aggregate avg on columns"""
type pokedex_avg_fields {
  id: Float
  region_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_pokedex"
"""
input pokedex_avg_order_by {
  id: order_by
  region_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_pokedex". All fields are combined with a logical 'AND'.
"""
input pokedex_bool_exp {
  _and: [pokedex_bool_exp!]
  _not: pokedex_bool_exp
  _or: [pokedex_bool_exp!]
  id: Int_comparison_exp
  is_main_series: Boolean_comparison_exp
  name: String_comparison_exp
  pokedexdescriptions: pokedexdescription_bool_exp
  pokedexdescriptions_aggregate: pokedexdescription_aggregate_bool_exp
  pokedexnames: pokedexname_bool_exp
  pokedexnames_aggregate: pokedexname_aggregate_bool_exp
  pokedexversiongroups: pokedexversiongroup_bool_exp
  pokedexversiongroups_aggregate: pokedexversiongroup_aggregate_bool_exp
  pokemondexnumbers: pokemondexnumber_bool_exp
  pokemondexnumbers_aggregate: pokemondexnumber_aggregate_bool_exp
  region: region_bool_exp
  region_id: Int_comparison_exp
}

"""aggregate max on columns"""
type pokedex_max_fields {
  id: Int
  name: String
  region_id: Int
}

"""
order by max() on columns of table "pokemon_v2_pokedex"
"""
input pokedex_max_order_by {
  id: order_by
  name: order_by
  region_id: order_by
}

"""aggregate min on columns"""
type pokedex_min_fields {
  id: Int
  name: String
  region_id: Int
}

"""
order by min() on columns of table "pokemon_v2_pokedex"
"""
input pokedex_min_order_by {
  id: order_by
  name: order_by
  region_id: order_by
}

"""Ordering options when selecting data from "pokemon_v2_pokedex"."""
input pokedex_order_by {
  id: order_by
  is_main_series: order_by
  name: order_by
  pokedexdescriptions_aggregate: pokedexdescription_aggregate_order_by
  pokedexnames_aggregate: pokedexname_aggregate_order_by
  pokedexversiongroups_aggregate: pokedexversiongroup_aggregate_order_by
  pokemondexnumbers_aggregate: pokemondexnumber_aggregate_order_by
  region: region_order_by
  region_id: order_by
}

"""
select columns of table "pokemon_v2_pokedex"
"""
enum pokedex_select_column {
  """column name"""
  id

  """column name"""
  is_main_series

  """column name"""
  name

  """column name"""
  region_id
}

"""
select "pokedex_aggregate_bool_exp_bool_and_arguments_columns" columns of table "pokemon_v2_pokedex"
"""
enum pokedex_select_column_pokedex_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
  is_main_series
}

"""
select "pokedex_aggregate_bool_exp_bool_or_arguments_columns" columns of table "pokemon_v2_pokedex"
"""
enum pokedex_select_column_pokedex_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
  is_main_series
}

"""aggregate stddev on columns"""
type pokedex_stddev_fields {
  id: Float
  region_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_pokedex"
"""
input pokedex_stddev_order_by {
  id: order_by
  region_id: order_by
}

"""aggregate stddev_pop on columns"""
type pokedex_stddev_pop_fields {
  id: Float
  region_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_pokedex"
"""
input pokedex_stddev_pop_order_by {
  id: order_by
  region_id: order_by
}

"""aggregate stddev_samp on columns"""
type pokedex_stddev_samp_fields {
  id: Float
  region_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_pokedex"
"""
input pokedex_stddev_samp_order_by {
  id: order_by
  region_id: order_by
}

"""aggregate sum on columns"""
type pokedex_sum_fields {
  id: Int
  region_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_pokedex"
"""
input pokedex_sum_order_by {
  id: order_by
  region_id: order_by
}

"""aggregate var_pop on columns"""
type pokedex_var_pop_fields {
  id: Float
  region_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_pokedex"
"""
input pokedex_var_pop_order_by {
  id: order_by
  region_id: order_by
}

"""aggregate var_samp on columns"""
type pokedex_var_samp_fields {
  id: Float
  region_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_pokedex"
"""
input pokedex_var_samp_order_by {
  id: order_by
  region_id: order_by
}

"""aggregate variance on columns"""
type pokedex_variance_fields {
  id: Float
  region_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_pokedex"
"""
input pokedex_variance_order_by {
  id: order_by
  region_id: order_by
}

"""
columns and relationships of "pokemon_v2_pokedexdescription"
"""
type pokedexdescription {
  description: String!
  id: Int!

  """An object relationship"""
  language: language
  language_id: Int

  """An object relationship"""
  pokedex: pokedex
  pokedex_id: Int
}

"""
aggregated selection of "pokemon_v2_pokedexdescription"
"""
type pokedexdescription_aggregate {
  aggregate: pokedexdescription_aggregate_fields
  nodes: [pokedexdescription!]!
}

input pokedexdescription_aggregate_bool_exp {
  count: pokedexdescription_aggregate_bool_exp_count
}

input pokedexdescription_aggregate_bool_exp_count {
  arguments: [pokedexdescription_select_column!]
  distinct: Boolean
  filter: pokedexdescription_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_pokedexdescription"
"""
type pokedexdescription_aggregate_fields {
  avg: pokedexdescription_avg_fields
  count(columns: [pokedexdescription_select_column!], distinct: Boolean): Int!
  max: pokedexdescription_max_fields
  min: pokedexdescription_min_fields
  stddev: pokedexdescription_stddev_fields
  stddev_pop: pokedexdescription_stddev_pop_fields
  stddev_samp: pokedexdescription_stddev_samp_fields
  sum: pokedexdescription_sum_fields
  var_pop: pokedexdescription_var_pop_fields
  var_samp: pokedexdescription_var_samp_fields
  variance: pokedexdescription_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_pokedexdescription"
"""
input pokedexdescription_aggregate_order_by {
  avg: pokedexdescription_avg_order_by
  count: order_by
  max: pokedexdescription_max_order_by
  min: pokedexdescription_min_order_by
  stddev: pokedexdescription_stddev_order_by
  stddev_pop: pokedexdescription_stddev_pop_order_by
  stddev_samp: pokedexdescription_stddev_samp_order_by
  sum: pokedexdescription_sum_order_by
  var_pop: pokedexdescription_var_pop_order_by
  var_samp: pokedexdescription_var_samp_order_by
  variance: pokedexdescription_variance_order_by
}

"""aggregate avg on columns"""
type pokedexdescription_avg_fields {
  id: Float
  language_id: Float
  pokedex_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_pokedexdescription"
"""
input pokedexdescription_avg_order_by {
  id: order_by
  language_id: order_by
  pokedex_id: order_by
}

"""
Boolean expression to filter rows from the table
"pokemon_v2_pokedexdescription". All fields are combined with a logical 'AND'.
"""
input pokedexdescription_bool_exp {
  _and: [pokedexdescription_bool_exp!]
  _not: pokedexdescription_bool_exp
  _or: [pokedexdescription_bool_exp!]
  description: String_comparison_exp
  id: Int_comparison_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
  pokedex: pokedex_bool_exp
  pokedex_id: Int_comparison_exp
}

"""aggregate max on columns"""
type pokedexdescription_max_fields {
  description: String
  id: Int
  language_id: Int
  pokedex_id: Int
}

"""
order by max() on columns of table "pokemon_v2_pokedexdescription"
"""
input pokedexdescription_max_order_by {
  description: order_by
  id: order_by
  language_id: order_by
  pokedex_id: order_by
}

"""aggregate min on columns"""
type pokedexdescription_min_fields {
  description: String
  id: Int
  language_id: Int
  pokedex_id: Int
}

"""
order by min() on columns of table "pokemon_v2_pokedexdescription"
"""
input pokedexdescription_min_order_by {
  description: order_by
  id: order_by
  language_id: order_by
  pokedex_id: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_pokedexdescription".
"""
input pokedexdescription_order_by {
  description: order_by
  id: order_by
  language: language_order_by
  language_id: order_by
  pokedex: pokedex_order_by
  pokedex_id: order_by
}

"""
select columns of table "pokemon_v2_pokedexdescription"
"""
enum pokedexdescription_select_column {
  """column name"""
  description

  """column name"""
  id

  """column name"""
  language_id

  """column name"""
  pokedex_id
}

"""aggregate stddev on columns"""
type pokedexdescription_stddev_fields {
  id: Float
  language_id: Float
  pokedex_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_pokedexdescription"
"""
input pokedexdescription_stddev_order_by {
  id: order_by
  language_id: order_by
  pokedex_id: order_by
}

"""aggregate stddev_pop on columns"""
type pokedexdescription_stddev_pop_fields {
  id: Float
  language_id: Float
  pokedex_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_pokedexdescription"
"""
input pokedexdescription_stddev_pop_order_by {
  id: order_by
  language_id: order_by
  pokedex_id: order_by
}

"""aggregate stddev_samp on columns"""
type pokedexdescription_stddev_samp_fields {
  id: Float
  language_id: Float
  pokedex_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_pokedexdescription"
"""
input pokedexdescription_stddev_samp_order_by {
  id: order_by
  language_id: order_by
  pokedex_id: order_by
}

"""aggregate sum on columns"""
type pokedexdescription_sum_fields {
  id: Int
  language_id: Int
  pokedex_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_pokedexdescription"
"""
input pokedexdescription_sum_order_by {
  id: order_by
  language_id: order_by
  pokedex_id: order_by
}

"""aggregate var_pop on columns"""
type pokedexdescription_var_pop_fields {
  id: Float
  language_id: Float
  pokedex_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_pokedexdescription"
"""
input pokedexdescription_var_pop_order_by {
  id: order_by
  language_id: order_by
  pokedex_id: order_by
}

"""aggregate var_samp on columns"""
type pokedexdescription_var_samp_fields {
  id: Float
  language_id: Float
  pokedex_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_pokedexdescription"
"""
input pokedexdescription_var_samp_order_by {
  id: order_by
  language_id: order_by
  pokedex_id: order_by
}

"""aggregate variance on columns"""
type pokedexdescription_variance_fields {
  id: Float
  language_id: Float
  pokedex_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_pokedexdescription"
"""
input pokedexdescription_variance_order_by {
  id: order_by
  language_id: order_by
  pokedex_id: order_by
}

"""
columns and relationships of "pokemon_v2_pokedexname"
"""
type pokedexname {
  id: Int!

  """An object relationship"""
  language: language
  language_id: Int
  name: String!

  """An object relationship"""
  pokedex: pokedex
  pokedex_id: Int
}

"""
aggregated selection of "pokemon_v2_pokedexname"
"""
type pokedexname_aggregate {
  aggregate: pokedexname_aggregate_fields
  nodes: [pokedexname!]!
}

input pokedexname_aggregate_bool_exp {
  count: pokedexname_aggregate_bool_exp_count
}

input pokedexname_aggregate_bool_exp_count {
  arguments: [pokedexname_select_column!]
  distinct: Boolean
  filter: pokedexname_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_pokedexname"
"""
type pokedexname_aggregate_fields {
  avg: pokedexname_avg_fields
  count(columns: [pokedexname_select_column!], distinct: Boolean): Int!
  max: pokedexname_max_fields
  min: pokedexname_min_fields
  stddev: pokedexname_stddev_fields
  stddev_pop: pokedexname_stddev_pop_fields
  stddev_samp: pokedexname_stddev_samp_fields
  sum: pokedexname_sum_fields
  var_pop: pokedexname_var_pop_fields
  var_samp: pokedexname_var_samp_fields
  variance: pokedexname_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_pokedexname"
"""
input pokedexname_aggregate_order_by {
  avg: pokedexname_avg_order_by
  count: order_by
  max: pokedexname_max_order_by
  min: pokedexname_min_order_by
  stddev: pokedexname_stddev_order_by
  stddev_pop: pokedexname_stddev_pop_order_by
  stddev_samp: pokedexname_stddev_samp_order_by
  sum: pokedexname_sum_order_by
  var_pop: pokedexname_var_pop_order_by
  var_samp: pokedexname_var_samp_order_by
  variance: pokedexname_variance_order_by
}

"""aggregate avg on columns"""
type pokedexname_avg_fields {
  id: Float
  language_id: Float
  pokedex_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_pokedexname"
"""
input pokedexname_avg_order_by {
  id: order_by
  language_id: order_by
  pokedex_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_pokedexname". All fields are combined with a logical 'AND'.
"""
input pokedexname_bool_exp {
  _and: [pokedexname_bool_exp!]
  _not: pokedexname_bool_exp
  _or: [pokedexname_bool_exp!]
  id: Int_comparison_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
  name: String_comparison_exp
  pokedex: pokedex_bool_exp
  pokedex_id: Int_comparison_exp
}

"""aggregate max on columns"""
type pokedexname_max_fields {
  id: Int
  language_id: Int
  name: String
  pokedex_id: Int
}

"""
order by max() on columns of table "pokemon_v2_pokedexname"
"""
input pokedexname_max_order_by {
  id: order_by
  language_id: order_by
  name: order_by
  pokedex_id: order_by
}

"""aggregate min on columns"""
type pokedexname_min_fields {
  id: Int
  language_id: Int
  name: String
  pokedex_id: Int
}

"""
order by min() on columns of table "pokemon_v2_pokedexname"
"""
input pokedexname_min_order_by {
  id: order_by
  language_id: order_by
  name: order_by
  pokedex_id: order_by
}

"""Ordering options when selecting data from "pokemon_v2_pokedexname"."""
input pokedexname_order_by {
  id: order_by
  language: language_order_by
  language_id: order_by
  name: order_by
  pokedex: pokedex_order_by
  pokedex_id: order_by
}

"""
select columns of table "pokemon_v2_pokedexname"
"""
enum pokedexname_select_column {
  """column name"""
  id

  """column name"""
  language_id

  """column name"""
  name

  """column name"""
  pokedex_id
}

"""aggregate stddev on columns"""
type pokedexname_stddev_fields {
  id: Float
  language_id: Float
  pokedex_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_pokedexname"
"""
input pokedexname_stddev_order_by {
  id: order_by
  language_id: order_by
  pokedex_id: order_by
}

"""aggregate stddev_pop on columns"""
type pokedexname_stddev_pop_fields {
  id: Float
  language_id: Float
  pokedex_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_pokedexname"
"""
input pokedexname_stddev_pop_order_by {
  id: order_by
  language_id: order_by
  pokedex_id: order_by
}

"""aggregate stddev_samp on columns"""
type pokedexname_stddev_samp_fields {
  id: Float
  language_id: Float
  pokedex_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_pokedexname"
"""
input pokedexname_stddev_samp_order_by {
  id: order_by
  language_id: order_by
  pokedex_id: order_by
}

"""aggregate sum on columns"""
type pokedexname_sum_fields {
  id: Int
  language_id: Int
  pokedex_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_pokedexname"
"""
input pokedexname_sum_order_by {
  id: order_by
  language_id: order_by
  pokedex_id: order_by
}

"""aggregate var_pop on columns"""
type pokedexname_var_pop_fields {
  id: Float
  language_id: Float
  pokedex_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_pokedexname"
"""
input pokedexname_var_pop_order_by {
  id: order_by
  language_id: order_by
  pokedex_id: order_by
}

"""aggregate var_samp on columns"""
type pokedexname_var_samp_fields {
  id: Float
  language_id: Float
  pokedex_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_pokedexname"
"""
input pokedexname_var_samp_order_by {
  id: order_by
  language_id: order_by
  pokedex_id: order_by
}

"""aggregate variance on columns"""
type pokedexname_variance_fields {
  id: Float
  language_id: Float
  pokedex_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_pokedexname"
"""
input pokedexname_variance_order_by {
  id: order_by
  language_id: order_by
  pokedex_id: order_by
}

"""
columns and relationships of "pokemon_v2_pokedexversiongroup"
"""
type pokedexversiongroup {
  id: Int!

  """An object relationship"""
  pokedex: pokedex
  pokedex_id: Int
  version_group_id: Int

  """An object relationship"""
  versiongroup: versiongroup
}

"""
aggregated selection of "pokemon_v2_pokedexversiongroup"
"""
type pokedexversiongroup_aggregate {
  aggregate: pokedexversiongroup_aggregate_fields
  nodes: [pokedexversiongroup!]!
}

input pokedexversiongroup_aggregate_bool_exp {
  count: pokedexversiongroup_aggregate_bool_exp_count
}

input pokedexversiongroup_aggregate_bool_exp_count {
  arguments: [pokedexversiongroup_select_column!]
  distinct: Boolean
  filter: pokedexversiongroup_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_pokedexversiongroup"
"""
type pokedexversiongroup_aggregate_fields {
  avg: pokedexversiongroup_avg_fields
  count(columns: [pokedexversiongroup_select_column!], distinct: Boolean): Int!
  max: pokedexversiongroup_max_fields
  min: pokedexversiongroup_min_fields
  stddev: pokedexversiongroup_stddev_fields
  stddev_pop: pokedexversiongroup_stddev_pop_fields
  stddev_samp: pokedexversiongroup_stddev_samp_fields
  sum: pokedexversiongroup_sum_fields
  var_pop: pokedexversiongroup_var_pop_fields
  var_samp: pokedexversiongroup_var_samp_fields
  variance: pokedexversiongroup_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_pokedexversiongroup"
"""
input pokedexversiongroup_aggregate_order_by {
  avg: pokedexversiongroup_avg_order_by
  count: order_by
  max: pokedexversiongroup_max_order_by
  min: pokedexversiongroup_min_order_by
  stddev: pokedexversiongroup_stddev_order_by
  stddev_pop: pokedexversiongroup_stddev_pop_order_by
  stddev_samp: pokedexversiongroup_stddev_samp_order_by
  sum: pokedexversiongroup_sum_order_by
  var_pop: pokedexversiongroup_var_pop_order_by
  var_samp: pokedexversiongroup_var_samp_order_by
  variance: pokedexversiongroup_variance_order_by
}

"""aggregate avg on columns"""
type pokedexversiongroup_avg_fields {
  id: Float
  pokedex_id: Float
  version_group_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_pokedexversiongroup"
"""
input pokedexversiongroup_avg_order_by {
  id: order_by
  pokedex_id: order_by
  version_group_id: order_by
}

"""
Boolean expression to filter rows from the table
"pokemon_v2_pokedexversiongroup". All fields are combined with a logical 'AND'.
"""
input pokedexversiongroup_bool_exp {
  _and: [pokedexversiongroup_bool_exp!]
  _not: pokedexversiongroup_bool_exp
  _or: [pokedexversiongroup_bool_exp!]
  id: Int_comparison_exp
  pokedex: pokedex_bool_exp
  pokedex_id: Int_comparison_exp
  version_group_id: Int_comparison_exp
  versiongroup: versiongroup_bool_exp
}

"""aggregate max on columns"""
type pokedexversiongroup_max_fields {
  id: Int
  pokedex_id: Int
  version_group_id: Int
}

"""
order by max() on columns of table "pokemon_v2_pokedexversiongroup"
"""
input pokedexversiongroup_max_order_by {
  id: order_by
  pokedex_id: order_by
  version_group_id: order_by
}

"""aggregate min on columns"""
type pokedexversiongroup_min_fields {
  id: Int
  pokedex_id: Int
  version_group_id: Int
}

"""
order by min() on columns of table "pokemon_v2_pokedexversiongroup"
"""
input pokedexversiongroup_min_order_by {
  id: order_by
  pokedex_id: order_by
  version_group_id: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_pokedexversiongroup".
"""
input pokedexversiongroup_order_by {
  id: order_by
  pokedex: pokedex_order_by
  pokedex_id: order_by
  version_group_id: order_by
  versiongroup: versiongroup_order_by
}

"""
select columns of table "pokemon_v2_pokedexversiongroup"
"""
enum pokedexversiongroup_select_column {
  """column name"""
  id

  """column name"""
  pokedex_id

  """column name"""
  version_group_id
}

"""aggregate stddev on columns"""
type pokedexversiongroup_stddev_fields {
  id: Float
  pokedex_id: Float
  version_group_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_pokedexversiongroup"
"""
input pokedexversiongroup_stddev_order_by {
  id: order_by
  pokedex_id: order_by
  version_group_id: order_by
}

"""aggregate stddev_pop on columns"""
type pokedexversiongroup_stddev_pop_fields {
  id: Float
  pokedex_id: Float
  version_group_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_pokedexversiongroup"
"""
input pokedexversiongroup_stddev_pop_order_by {
  id: order_by
  pokedex_id: order_by
  version_group_id: order_by
}

"""aggregate stddev_samp on columns"""
type pokedexversiongroup_stddev_samp_fields {
  id: Float
  pokedex_id: Float
  version_group_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_pokedexversiongroup"
"""
input pokedexversiongroup_stddev_samp_order_by {
  id: order_by
  pokedex_id: order_by
  version_group_id: order_by
}

"""aggregate sum on columns"""
type pokedexversiongroup_sum_fields {
  id: Int
  pokedex_id: Int
  version_group_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_pokedexversiongroup"
"""
input pokedexversiongroup_sum_order_by {
  id: order_by
  pokedex_id: order_by
  version_group_id: order_by
}

"""aggregate var_pop on columns"""
type pokedexversiongroup_var_pop_fields {
  id: Float
  pokedex_id: Float
  version_group_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_pokedexversiongroup"
"""
input pokedexversiongroup_var_pop_order_by {
  id: order_by
  pokedex_id: order_by
  version_group_id: order_by
}

"""aggregate var_samp on columns"""
type pokedexversiongroup_var_samp_fields {
  id: Float
  pokedex_id: Float
  version_group_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_pokedexversiongroup"
"""
input pokedexversiongroup_var_samp_order_by {
  id: order_by
  pokedex_id: order_by
  version_group_id: order_by
}

"""aggregate variance on columns"""
type pokedexversiongroup_variance_fields {
  id: Float
  pokedex_id: Float
  version_group_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_pokedexversiongroup"
"""
input pokedexversiongroup_variance_order_by {
  id: order_by
  pokedex_id: order_by
  version_group_id: order_by
}

"""
columns and relationships of "pokemon_v2_pokemon"
"""
type pokemon {
  base_experience: Int

  """An array relationship"""
  encounters(
    """distinct select on columns"""
    distinct_on: [encounter_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [encounter_order_by!]

    """filter the rows returned"""
    where: encounter_bool_exp
  ): [encounter!]!

  """An aggregate relationship"""
  encounters_aggregate(
    """distinct select on columns"""
    distinct_on: [encounter_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [encounter_order_by!]

    """filter the rows returned"""
    where: encounter_bool_exp
  ): encounter_aggregate!
  height: Int
  id: Int!
  is_default: Boolean!
  name: String!
  order: Int
  pokemon_species_id: Int

  """An array relationship"""
  pokemonabilities(
    """distinct select on columns"""
    distinct_on: [pokemonability_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonability_order_by!]

    """filter the rows returned"""
    where: pokemonability_bool_exp
  ): [pokemonability!]!

  """An aggregate relationship"""
  pokemonabilities_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonability_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonability_order_by!]

    """filter the rows returned"""
    where: pokemonability_bool_exp
  ): pokemonability_aggregate!

  """An array relationship"""
  pokemonabilitypasts(
    """distinct select on columns"""
    distinct_on: [pokemonabilitypast_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonabilitypast_order_by!]

    """filter the rows returned"""
    where: pokemonabilitypast_bool_exp
  ): [pokemonabilitypast!]!

  """An aggregate relationship"""
  pokemonabilitypasts_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonabilitypast_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonabilitypast_order_by!]

    """filter the rows returned"""
    where: pokemonabilitypast_bool_exp
  ): pokemonabilitypast_aggregate!

  """An array relationship"""
  pokemoncries(
    """distinct select on columns"""
    distinct_on: [pokemoncries_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemoncries_order_by!]

    """filter the rows returned"""
    where: pokemoncries_bool_exp
  ): [pokemoncries!]!

  """An aggregate relationship"""
  pokemoncries_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemoncries_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemoncries_order_by!]

    """filter the rows returned"""
    where: pokemoncries_bool_exp
  ): pokemoncries_aggregate!

  """An array relationship"""
  pokemonforms(
    """distinct select on columns"""
    distinct_on: [pokemonform_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonform_order_by!]

    """filter the rows returned"""
    where: pokemonform_bool_exp
  ): [pokemonform!]!

  """An aggregate relationship"""
  pokemonforms_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonform_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonform_order_by!]

    """filter the rows returned"""
    where: pokemonform_bool_exp
  ): pokemonform_aggregate!

  """An array relationship"""
  pokemongameindices(
    """distinct select on columns"""
    distinct_on: [pokemongameindex_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemongameindex_order_by!]

    """filter the rows returned"""
    where: pokemongameindex_bool_exp
  ): [pokemongameindex!]!

  """An aggregate relationship"""
  pokemongameindices_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemongameindex_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemongameindex_order_by!]

    """filter the rows returned"""
    where: pokemongameindex_bool_exp
  ): pokemongameindex_aggregate!

  """An array relationship"""
  pokemonitems(
    """distinct select on columns"""
    distinct_on: [pokemonitem_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonitem_order_by!]

    """filter the rows returned"""
    where: pokemonitem_bool_exp
  ): [pokemonitem!]!

  """An aggregate relationship"""
  pokemonitems_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonitem_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonitem_order_by!]

    """filter the rows returned"""
    where: pokemonitem_bool_exp
  ): pokemonitem_aggregate!

  """An array relationship"""
  pokemonmoves(
    """distinct select on columns"""
    distinct_on: [pokemonmove_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonmove_order_by!]

    """filter the rows returned"""
    where: pokemonmove_bool_exp
  ): [pokemonmove!]!

  """An aggregate relationship"""
  pokemonmoves_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonmove_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonmove_order_by!]

    """filter the rows returned"""
    where: pokemonmove_bool_exp
  ): pokemonmove_aggregate!

  """An object relationship"""
  pokemonspecy: pokemonspecies

  """An array relationship"""
  pokemonsprites(
    """distinct select on columns"""
    distinct_on: [pokemonsprites_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonsprites_order_by!]

    """filter the rows returned"""
    where: pokemonsprites_bool_exp
  ): [pokemonsprites!]!

  """An aggregate relationship"""
  pokemonsprites_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonsprites_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonsprites_order_by!]

    """filter the rows returned"""
    where: pokemonsprites_bool_exp
  ): pokemonsprites_aggregate!

  """An array relationship"""
  pokemonstats(
    """distinct select on columns"""
    distinct_on: [pokemonstat_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonstat_order_by!]

    """filter the rows returned"""
    where: pokemonstat_bool_exp
  ): [pokemonstat!]!

  """An aggregate relationship"""
  pokemonstats_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonstat_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonstat_order_by!]

    """filter the rows returned"""
    where: pokemonstat_bool_exp
  ): pokemonstat_aggregate!

  """An array relationship"""
  pokemontypepasts(
    """distinct select on columns"""
    distinct_on: [pokemontypepast_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemontypepast_order_by!]

    """filter the rows returned"""
    where: pokemontypepast_bool_exp
  ): [pokemontypepast!]!

  """An aggregate relationship"""
  pokemontypepasts_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemontypepast_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemontypepast_order_by!]

    """filter the rows returned"""
    where: pokemontypepast_bool_exp
  ): pokemontypepast_aggregate!

  """An array relationship"""
  pokemontypes(
    """distinct select on columns"""
    distinct_on: [pokemontype_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemontype_order_by!]

    """filter the rows returned"""
    where: pokemontype_bool_exp
  ): [pokemontype!]!

  """An aggregate relationship"""
  pokemontypes_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemontype_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemontype_order_by!]

    """filter the rows returned"""
    where: pokemontype_bool_exp
  ): pokemontype_aggregate!
  weight: Int
}

"""
aggregated selection of "pokemon_v2_pokemon"
"""
type pokemon_aggregate {
  aggregate: pokemon_aggregate_fields
  nodes: [pokemon!]!
}

input pokemon_aggregate_bool_exp {
  bool_and: pokemon_aggregate_bool_exp_bool_and
  bool_or: pokemon_aggregate_bool_exp_bool_or
  count: pokemon_aggregate_bool_exp_count
}

input pokemon_aggregate_bool_exp_bool_and {
  arguments: pokemon_select_column_pokemon_aggregate_bool_exp_bool_and_arguments_columns!
  distinct: Boolean
  filter: pokemon_bool_exp
  predicate: Boolean_comparison_exp!
}

input pokemon_aggregate_bool_exp_bool_or {
  arguments: pokemon_select_column_pokemon_aggregate_bool_exp_bool_or_arguments_columns!
  distinct: Boolean
  filter: pokemon_bool_exp
  predicate: Boolean_comparison_exp!
}

input pokemon_aggregate_bool_exp_count {
  arguments: [pokemon_select_column!]
  distinct: Boolean
  filter: pokemon_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_pokemon"
"""
type pokemon_aggregate_fields {
  avg: pokemon_avg_fields
  count(columns: [pokemon_select_column!], distinct: Boolean): Int!
  max: pokemon_max_fields
  min: pokemon_min_fields
  stddev: pokemon_stddev_fields
  stddev_pop: pokemon_stddev_pop_fields
  stddev_samp: pokemon_stddev_samp_fields
  sum: pokemon_sum_fields
  var_pop: pokemon_var_pop_fields
  var_samp: pokemon_var_samp_fields
  variance: pokemon_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_pokemon"
"""
input pokemon_aggregate_order_by {
  avg: pokemon_avg_order_by
  count: order_by
  max: pokemon_max_order_by
  min: pokemon_min_order_by
  stddev: pokemon_stddev_order_by
  stddev_pop: pokemon_stddev_pop_order_by
  stddev_samp: pokemon_stddev_samp_order_by
  sum: pokemon_sum_order_by
  var_pop: pokemon_var_pop_order_by
  var_samp: pokemon_var_samp_order_by
  variance: pokemon_variance_order_by
}

"""aggregate avg on columns"""
type pokemon_avg_fields {
  base_experience: Float
  height: Float
  id: Float
  order: Float
  pokemon_species_id: Float
  weight: Float
}

"""
order by avg() on columns of table "pokemon_v2_pokemon"
"""
input pokemon_avg_order_by {
  base_experience: order_by
  height: order_by
  id: order_by
  order: order_by
  pokemon_species_id: order_by
  weight: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_pokemon". All fields are combined with a logical 'AND'.
"""
input pokemon_bool_exp {
  _and: [pokemon_bool_exp!]
  _not: pokemon_bool_exp
  _or: [pokemon_bool_exp!]
  base_experience: Int_comparison_exp
  encounters: encounter_bool_exp
  encounters_aggregate: encounter_aggregate_bool_exp
  height: Int_comparison_exp
  id: Int_comparison_exp
  is_default: Boolean_comparison_exp
  name: String_comparison_exp
  order: Int_comparison_exp
  pokemon_species_id: Int_comparison_exp
  pokemonabilities: pokemonability_bool_exp
  pokemonabilities_aggregate: pokemonability_aggregate_bool_exp
  pokemonabilitypasts: pokemonabilitypast_bool_exp
  pokemonabilitypasts_aggregate: pokemonabilitypast_aggregate_bool_exp
  pokemoncries: pokemoncries_bool_exp
  pokemoncries_aggregate: pokemoncries_aggregate_bool_exp
  pokemonforms: pokemonform_bool_exp
  pokemonforms_aggregate: pokemonform_aggregate_bool_exp
  pokemongameindices: pokemongameindex_bool_exp
  pokemongameindices_aggregate: pokemongameindex_aggregate_bool_exp
  pokemonitems: pokemonitem_bool_exp
  pokemonitems_aggregate: pokemonitem_aggregate_bool_exp
  pokemonmoves: pokemonmove_bool_exp
  pokemonmoves_aggregate: pokemonmove_aggregate_bool_exp
  pokemonspecy: pokemonspecies_bool_exp
  pokemonsprites: pokemonsprites_bool_exp
  pokemonsprites_aggregate: pokemonsprites_aggregate_bool_exp
  pokemonstats: pokemonstat_bool_exp
  pokemonstats_aggregate: pokemonstat_aggregate_bool_exp
  pokemontypepasts: pokemontypepast_bool_exp
  pokemontypepasts_aggregate: pokemontypepast_aggregate_bool_exp
  pokemontypes: pokemontype_bool_exp
  pokemontypes_aggregate: pokemontype_aggregate_bool_exp
  weight: Int_comparison_exp
}

"""aggregate max on columns"""
type pokemon_max_fields {
  base_experience: Int
  height: Int
  id: Int
  name: String
  order: Int
  pokemon_species_id: Int
  weight: Int
}

"""
order by max() on columns of table "pokemon_v2_pokemon"
"""
input pokemon_max_order_by {
  base_experience: order_by
  height: order_by
  id: order_by
  name: order_by
  order: order_by
  pokemon_species_id: order_by
  weight: order_by
}

"""aggregate min on columns"""
type pokemon_min_fields {
  base_experience: Int
  height: Int
  id: Int
  name: String
  order: Int
  pokemon_species_id: Int
  weight: Int
}

"""
order by min() on columns of table "pokemon_v2_pokemon"
"""
input pokemon_min_order_by {
  base_experience: order_by
  height: order_by
  id: order_by
  name: order_by
  order: order_by
  pokemon_species_id: order_by
  weight: order_by
}

"""Ordering options when selecting data from "pokemon_v2_pokemon"."""
input pokemon_order_by {
  base_experience: order_by
  encounters_aggregate: encounter_aggregate_order_by
  height: order_by
  id: order_by
  is_default: order_by
  name: order_by
  order: order_by
  pokemon_species_id: order_by
  pokemonabilities_aggregate: pokemonability_aggregate_order_by
  pokemonabilitypasts_aggregate: pokemonabilitypast_aggregate_order_by
  pokemoncries_aggregate: pokemoncries_aggregate_order_by
  pokemonforms_aggregate: pokemonform_aggregate_order_by
  pokemongameindices_aggregate: pokemongameindex_aggregate_order_by
  pokemonitems_aggregate: pokemonitem_aggregate_order_by
  pokemonmoves_aggregate: pokemonmove_aggregate_order_by
  pokemonspecy: pokemonspecies_order_by
  pokemonsprites_aggregate: pokemonsprites_aggregate_order_by
  pokemonstats_aggregate: pokemonstat_aggregate_order_by
  pokemontypepasts_aggregate: pokemontypepast_aggregate_order_by
  pokemontypes_aggregate: pokemontype_aggregate_order_by
  weight: order_by
}

"""
select columns of table "pokemon_v2_pokemon"
"""
enum pokemon_select_column {
  """column name"""
  base_experience

  """column name"""
  height

  """column name"""
  id

  """column name"""
  is_default

  """column name"""
  name

  """column name"""
  order

  """column name"""
  pokemon_species_id

  """column name"""
  weight
}

"""
select "pokemon_aggregate_bool_exp_bool_and_arguments_columns" columns of table "pokemon_v2_pokemon"
"""
enum pokemon_select_column_pokemon_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
  is_default
}

"""
select "pokemon_aggregate_bool_exp_bool_or_arguments_columns" columns of table "pokemon_v2_pokemon"
"""
enum pokemon_select_column_pokemon_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
  is_default
}

"""aggregate stddev on columns"""
type pokemon_stddev_fields {
  base_experience: Float
  height: Float
  id: Float
  order: Float
  pokemon_species_id: Float
  weight: Float
}

"""
order by stddev() on columns of table "pokemon_v2_pokemon"
"""
input pokemon_stddev_order_by {
  base_experience: order_by
  height: order_by
  id: order_by
  order: order_by
  pokemon_species_id: order_by
  weight: order_by
}

"""aggregate stddev_pop on columns"""
type pokemon_stddev_pop_fields {
  base_experience: Float
  height: Float
  id: Float
  order: Float
  pokemon_species_id: Float
  weight: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_pokemon"
"""
input pokemon_stddev_pop_order_by {
  base_experience: order_by
  height: order_by
  id: order_by
  order: order_by
  pokemon_species_id: order_by
  weight: order_by
}

"""aggregate stddev_samp on columns"""
type pokemon_stddev_samp_fields {
  base_experience: Float
  height: Float
  id: Float
  order: Float
  pokemon_species_id: Float
  weight: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_pokemon"
"""
input pokemon_stddev_samp_order_by {
  base_experience: order_by
  height: order_by
  id: order_by
  order: order_by
  pokemon_species_id: order_by
  weight: order_by
}

"""aggregate sum on columns"""
type pokemon_sum_fields {
  base_experience: Int
  height: Int
  id: Int
  order: Int
  pokemon_species_id: Int
  weight: Int
}

"""
order by sum() on columns of table "pokemon_v2_pokemon"
"""
input pokemon_sum_order_by {
  base_experience: order_by
  height: order_by
  id: order_by
  order: order_by
  pokemon_species_id: order_by
  weight: order_by
}

"""aggregate var_pop on columns"""
type pokemon_var_pop_fields {
  base_experience: Float
  height: Float
  id: Float
  order: Float
  pokemon_species_id: Float
  weight: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_pokemon"
"""
input pokemon_var_pop_order_by {
  base_experience: order_by
  height: order_by
  id: order_by
  order: order_by
  pokemon_species_id: order_by
  weight: order_by
}

"""aggregate var_samp on columns"""
type pokemon_var_samp_fields {
  base_experience: Float
  height: Float
  id: Float
  order: Float
  pokemon_species_id: Float
  weight: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_pokemon"
"""
input pokemon_var_samp_order_by {
  base_experience: order_by
  height: order_by
  id: order_by
  order: order_by
  pokemon_species_id: order_by
  weight: order_by
}

"""aggregate variance on columns"""
type pokemon_variance_fields {
  base_experience: Float
  height: Float
  id: Float
  order: Float
  pokemon_species_id: Float
  weight: Float
}

"""
order by variance() on columns of table "pokemon_v2_pokemon"
"""
input pokemon_variance_order_by {
  base_experience: order_by
  height: order_by
  id: order_by
  order: order_by
  pokemon_species_id: order_by
  weight: order_by
}

"""
columns and relationships of "pokemon_v2_pokemonability"
"""
type pokemonability {
  """An object relationship"""
  ability: ability
  ability_id: Int
  id: Int!
  is_hidden: Boolean!

  """An object relationship"""
  pokemon: pokemon
  pokemon_id: Int
  slot: Int!
}

"""
aggregated selection of "pokemon_v2_pokemonability"
"""
type pokemonability_aggregate {
  aggregate: pokemonability_aggregate_fields
  nodes: [pokemonability!]!
}

input pokemonability_aggregate_bool_exp {
  bool_and: pokemonability_aggregate_bool_exp_bool_and
  bool_or: pokemonability_aggregate_bool_exp_bool_or
  count: pokemonability_aggregate_bool_exp_count
}

input pokemonability_aggregate_bool_exp_bool_and {
  arguments: pokemonability_select_column_pokemonability_aggregate_bool_exp_bool_and_arguments_columns!
  distinct: Boolean
  filter: pokemonability_bool_exp
  predicate: Boolean_comparison_exp!
}

input pokemonability_aggregate_bool_exp_bool_or {
  arguments: pokemonability_select_column_pokemonability_aggregate_bool_exp_bool_or_arguments_columns!
  distinct: Boolean
  filter: pokemonability_bool_exp
  predicate: Boolean_comparison_exp!
}

input pokemonability_aggregate_bool_exp_count {
  arguments: [pokemonability_select_column!]
  distinct: Boolean
  filter: pokemonability_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_pokemonability"
"""
type pokemonability_aggregate_fields {
  avg: pokemonability_avg_fields
  count(columns: [pokemonability_select_column!], distinct: Boolean): Int!
  max: pokemonability_max_fields
  min: pokemonability_min_fields
  stddev: pokemonability_stddev_fields
  stddev_pop: pokemonability_stddev_pop_fields
  stddev_samp: pokemonability_stddev_samp_fields
  sum: pokemonability_sum_fields
  var_pop: pokemonability_var_pop_fields
  var_samp: pokemonability_var_samp_fields
  variance: pokemonability_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_pokemonability"
"""
input pokemonability_aggregate_order_by {
  avg: pokemonability_avg_order_by
  count: order_by
  max: pokemonability_max_order_by
  min: pokemonability_min_order_by
  stddev: pokemonability_stddev_order_by
  stddev_pop: pokemonability_stddev_pop_order_by
  stddev_samp: pokemonability_stddev_samp_order_by
  sum: pokemonability_sum_order_by
  var_pop: pokemonability_var_pop_order_by
  var_samp: pokemonability_var_samp_order_by
  variance: pokemonability_variance_order_by
}

"""aggregate avg on columns"""
type pokemonability_avg_fields {
  ability_id: Float
  id: Float
  pokemon_id: Float
  slot: Float
}

"""
order by avg() on columns of table "pokemon_v2_pokemonability"
"""
input pokemonability_avg_order_by {
  ability_id: order_by
  id: order_by
  pokemon_id: order_by
  slot: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_pokemonability". All fields are combined with a logical 'AND'.
"""
input pokemonability_bool_exp {
  _and: [pokemonability_bool_exp!]
  _not: pokemonability_bool_exp
  _or: [pokemonability_bool_exp!]
  ability: ability_bool_exp
  ability_id: Int_comparison_exp
  id: Int_comparison_exp
  is_hidden: Boolean_comparison_exp
  pokemon: pokemon_bool_exp
  pokemon_id: Int_comparison_exp
  slot: Int_comparison_exp
}

"""aggregate max on columns"""
type pokemonability_max_fields {
  ability_id: Int
  id: Int
  pokemon_id: Int
  slot: Int
}

"""
order by max() on columns of table "pokemon_v2_pokemonability"
"""
input pokemonability_max_order_by {
  ability_id: order_by
  id: order_by
  pokemon_id: order_by
  slot: order_by
}

"""aggregate min on columns"""
type pokemonability_min_fields {
  ability_id: Int
  id: Int
  pokemon_id: Int
  slot: Int
}

"""
order by min() on columns of table "pokemon_v2_pokemonability"
"""
input pokemonability_min_order_by {
  ability_id: order_by
  id: order_by
  pokemon_id: order_by
  slot: order_by
}

"""Ordering options when selecting data from "pokemon_v2_pokemonability"."""
input pokemonability_order_by {
  ability: ability_order_by
  ability_id: order_by
  id: order_by
  is_hidden: order_by
  pokemon: pokemon_order_by
  pokemon_id: order_by
  slot: order_by
}

"""
select columns of table "pokemon_v2_pokemonability"
"""
enum pokemonability_select_column {
  """column name"""
  ability_id

  """column name"""
  id

  """column name"""
  is_hidden

  """column name"""
  pokemon_id

  """column name"""
  slot
}

"""
select "pokemonability_aggregate_bool_exp_bool_and_arguments_columns" columns of table "pokemon_v2_pokemonability"
"""
enum pokemonability_select_column_pokemonability_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
  is_hidden
}

"""
select "pokemonability_aggregate_bool_exp_bool_or_arguments_columns" columns of table "pokemon_v2_pokemonability"
"""
enum pokemonability_select_column_pokemonability_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
  is_hidden
}

"""aggregate stddev on columns"""
type pokemonability_stddev_fields {
  ability_id: Float
  id: Float
  pokemon_id: Float
  slot: Float
}

"""
order by stddev() on columns of table "pokemon_v2_pokemonability"
"""
input pokemonability_stddev_order_by {
  ability_id: order_by
  id: order_by
  pokemon_id: order_by
  slot: order_by
}

"""aggregate stddev_pop on columns"""
type pokemonability_stddev_pop_fields {
  ability_id: Float
  id: Float
  pokemon_id: Float
  slot: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_pokemonability"
"""
input pokemonability_stddev_pop_order_by {
  ability_id: order_by
  id: order_by
  pokemon_id: order_by
  slot: order_by
}

"""aggregate stddev_samp on columns"""
type pokemonability_stddev_samp_fields {
  ability_id: Float
  id: Float
  pokemon_id: Float
  slot: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_pokemonability"
"""
input pokemonability_stddev_samp_order_by {
  ability_id: order_by
  id: order_by
  pokemon_id: order_by
  slot: order_by
}

"""aggregate sum on columns"""
type pokemonability_sum_fields {
  ability_id: Int
  id: Int
  pokemon_id: Int
  slot: Int
}

"""
order by sum() on columns of table "pokemon_v2_pokemonability"
"""
input pokemonability_sum_order_by {
  ability_id: order_by
  id: order_by
  pokemon_id: order_by
  slot: order_by
}

"""aggregate var_pop on columns"""
type pokemonability_var_pop_fields {
  ability_id: Float
  id: Float
  pokemon_id: Float
  slot: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_pokemonability"
"""
input pokemonability_var_pop_order_by {
  ability_id: order_by
  id: order_by
  pokemon_id: order_by
  slot: order_by
}

"""aggregate var_samp on columns"""
type pokemonability_var_samp_fields {
  ability_id: Float
  id: Float
  pokemon_id: Float
  slot: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_pokemonability"
"""
input pokemonability_var_samp_order_by {
  ability_id: order_by
  id: order_by
  pokemon_id: order_by
  slot: order_by
}

"""aggregate variance on columns"""
type pokemonability_variance_fields {
  ability_id: Float
  id: Float
  pokemon_id: Float
  slot: Float
}

"""
order by variance() on columns of table "pokemon_v2_pokemonability"
"""
input pokemonability_variance_order_by {
  ability_id: order_by
  id: order_by
  pokemon_id: order_by
  slot: order_by
}

"""
columns and relationships of "pokemon_v2_pokemonabilitypast"
"""
type pokemonabilitypast {
  """An object relationship"""
  ability: ability
  ability_id: Int

  """An object relationship"""
  generation: generation
  generation_id: Int
  id: Int!
  is_hidden: Boolean!

  """An object relationship"""
  pokemon: pokemon
  pokemon_id: Int
  slot: Int!
}

"""
aggregated selection of "pokemon_v2_pokemonabilitypast"
"""
type pokemonabilitypast_aggregate {
  aggregate: pokemonabilitypast_aggregate_fields
  nodes: [pokemonabilitypast!]!
}

input pokemonabilitypast_aggregate_bool_exp {
  bool_and: pokemonabilitypast_aggregate_bool_exp_bool_and
  bool_or: pokemonabilitypast_aggregate_bool_exp_bool_or
  count: pokemonabilitypast_aggregate_bool_exp_count
}

input pokemonabilitypast_aggregate_bool_exp_bool_and {
  arguments: pokemonabilitypast_select_column_pokemonabilitypast_aggregate_bool_exp_bool_and_arguments_columns!
  distinct: Boolean
  filter: pokemonabilitypast_bool_exp
  predicate: Boolean_comparison_exp!
}

input pokemonabilitypast_aggregate_bool_exp_bool_or {
  arguments: pokemonabilitypast_select_column_pokemonabilitypast_aggregate_bool_exp_bool_or_arguments_columns!
  distinct: Boolean
  filter: pokemonabilitypast_bool_exp
  predicate: Boolean_comparison_exp!
}

input pokemonabilitypast_aggregate_bool_exp_count {
  arguments: [pokemonabilitypast_select_column!]
  distinct: Boolean
  filter: pokemonabilitypast_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_pokemonabilitypast"
"""
type pokemonabilitypast_aggregate_fields {
  avg: pokemonabilitypast_avg_fields
  count(columns: [pokemonabilitypast_select_column!], distinct: Boolean): Int!
  max: pokemonabilitypast_max_fields
  min: pokemonabilitypast_min_fields
  stddev: pokemonabilitypast_stddev_fields
  stddev_pop: pokemonabilitypast_stddev_pop_fields
  stddev_samp: pokemonabilitypast_stddev_samp_fields
  sum: pokemonabilitypast_sum_fields
  var_pop: pokemonabilitypast_var_pop_fields
  var_samp: pokemonabilitypast_var_samp_fields
  variance: pokemonabilitypast_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_pokemonabilitypast"
"""
input pokemonabilitypast_aggregate_order_by {
  avg: pokemonabilitypast_avg_order_by
  count: order_by
  max: pokemonabilitypast_max_order_by
  min: pokemonabilitypast_min_order_by
  stddev: pokemonabilitypast_stddev_order_by
  stddev_pop: pokemonabilitypast_stddev_pop_order_by
  stddev_samp: pokemonabilitypast_stddev_samp_order_by
  sum: pokemonabilitypast_sum_order_by
  var_pop: pokemonabilitypast_var_pop_order_by
  var_samp: pokemonabilitypast_var_samp_order_by
  variance: pokemonabilitypast_variance_order_by
}

"""aggregate avg on columns"""
type pokemonabilitypast_avg_fields {
  ability_id: Float
  generation_id: Float
  id: Float
  pokemon_id: Float
  slot: Float
}

"""
order by avg() on columns of table "pokemon_v2_pokemonabilitypast"
"""
input pokemonabilitypast_avg_order_by {
  ability_id: order_by
  generation_id: order_by
  id: order_by
  pokemon_id: order_by
  slot: order_by
}

"""
Boolean expression to filter rows from the table
"pokemon_v2_pokemonabilitypast". All fields are combined with a logical 'AND'.
"""
input pokemonabilitypast_bool_exp {
  _and: [pokemonabilitypast_bool_exp!]
  _not: pokemonabilitypast_bool_exp
  _or: [pokemonabilitypast_bool_exp!]
  ability: ability_bool_exp
  ability_id: Int_comparison_exp
  generation: generation_bool_exp
  generation_id: Int_comparison_exp
  id: Int_comparison_exp
  is_hidden: Boolean_comparison_exp
  pokemon: pokemon_bool_exp
  pokemon_id: Int_comparison_exp
  slot: Int_comparison_exp
}

"""aggregate max on columns"""
type pokemonabilitypast_max_fields {
  ability_id: Int
  generation_id: Int
  id: Int
  pokemon_id: Int
  slot: Int
}

"""
order by max() on columns of table "pokemon_v2_pokemonabilitypast"
"""
input pokemonabilitypast_max_order_by {
  ability_id: order_by
  generation_id: order_by
  id: order_by
  pokemon_id: order_by
  slot: order_by
}

"""aggregate min on columns"""
type pokemonabilitypast_min_fields {
  ability_id: Int
  generation_id: Int
  id: Int
  pokemon_id: Int
  slot: Int
}

"""
order by min() on columns of table "pokemon_v2_pokemonabilitypast"
"""
input pokemonabilitypast_min_order_by {
  ability_id: order_by
  generation_id: order_by
  id: order_by
  pokemon_id: order_by
  slot: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_pokemonabilitypast".
"""
input pokemonabilitypast_order_by {
  ability: ability_order_by
  ability_id: order_by
  generation: generation_order_by
  generation_id: order_by
  id: order_by
  is_hidden: order_by
  pokemon: pokemon_order_by
  pokemon_id: order_by
  slot: order_by
}

"""
select columns of table "pokemon_v2_pokemonabilitypast"
"""
enum pokemonabilitypast_select_column {
  """column name"""
  ability_id

  """column name"""
  generation_id

  """column name"""
  id

  """column name"""
  is_hidden

  """column name"""
  pokemon_id

  """column name"""
  slot
}

"""
select "pokemonabilitypast_aggregate_bool_exp_bool_and_arguments_columns" columns of table "pokemon_v2_pokemonabilitypast"
"""
enum pokemonabilitypast_select_column_pokemonabilitypast_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
  is_hidden
}

"""
select "pokemonabilitypast_aggregate_bool_exp_bool_or_arguments_columns" columns of table "pokemon_v2_pokemonabilitypast"
"""
enum pokemonabilitypast_select_column_pokemonabilitypast_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
  is_hidden
}

"""aggregate stddev on columns"""
type pokemonabilitypast_stddev_fields {
  ability_id: Float
  generation_id: Float
  id: Float
  pokemon_id: Float
  slot: Float
}

"""
order by stddev() on columns of table "pokemon_v2_pokemonabilitypast"
"""
input pokemonabilitypast_stddev_order_by {
  ability_id: order_by
  generation_id: order_by
  id: order_by
  pokemon_id: order_by
  slot: order_by
}

"""aggregate stddev_pop on columns"""
type pokemonabilitypast_stddev_pop_fields {
  ability_id: Float
  generation_id: Float
  id: Float
  pokemon_id: Float
  slot: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_pokemonabilitypast"
"""
input pokemonabilitypast_stddev_pop_order_by {
  ability_id: order_by
  generation_id: order_by
  id: order_by
  pokemon_id: order_by
  slot: order_by
}

"""aggregate stddev_samp on columns"""
type pokemonabilitypast_stddev_samp_fields {
  ability_id: Float
  generation_id: Float
  id: Float
  pokemon_id: Float
  slot: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_pokemonabilitypast"
"""
input pokemonabilitypast_stddev_samp_order_by {
  ability_id: order_by
  generation_id: order_by
  id: order_by
  pokemon_id: order_by
  slot: order_by
}

"""aggregate sum on columns"""
type pokemonabilitypast_sum_fields {
  ability_id: Int
  generation_id: Int
  id: Int
  pokemon_id: Int
  slot: Int
}

"""
order by sum() on columns of table "pokemon_v2_pokemonabilitypast"
"""
input pokemonabilitypast_sum_order_by {
  ability_id: order_by
  generation_id: order_by
  id: order_by
  pokemon_id: order_by
  slot: order_by
}

"""aggregate var_pop on columns"""
type pokemonabilitypast_var_pop_fields {
  ability_id: Float
  generation_id: Float
  id: Float
  pokemon_id: Float
  slot: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_pokemonabilitypast"
"""
input pokemonabilitypast_var_pop_order_by {
  ability_id: order_by
  generation_id: order_by
  id: order_by
  pokemon_id: order_by
  slot: order_by
}

"""aggregate var_samp on columns"""
type pokemonabilitypast_var_samp_fields {
  ability_id: Float
  generation_id: Float
  id: Float
  pokemon_id: Float
  slot: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_pokemonabilitypast"
"""
input pokemonabilitypast_var_samp_order_by {
  ability_id: order_by
  generation_id: order_by
  id: order_by
  pokemon_id: order_by
  slot: order_by
}

"""aggregate variance on columns"""
type pokemonabilitypast_variance_fields {
  ability_id: Float
  generation_id: Float
  id: Float
  pokemon_id: Float
  slot: Float
}

"""
order by variance() on columns of table "pokemon_v2_pokemonabilitypast"
"""
input pokemonabilitypast_variance_order_by {
  ability_id: order_by
  generation_id: order_by
  id: order_by
  pokemon_id: order_by
  slot: order_by
}

"""
columns and relationships of "pokemon_v2_pokemoncolor"
"""
type pokemoncolor {
  id: Int!
  name: String!

  """An array relationship"""
  pokemoncolornames(
    """distinct select on columns"""
    distinct_on: [pokemoncolorname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemoncolorname_order_by!]

    """filter the rows returned"""
    where: pokemoncolorname_bool_exp
  ): [pokemoncolorname!]!

  """An aggregate relationship"""
  pokemoncolornames_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemoncolorname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemoncolorname_order_by!]

    """filter the rows returned"""
    where: pokemoncolorname_bool_exp
  ): pokemoncolorname_aggregate!

  """An array relationship"""
  pokemonspecies(
    """distinct select on columns"""
    distinct_on: [pokemonspecies_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonspecies_order_by!]

    """filter the rows returned"""
    where: pokemonspecies_bool_exp
  ): [pokemonspecies!]!

  """An aggregate relationship"""
  pokemonspecies_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonspecies_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonspecies_order_by!]

    """filter the rows returned"""
    where: pokemonspecies_bool_exp
  ): pokemonspecies_aggregate!
}

"""
aggregated selection of "pokemon_v2_pokemoncolor"
"""
type pokemoncolor_aggregate {
  aggregate: pokemoncolor_aggregate_fields
  nodes: [pokemoncolor!]!
}

"""
aggregate fields of "pokemon_v2_pokemoncolor"
"""
type pokemoncolor_aggregate_fields {
  avg: pokemoncolor_avg_fields
  count(columns: [pokemoncolor_select_column!], distinct: Boolean): Int!
  max: pokemoncolor_max_fields
  min: pokemoncolor_min_fields
  stddev: pokemoncolor_stddev_fields
  stddev_pop: pokemoncolor_stddev_pop_fields
  stddev_samp: pokemoncolor_stddev_samp_fields
  sum: pokemoncolor_sum_fields
  var_pop: pokemoncolor_var_pop_fields
  var_samp: pokemoncolor_var_samp_fields
  variance: pokemoncolor_variance_fields
}

"""aggregate avg on columns"""
type pokemoncolor_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "pokemon_v2_pokemoncolor". All fields are combined with a logical 'AND'.
"""
input pokemoncolor_bool_exp {
  _and: [pokemoncolor_bool_exp!]
  _not: pokemoncolor_bool_exp
  _or: [pokemoncolor_bool_exp!]
  id: Int_comparison_exp
  name: String_comparison_exp
  pokemoncolornames: pokemoncolorname_bool_exp
  pokemoncolornames_aggregate: pokemoncolorname_aggregate_bool_exp
  pokemonspecies: pokemonspecies_bool_exp
  pokemonspecies_aggregate: pokemonspecies_aggregate_bool_exp
}

"""aggregate max on columns"""
type pokemoncolor_max_fields {
  id: Int
  name: String
}

"""aggregate min on columns"""
type pokemoncolor_min_fields {
  id: Int
  name: String
}

"""Ordering options when selecting data from "pokemon_v2_pokemoncolor"."""
input pokemoncolor_order_by {
  id: order_by
  name: order_by
  pokemoncolornames_aggregate: pokemoncolorname_aggregate_order_by
  pokemonspecies_aggregate: pokemonspecies_aggregate_order_by
}

"""
select columns of table "pokemon_v2_pokemoncolor"
"""
enum pokemoncolor_select_column {
  """column name"""
  id

  """column name"""
  name
}

"""aggregate stddev on columns"""
type pokemoncolor_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type pokemoncolor_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type pokemoncolor_stddev_samp_fields {
  id: Float
}

"""aggregate sum on columns"""
type pokemoncolor_sum_fields {
  id: Int
}

"""aggregate var_pop on columns"""
type pokemoncolor_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type pokemoncolor_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type pokemoncolor_variance_fields {
  id: Float
}

"""
columns and relationships of "pokemon_v2_pokemoncolorname"
"""
type pokemoncolorname {
  id: Int!

  """An object relationship"""
  language: language
  language_id: Int
  name: String!
  pokemon_color_id: Int

  """An object relationship"""
  pokemoncolor: pokemoncolor
}

"""
aggregated selection of "pokemon_v2_pokemoncolorname"
"""
type pokemoncolorname_aggregate {
  aggregate: pokemoncolorname_aggregate_fields
  nodes: [pokemoncolorname!]!
}

input pokemoncolorname_aggregate_bool_exp {
  count: pokemoncolorname_aggregate_bool_exp_count
}

input pokemoncolorname_aggregate_bool_exp_count {
  arguments: [pokemoncolorname_select_column!]
  distinct: Boolean
  filter: pokemoncolorname_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_pokemoncolorname"
"""
type pokemoncolorname_aggregate_fields {
  avg: pokemoncolorname_avg_fields
  count(columns: [pokemoncolorname_select_column!], distinct: Boolean): Int!
  max: pokemoncolorname_max_fields
  min: pokemoncolorname_min_fields
  stddev: pokemoncolorname_stddev_fields
  stddev_pop: pokemoncolorname_stddev_pop_fields
  stddev_samp: pokemoncolorname_stddev_samp_fields
  sum: pokemoncolorname_sum_fields
  var_pop: pokemoncolorname_var_pop_fields
  var_samp: pokemoncolorname_var_samp_fields
  variance: pokemoncolorname_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_pokemoncolorname"
"""
input pokemoncolorname_aggregate_order_by {
  avg: pokemoncolorname_avg_order_by
  count: order_by
  max: pokemoncolorname_max_order_by
  min: pokemoncolorname_min_order_by
  stddev: pokemoncolorname_stddev_order_by
  stddev_pop: pokemoncolorname_stddev_pop_order_by
  stddev_samp: pokemoncolorname_stddev_samp_order_by
  sum: pokemoncolorname_sum_order_by
  var_pop: pokemoncolorname_var_pop_order_by
  var_samp: pokemoncolorname_var_samp_order_by
  variance: pokemoncolorname_variance_order_by
}

"""aggregate avg on columns"""
type pokemoncolorname_avg_fields {
  id: Float
  language_id: Float
  pokemon_color_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_pokemoncolorname"
"""
input pokemoncolorname_avg_order_by {
  id: order_by
  language_id: order_by
  pokemon_color_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_pokemoncolorname".
All fields are combined with a logical 'AND'.
"""
input pokemoncolorname_bool_exp {
  _and: [pokemoncolorname_bool_exp!]
  _not: pokemoncolorname_bool_exp
  _or: [pokemoncolorname_bool_exp!]
  id: Int_comparison_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
  name: String_comparison_exp
  pokemon_color_id: Int_comparison_exp
  pokemoncolor: pokemoncolor_bool_exp
}

"""aggregate max on columns"""
type pokemoncolorname_max_fields {
  id: Int
  language_id: Int
  name: String
  pokemon_color_id: Int
}

"""
order by max() on columns of table "pokemon_v2_pokemoncolorname"
"""
input pokemoncolorname_max_order_by {
  id: order_by
  language_id: order_by
  name: order_by
  pokemon_color_id: order_by
}

"""aggregate min on columns"""
type pokemoncolorname_min_fields {
  id: Int
  language_id: Int
  name: String
  pokemon_color_id: Int
}

"""
order by min() on columns of table "pokemon_v2_pokemoncolorname"
"""
input pokemoncolorname_min_order_by {
  id: order_by
  language_id: order_by
  name: order_by
  pokemon_color_id: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_pokemoncolorname".
"""
input pokemoncolorname_order_by {
  id: order_by
  language: language_order_by
  language_id: order_by
  name: order_by
  pokemon_color_id: order_by
  pokemoncolor: pokemoncolor_order_by
}

"""
select columns of table "pokemon_v2_pokemoncolorname"
"""
enum pokemoncolorname_select_column {
  """column name"""
  id

  """column name"""
  language_id

  """column name"""
  name

  """column name"""
  pokemon_color_id
}

"""aggregate stddev on columns"""
type pokemoncolorname_stddev_fields {
  id: Float
  language_id: Float
  pokemon_color_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_pokemoncolorname"
"""
input pokemoncolorname_stddev_order_by {
  id: order_by
  language_id: order_by
  pokemon_color_id: order_by
}

"""aggregate stddev_pop on columns"""
type pokemoncolorname_stddev_pop_fields {
  id: Float
  language_id: Float
  pokemon_color_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_pokemoncolorname"
"""
input pokemoncolorname_stddev_pop_order_by {
  id: order_by
  language_id: order_by
  pokemon_color_id: order_by
}

"""aggregate stddev_samp on columns"""
type pokemoncolorname_stddev_samp_fields {
  id: Float
  language_id: Float
  pokemon_color_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_pokemoncolorname"
"""
input pokemoncolorname_stddev_samp_order_by {
  id: order_by
  language_id: order_by
  pokemon_color_id: order_by
}

"""aggregate sum on columns"""
type pokemoncolorname_sum_fields {
  id: Int
  language_id: Int
  pokemon_color_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_pokemoncolorname"
"""
input pokemoncolorname_sum_order_by {
  id: order_by
  language_id: order_by
  pokemon_color_id: order_by
}

"""aggregate var_pop on columns"""
type pokemoncolorname_var_pop_fields {
  id: Float
  language_id: Float
  pokemon_color_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_pokemoncolorname"
"""
input pokemoncolorname_var_pop_order_by {
  id: order_by
  language_id: order_by
  pokemon_color_id: order_by
}

"""aggregate var_samp on columns"""
type pokemoncolorname_var_samp_fields {
  id: Float
  language_id: Float
  pokemon_color_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_pokemoncolorname"
"""
input pokemoncolorname_var_samp_order_by {
  id: order_by
  language_id: order_by
  pokemon_color_id: order_by
}

"""aggregate variance on columns"""
type pokemoncolorname_variance_fields {
  id: Float
  language_id: Float
  pokemon_color_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_pokemoncolorname"
"""
input pokemoncolorname_variance_order_by {
  id: order_by
  language_id: order_by
  pokemon_color_id: order_by
}

"""
columns and relationships of "pokemon_v2_pokemoncries"
"""
type pokemoncries {
  cries(
    """JSON select path"""
    path: String
  ): jsonb!
  id: Int!

  """An object relationship"""
  pokemon: pokemon
  pokemon_id: Int
}

"""
aggregated selection of "pokemon_v2_pokemoncries"
"""
type pokemoncries_aggregate {
  aggregate: pokemoncries_aggregate_fields
  nodes: [pokemoncries!]!
}

input pokemoncries_aggregate_bool_exp {
  count: pokemoncries_aggregate_bool_exp_count
}

input pokemoncries_aggregate_bool_exp_count {
  arguments: [pokemoncries_select_column!]
  distinct: Boolean
  filter: pokemoncries_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_pokemoncries"
"""
type pokemoncries_aggregate_fields {
  avg: pokemoncries_avg_fields
  count(columns: [pokemoncries_select_column!], distinct: Boolean): Int!
  max: pokemoncries_max_fields
  min: pokemoncries_min_fields
  stddev: pokemoncries_stddev_fields
  stddev_pop: pokemoncries_stddev_pop_fields
  stddev_samp: pokemoncries_stddev_samp_fields
  sum: pokemoncries_sum_fields
  var_pop: pokemoncries_var_pop_fields
  var_samp: pokemoncries_var_samp_fields
  variance: pokemoncries_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_pokemoncries"
"""
input pokemoncries_aggregate_order_by {
  avg: pokemoncries_avg_order_by
  count: order_by
  max: pokemoncries_max_order_by
  min: pokemoncries_min_order_by
  stddev: pokemoncries_stddev_order_by
  stddev_pop: pokemoncries_stddev_pop_order_by
  stddev_samp: pokemoncries_stddev_samp_order_by
  sum: pokemoncries_sum_order_by
  var_pop: pokemoncries_var_pop_order_by
  var_samp: pokemoncries_var_samp_order_by
  variance: pokemoncries_variance_order_by
}

"""aggregate avg on columns"""
type pokemoncries_avg_fields {
  id: Float
  pokemon_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_pokemoncries"
"""
input pokemoncries_avg_order_by {
  id: order_by
  pokemon_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_pokemoncries". All fields are combined with a logical 'AND'.
"""
input pokemoncries_bool_exp {
  _and: [pokemoncries_bool_exp!]
  _not: pokemoncries_bool_exp
  _or: [pokemoncries_bool_exp!]
  cries: jsonb_comparison_exp
  id: Int_comparison_exp
  pokemon: pokemon_bool_exp
  pokemon_id: Int_comparison_exp
}

"""aggregate max on columns"""
type pokemoncries_max_fields {
  id: Int
  pokemon_id: Int
}

"""
order by max() on columns of table "pokemon_v2_pokemoncries"
"""
input pokemoncries_max_order_by {
  id: order_by
  pokemon_id: order_by
}

"""aggregate min on columns"""
type pokemoncries_min_fields {
  id: Int
  pokemon_id: Int
}

"""
order by min() on columns of table "pokemon_v2_pokemoncries"
"""
input pokemoncries_min_order_by {
  id: order_by
  pokemon_id: order_by
}

"""Ordering options when selecting data from "pokemon_v2_pokemoncries"."""
input pokemoncries_order_by {
  cries: order_by
  id: order_by
  pokemon: pokemon_order_by
  pokemon_id: order_by
}

"""
select columns of table "pokemon_v2_pokemoncries"
"""
enum pokemoncries_select_column {
  """column name"""
  cries

  """column name"""
  id

  """column name"""
  pokemon_id
}

"""aggregate stddev on columns"""
type pokemoncries_stddev_fields {
  id: Float
  pokemon_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_pokemoncries"
"""
input pokemoncries_stddev_order_by {
  id: order_by
  pokemon_id: order_by
}

"""aggregate stddev_pop on columns"""
type pokemoncries_stddev_pop_fields {
  id: Float
  pokemon_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_pokemoncries"
"""
input pokemoncries_stddev_pop_order_by {
  id: order_by
  pokemon_id: order_by
}

"""aggregate stddev_samp on columns"""
type pokemoncries_stddev_samp_fields {
  id: Float
  pokemon_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_pokemoncries"
"""
input pokemoncries_stddev_samp_order_by {
  id: order_by
  pokemon_id: order_by
}

"""aggregate sum on columns"""
type pokemoncries_sum_fields {
  id: Int
  pokemon_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_pokemoncries"
"""
input pokemoncries_sum_order_by {
  id: order_by
  pokemon_id: order_by
}

"""aggregate var_pop on columns"""
type pokemoncries_var_pop_fields {
  id: Float
  pokemon_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_pokemoncries"
"""
input pokemoncries_var_pop_order_by {
  id: order_by
  pokemon_id: order_by
}

"""aggregate var_samp on columns"""
type pokemoncries_var_samp_fields {
  id: Float
  pokemon_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_pokemoncries"
"""
input pokemoncries_var_samp_order_by {
  id: order_by
  pokemon_id: order_by
}

"""aggregate variance on columns"""
type pokemoncries_variance_fields {
  id: Float
  pokemon_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_pokemoncries"
"""
input pokemoncries_variance_order_by {
  id: order_by
  pokemon_id: order_by
}

"""
columns and relationships of "pokemon_v2_pokemondexnumber"
"""
type pokemondexnumber {
  id: Int!

  """An object relationship"""
  pokedex: pokedex
  pokedex_id: Int
  pokedex_number: Int!
  pokemon_species_id: Int

  """An object relationship"""
  pokemonspecy: pokemonspecies
}

"""
aggregated selection of "pokemon_v2_pokemondexnumber"
"""
type pokemondexnumber_aggregate {
  aggregate: pokemondexnumber_aggregate_fields
  nodes: [pokemondexnumber!]!
}

input pokemondexnumber_aggregate_bool_exp {
  count: pokemondexnumber_aggregate_bool_exp_count
}

input pokemondexnumber_aggregate_bool_exp_count {
  arguments: [pokemondexnumber_select_column!]
  distinct: Boolean
  filter: pokemondexnumber_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_pokemondexnumber"
"""
type pokemondexnumber_aggregate_fields {
  avg: pokemondexnumber_avg_fields
  count(columns: [pokemondexnumber_select_column!], distinct: Boolean): Int!
  max: pokemondexnumber_max_fields
  min: pokemondexnumber_min_fields
  stddev: pokemondexnumber_stddev_fields
  stddev_pop: pokemondexnumber_stddev_pop_fields
  stddev_samp: pokemondexnumber_stddev_samp_fields
  sum: pokemondexnumber_sum_fields
  var_pop: pokemondexnumber_var_pop_fields
  var_samp: pokemondexnumber_var_samp_fields
  variance: pokemondexnumber_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_pokemondexnumber"
"""
input pokemondexnumber_aggregate_order_by {
  avg: pokemondexnumber_avg_order_by
  count: order_by
  max: pokemondexnumber_max_order_by
  min: pokemondexnumber_min_order_by
  stddev: pokemondexnumber_stddev_order_by
  stddev_pop: pokemondexnumber_stddev_pop_order_by
  stddev_samp: pokemondexnumber_stddev_samp_order_by
  sum: pokemondexnumber_sum_order_by
  var_pop: pokemondexnumber_var_pop_order_by
  var_samp: pokemondexnumber_var_samp_order_by
  variance: pokemondexnumber_variance_order_by
}

"""aggregate avg on columns"""
type pokemondexnumber_avg_fields {
  id: Float
  pokedex_id: Float
  pokedex_number: Float
  pokemon_species_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_pokemondexnumber"
"""
input pokemondexnumber_avg_order_by {
  id: order_by
  pokedex_id: order_by
  pokedex_number: order_by
  pokemon_species_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_pokemondexnumber".
All fields are combined with a logical 'AND'.
"""
input pokemondexnumber_bool_exp {
  _and: [pokemondexnumber_bool_exp!]
  _not: pokemondexnumber_bool_exp
  _or: [pokemondexnumber_bool_exp!]
  id: Int_comparison_exp
  pokedex: pokedex_bool_exp
  pokedex_id: Int_comparison_exp
  pokedex_number: Int_comparison_exp
  pokemon_species_id: Int_comparison_exp
  pokemonspecy: pokemonspecies_bool_exp
}

"""aggregate max on columns"""
type pokemondexnumber_max_fields {
  id: Int
  pokedex_id: Int
  pokedex_number: Int
  pokemon_species_id: Int
}

"""
order by max() on columns of table "pokemon_v2_pokemondexnumber"
"""
input pokemondexnumber_max_order_by {
  id: order_by
  pokedex_id: order_by
  pokedex_number: order_by
  pokemon_species_id: order_by
}

"""aggregate min on columns"""
type pokemondexnumber_min_fields {
  id: Int
  pokedex_id: Int
  pokedex_number: Int
  pokemon_species_id: Int
}

"""
order by min() on columns of table "pokemon_v2_pokemondexnumber"
"""
input pokemondexnumber_min_order_by {
  id: order_by
  pokedex_id: order_by
  pokedex_number: order_by
  pokemon_species_id: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_pokemondexnumber".
"""
input pokemondexnumber_order_by {
  id: order_by
  pokedex: pokedex_order_by
  pokedex_id: order_by
  pokedex_number: order_by
  pokemon_species_id: order_by
  pokemonspecy: pokemonspecies_order_by
}

"""
select columns of table "pokemon_v2_pokemondexnumber"
"""
enum pokemondexnumber_select_column {
  """column name"""
  id

  """column name"""
  pokedex_id

  """column name"""
  pokedex_number

  """column name"""
  pokemon_species_id
}

"""aggregate stddev on columns"""
type pokemondexnumber_stddev_fields {
  id: Float
  pokedex_id: Float
  pokedex_number: Float
  pokemon_species_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_pokemondexnumber"
"""
input pokemondexnumber_stddev_order_by {
  id: order_by
  pokedex_id: order_by
  pokedex_number: order_by
  pokemon_species_id: order_by
}

"""aggregate stddev_pop on columns"""
type pokemondexnumber_stddev_pop_fields {
  id: Float
  pokedex_id: Float
  pokedex_number: Float
  pokemon_species_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_pokemondexnumber"
"""
input pokemondexnumber_stddev_pop_order_by {
  id: order_by
  pokedex_id: order_by
  pokedex_number: order_by
  pokemon_species_id: order_by
}

"""aggregate stddev_samp on columns"""
type pokemondexnumber_stddev_samp_fields {
  id: Float
  pokedex_id: Float
  pokedex_number: Float
  pokemon_species_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_pokemondexnumber"
"""
input pokemondexnumber_stddev_samp_order_by {
  id: order_by
  pokedex_id: order_by
  pokedex_number: order_by
  pokemon_species_id: order_by
}

"""aggregate sum on columns"""
type pokemondexnumber_sum_fields {
  id: Int
  pokedex_id: Int
  pokedex_number: Int
  pokemon_species_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_pokemondexnumber"
"""
input pokemondexnumber_sum_order_by {
  id: order_by
  pokedex_id: order_by
  pokedex_number: order_by
  pokemon_species_id: order_by
}

"""aggregate var_pop on columns"""
type pokemondexnumber_var_pop_fields {
  id: Float
  pokedex_id: Float
  pokedex_number: Float
  pokemon_species_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_pokemondexnumber"
"""
input pokemondexnumber_var_pop_order_by {
  id: order_by
  pokedex_id: order_by
  pokedex_number: order_by
  pokemon_species_id: order_by
}

"""aggregate var_samp on columns"""
type pokemondexnumber_var_samp_fields {
  id: Float
  pokedex_id: Float
  pokedex_number: Float
  pokemon_species_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_pokemondexnumber"
"""
input pokemondexnumber_var_samp_order_by {
  id: order_by
  pokedex_id: order_by
  pokedex_number: order_by
  pokemon_species_id: order_by
}

"""aggregate variance on columns"""
type pokemondexnumber_variance_fields {
  id: Float
  pokedex_id: Float
  pokedex_number: Float
  pokemon_species_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_pokemondexnumber"
"""
input pokemondexnumber_variance_order_by {
  id: order_by
  pokedex_id: order_by
  pokedex_number: order_by
  pokemon_species_id: order_by
}

"""
columns and relationships of "pokemon_v2_pokemonegggroup"
"""
type pokemonegggroup {
  egg_group_id: Int

  """An object relationship"""
  egggroup: egggroup
  id: Int!
  pokemon_species_id: Int

  """An object relationship"""
  pokemonspecy: pokemonspecies
}

"""
aggregated selection of "pokemon_v2_pokemonegggroup"
"""
type pokemonegggroup_aggregate {
  aggregate: pokemonegggroup_aggregate_fields
  nodes: [pokemonegggroup!]!
}

input pokemonegggroup_aggregate_bool_exp {
  count: pokemonegggroup_aggregate_bool_exp_count
}

input pokemonegggroup_aggregate_bool_exp_count {
  arguments: [pokemonegggroup_select_column!]
  distinct: Boolean
  filter: pokemonegggroup_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_pokemonegggroup"
"""
type pokemonegggroup_aggregate_fields {
  avg: pokemonegggroup_avg_fields
  count(columns: [pokemonegggroup_select_column!], distinct: Boolean): Int!
  max: pokemonegggroup_max_fields
  min: pokemonegggroup_min_fields
  stddev: pokemonegggroup_stddev_fields
  stddev_pop: pokemonegggroup_stddev_pop_fields
  stddev_samp: pokemonegggroup_stddev_samp_fields
  sum: pokemonegggroup_sum_fields
  var_pop: pokemonegggroup_var_pop_fields
  var_samp: pokemonegggroup_var_samp_fields
  variance: pokemonegggroup_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_pokemonegggroup"
"""
input pokemonegggroup_aggregate_order_by {
  avg: pokemonegggroup_avg_order_by
  count: order_by
  max: pokemonegggroup_max_order_by
  min: pokemonegggroup_min_order_by
  stddev: pokemonegggroup_stddev_order_by
  stddev_pop: pokemonegggroup_stddev_pop_order_by
  stddev_samp: pokemonegggroup_stddev_samp_order_by
  sum: pokemonegggroup_sum_order_by
  var_pop: pokemonegggroup_var_pop_order_by
  var_samp: pokemonegggroup_var_samp_order_by
  variance: pokemonegggroup_variance_order_by
}

"""aggregate avg on columns"""
type pokemonegggroup_avg_fields {
  egg_group_id: Float
  id: Float
  pokemon_species_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_pokemonegggroup"
"""
input pokemonegggroup_avg_order_by {
  egg_group_id: order_by
  id: order_by
  pokemon_species_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_pokemonegggroup". All fields are combined with a logical 'AND'.
"""
input pokemonegggroup_bool_exp {
  _and: [pokemonegggroup_bool_exp!]
  _not: pokemonegggroup_bool_exp
  _or: [pokemonegggroup_bool_exp!]
  egg_group_id: Int_comparison_exp
  egggroup: egggroup_bool_exp
  id: Int_comparison_exp
  pokemon_species_id: Int_comparison_exp
  pokemonspecy: pokemonspecies_bool_exp
}

"""aggregate max on columns"""
type pokemonegggroup_max_fields {
  egg_group_id: Int
  id: Int
  pokemon_species_id: Int
}

"""
order by max() on columns of table "pokemon_v2_pokemonegggroup"
"""
input pokemonegggroup_max_order_by {
  egg_group_id: order_by
  id: order_by
  pokemon_species_id: order_by
}

"""aggregate min on columns"""
type pokemonegggroup_min_fields {
  egg_group_id: Int
  id: Int
  pokemon_species_id: Int
}

"""
order by min() on columns of table "pokemon_v2_pokemonegggroup"
"""
input pokemonegggroup_min_order_by {
  egg_group_id: order_by
  id: order_by
  pokemon_species_id: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_pokemonegggroup".
"""
input pokemonegggroup_order_by {
  egg_group_id: order_by
  egggroup: egggroup_order_by
  id: order_by
  pokemon_species_id: order_by
  pokemonspecy: pokemonspecies_order_by
}

"""
select columns of table "pokemon_v2_pokemonegggroup"
"""
enum pokemonegggroup_select_column {
  """column name"""
  egg_group_id

  """column name"""
  id

  """column name"""
  pokemon_species_id
}

"""aggregate stddev on columns"""
type pokemonegggroup_stddev_fields {
  egg_group_id: Float
  id: Float
  pokemon_species_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_pokemonegggroup"
"""
input pokemonegggroup_stddev_order_by {
  egg_group_id: order_by
  id: order_by
  pokemon_species_id: order_by
}

"""aggregate stddev_pop on columns"""
type pokemonegggroup_stddev_pop_fields {
  egg_group_id: Float
  id: Float
  pokemon_species_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_pokemonegggroup"
"""
input pokemonegggroup_stddev_pop_order_by {
  egg_group_id: order_by
  id: order_by
  pokemon_species_id: order_by
}

"""aggregate stddev_samp on columns"""
type pokemonegggroup_stddev_samp_fields {
  egg_group_id: Float
  id: Float
  pokemon_species_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_pokemonegggroup"
"""
input pokemonegggroup_stddev_samp_order_by {
  egg_group_id: order_by
  id: order_by
  pokemon_species_id: order_by
}

"""aggregate sum on columns"""
type pokemonegggroup_sum_fields {
  egg_group_id: Int
  id: Int
  pokemon_species_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_pokemonegggroup"
"""
input pokemonegggroup_sum_order_by {
  egg_group_id: order_by
  id: order_by
  pokemon_species_id: order_by
}

"""aggregate var_pop on columns"""
type pokemonegggroup_var_pop_fields {
  egg_group_id: Float
  id: Float
  pokemon_species_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_pokemonegggroup"
"""
input pokemonegggroup_var_pop_order_by {
  egg_group_id: order_by
  id: order_by
  pokemon_species_id: order_by
}

"""aggregate var_samp on columns"""
type pokemonegggroup_var_samp_fields {
  egg_group_id: Float
  id: Float
  pokemon_species_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_pokemonegggroup"
"""
input pokemonegggroup_var_samp_order_by {
  egg_group_id: order_by
  id: order_by
  pokemon_species_id: order_by
}

"""aggregate variance on columns"""
type pokemonegggroup_variance_fields {
  egg_group_id: Float
  id: Float
  pokemon_species_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_pokemonegggroup"
"""
input pokemonegggroup_variance_order_by {
  egg_group_id: order_by
  id: order_by
  pokemon_species_id: order_by
}

"""
columns and relationships of "pokemon_v2_pokemonevolution"
"""
type pokemonevolution {
  """An object relationship"""
  ItemByHeldItemId: item

  """An object relationship"""
  PokemonspecyByPartySpeciesId: pokemonspecies

  """An object relationship"""
  PokemonspecyByTradeSpeciesId: pokemonspecies

  """An object relationship"""
  TypeByPartyTypeId: type
  base_form_id: Int

  """An object relationship"""
  baseformid: pokemonspecies
  evolution_item_id: Int
  evolution_trigger_id: Int

  """An object relationship"""
  evolutiontrigger: evolutiontrigger
  evolved_species_id: Int

  """An object relationship"""
  gender: gender
  gender_id: Int
  held_item_id: Int
  id: Int!

  """An object relationship"""
  item: item
  known_move_id: Int
  known_move_type_id: Int

  """An object relationship"""
  location: location
  location_id: Int
  min_affection: Int
  min_beauty: Int
  min_happiness: Int
  min_level: Int

  """An object relationship"""
  move: move
  needs_overworld_rain: Boolean!
  party_species_id: Int
  party_type_id: Int

  """An object relationship"""
  pokemonspecy: pokemonspecies

  """An object relationship"""
  region: region
  region_id: Int
  relative_physical_stats: Int
  time_of_day: String
  trade_species_id: Int
  turn_upside_down: Boolean!

  """An object relationship"""
  type: type
}

"""
aggregated selection of "pokemon_v2_pokemonevolution"
"""
type pokemonevolution_aggregate {
  aggregate: pokemonevolution_aggregate_fields
  nodes: [pokemonevolution!]!
}

input pokemonevolution_aggregate_bool_exp {
  bool_and: pokemonevolution_aggregate_bool_exp_bool_and
  bool_or: pokemonevolution_aggregate_bool_exp_bool_or
  count: pokemonevolution_aggregate_bool_exp_count
}

input pokemonevolution_aggregate_bool_exp_bool_and {
  arguments: pokemonevolution_select_column_pokemonevolution_aggregate_bool_exp_bool_and_arguments_columns!
  distinct: Boolean
  filter: pokemonevolution_bool_exp
  predicate: Boolean_comparison_exp!
}

input pokemonevolution_aggregate_bool_exp_bool_or {
  arguments: pokemonevolution_select_column_pokemonevolution_aggregate_bool_exp_bool_or_arguments_columns!
  distinct: Boolean
  filter: pokemonevolution_bool_exp
  predicate: Boolean_comparison_exp!
}

input pokemonevolution_aggregate_bool_exp_count {
  arguments: [pokemonevolution_select_column!]
  distinct: Boolean
  filter: pokemonevolution_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_pokemonevolution"
"""
type pokemonevolution_aggregate_fields {
  avg: pokemonevolution_avg_fields
  count(columns: [pokemonevolution_select_column!], distinct: Boolean): Int!
  max: pokemonevolution_max_fields
  min: pokemonevolution_min_fields
  stddev: pokemonevolution_stddev_fields
  stddev_pop: pokemonevolution_stddev_pop_fields
  stddev_samp: pokemonevolution_stddev_samp_fields
  sum: pokemonevolution_sum_fields
  var_pop: pokemonevolution_var_pop_fields
  var_samp: pokemonevolution_var_samp_fields
  variance: pokemonevolution_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_pokemonevolution"
"""
input pokemonevolution_aggregate_order_by {
  avg: pokemonevolution_avg_order_by
  count: order_by
  max: pokemonevolution_max_order_by
  min: pokemonevolution_min_order_by
  stddev: pokemonevolution_stddev_order_by
  stddev_pop: pokemonevolution_stddev_pop_order_by
  stddev_samp: pokemonevolution_stddev_samp_order_by
  sum: pokemonevolution_sum_order_by
  var_pop: pokemonevolution_var_pop_order_by
  var_samp: pokemonevolution_var_samp_order_by
  variance: pokemonevolution_variance_order_by
}

"""aggregate avg on columns"""
type pokemonevolution_avg_fields {
  base_form_id: Float
  evolution_item_id: Float
  evolution_trigger_id: Float
  evolved_species_id: Float
  gender_id: Float
  held_item_id: Float
  id: Float
  known_move_id: Float
  known_move_type_id: Float
  location_id: Float
  min_affection: Float
  min_beauty: Float
  min_happiness: Float
  min_level: Float
  party_species_id: Float
  party_type_id: Float
  region_id: Float
  relative_physical_stats: Float
  trade_species_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_pokemonevolution"
"""
input pokemonevolution_avg_order_by {
  base_form_id: order_by
  evolution_item_id: order_by
  evolution_trigger_id: order_by
  evolved_species_id: order_by
  gender_id: order_by
  held_item_id: order_by
  id: order_by
  known_move_id: order_by
  known_move_type_id: order_by
  location_id: order_by
  min_affection: order_by
  min_beauty: order_by
  min_happiness: order_by
  min_level: order_by
  party_species_id: order_by
  party_type_id: order_by
  region_id: order_by
  relative_physical_stats: order_by
  trade_species_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_pokemonevolution".
All fields are combined with a logical 'AND'.
"""
input pokemonevolution_bool_exp {
  ItemByHeldItemId: item_bool_exp
  PokemonspecyByPartySpeciesId: pokemonspecies_bool_exp
  PokemonspecyByTradeSpeciesId: pokemonspecies_bool_exp
  TypeByPartyTypeId: type_bool_exp
  _and: [pokemonevolution_bool_exp!]
  _not: pokemonevolution_bool_exp
  _or: [pokemonevolution_bool_exp!]
  base_form_id: Int_comparison_exp
  baseformid: pokemonspecies_bool_exp
  evolution_item_id: Int_comparison_exp
  evolution_trigger_id: Int_comparison_exp
  evolutiontrigger: evolutiontrigger_bool_exp
  evolved_species_id: Int_comparison_exp
  gender: gender_bool_exp
  gender_id: Int_comparison_exp
  held_item_id: Int_comparison_exp
  id: Int_comparison_exp
  item: item_bool_exp
  known_move_id: Int_comparison_exp
  known_move_type_id: Int_comparison_exp
  location: location_bool_exp
  location_id: Int_comparison_exp
  min_affection: Int_comparison_exp
  min_beauty: Int_comparison_exp
  min_happiness: Int_comparison_exp
  min_level: Int_comparison_exp
  move: move_bool_exp
  needs_overworld_rain: Boolean_comparison_exp
  party_species_id: Int_comparison_exp
  party_type_id: Int_comparison_exp
  pokemonspecy: pokemonspecies_bool_exp
  region: region_bool_exp
  region_id: Int_comparison_exp
  relative_physical_stats: Int_comparison_exp
  time_of_day: String_comparison_exp
  trade_species_id: Int_comparison_exp
  turn_upside_down: Boolean_comparison_exp
  type: type_bool_exp
}

"""aggregate max on columns"""
type pokemonevolution_max_fields {
  base_form_id: Int
  evolution_item_id: Int
  evolution_trigger_id: Int
  evolved_species_id: Int
  gender_id: Int
  held_item_id: Int
  id: Int
  known_move_id: Int
  known_move_type_id: Int
  location_id: Int
  min_affection: Int
  min_beauty: Int
  min_happiness: Int
  min_level: Int
  party_species_id: Int
  party_type_id: Int
  region_id: Int
  relative_physical_stats: Int
  time_of_day: String
  trade_species_id: Int
}

"""
order by max() on columns of table "pokemon_v2_pokemonevolution"
"""
input pokemonevolution_max_order_by {
  base_form_id: order_by
  evolution_item_id: order_by
  evolution_trigger_id: order_by
  evolved_species_id: order_by
  gender_id: order_by
  held_item_id: order_by
  id: order_by
  known_move_id: order_by
  known_move_type_id: order_by
  location_id: order_by
  min_affection: order_by
  min_beauty: order_by
  min_happiness: order_by
  min_level: order_by
  party_species_id: order_by
  party_type_id: order_by
  region_id: order_by
  relative_physical_stats: order_by
  time_of_day: order_by
  trade_species_id: order_by
}

"""aggregate min on columns"""
type pokemonevolution_min_fields {
  base_form_id: Int
  evolution_item_id: Int
  evolution_trigger_id: Int
  evolved_species_id: Int
  gender_id: Int
  held_item_id: Int
  id: Int
  known_move_id: Int
  known_move_type_id: Int
  location_id: Int
  min_affection: Int
  min_beauty: Int
  min_happiness: Int
  min_level: Int
  party_species_id: Int
  party_type_id: Int
  region_id: Int
  relative_physical_stats: Int
  time_of_day: String
  trade_species_id: Int
}

"""
order by min() on columns of table "pokemon_v2_pokemonevolution"
"""
input pokemonevolution_min_order_by {
  base_form_id: order_by
  evolution_item_id: order_by
  evolution_trigger_id: order_by
  evolved_species_id: order_by
  gender_id: order_by
  held_item_id: order_by
  id: order_by
  known_move_id: order_by
  known_move_type_id: order_by
  location_id: order_by
  min_affection: order_by
  min_beauty: order_by
  min_happiness: order_by
  min_level: order_by
  party_species_id: order_by
  party_type_id: order_by
  region_id: order_by
  relative_physical_stats: order_by
  time_of_day: order_by
  trade_species_id: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_pokemonevolution".
"""
input pokemonevolution_order_by {
  ItemByHeldItemId: item_order_by
  PokemonspecyByPartySpeciesId: pokemonspecies_order_by
  PokemonspecyByTradeSpeciesId: pokemonspecies_order_by
  TypeByPartyTypeId: type_order_by
  base_form_id: order_by
  baseformid: pokemonspecies_order_by
  evolution_item_id: order_by
  evolution_trigger_id: order_by
  evolutiontrigger: evolutiontrigger_order_by
  evolved_species_id: order_by
  gender: gender_order_by
  gender_id: order_by
  held_item_id: order_by
  id: order_by
  item: item_order_by
  known_move_id: order_by
  known_move_type_id: order_by
  location: location_order_by
  location_id: order_by
  min_affection: order_by
  min_beauty: order_by
  min_happiness: order_by
  min_level: order_by
  move: move_order_by
  needs_overworld_rain: order_by
  party_species_id: order_by
  party_type_id: order_by
  pokemonspecy: pokemonspecies_order_by
  region: region_order_by
  region_id: order_by
  relative_physical_stats: order_by
  time_of_day: order_by
  trade_species_id: order_by
  turn_upside_down: order_by
  type: type_order_by
}

"""
select columns of table "pokemon_v2_pokemonevolution"
"""
enum pokemonevolution_select_column {
  """column name"""
  base_form_id

  """column name"""
  evolution_item_id

  """column name"""
  evolution_trigger_id

  """column name"""
  evolved_species_id

  """column name"""
  gender_id

  """column name"""
  held_item_id

  """column name"""
  id

  """column name"""
  known_move_id

  """column name"""
  known_move_type_id

  """column name"""
  location_id

  """column name"""
  min_affection

  """column name"""
  min_beauty

  """column name"""
  min_happiness

  """column name"""
  min_level

  """column name"""
  needs_overworld_rain

  """column name"""
  party_species_id

  """column name"""
  party_type_id

  """column name"""
  region_id

  """column name"""
  relative_physical_stats

  """column name"""
  time_of_day

  """column name"""
  trade_species_id

  """column name"""
  turn_upside_down
}

"""
select "pokemonevolution_aggregate_bool_exp_bool_and_arguments_columns" columns of table "pokemon_v2_pokemonevolution"
"""
enum pokemonevolution_select_column_pokemonevolution_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
  needs_overworld_rain

  """column name"""
  turn_upside_down
}

"""
select "pokemonevolution_aggregate_bool_exp_bool_or_arguments_columns" columns of table "pokemon_v2_pokemonevolution"
"""
enum pokemonevolution_select_column_pokemonevolution_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
  needs_overworld_rain

  """column name"""
  turn_upside_down
}

"""aggregate stddev on columns"""
type pokemonevolution_stddev_fields {
  base_form_id: Float
  evolution_item_id: Float
  evolution_trigger_id: Float
  evolved_species_id: Float
  gender_id: Float
  held_item_id: Float
  id: Float
  known_move_id: Float
  known_move_type_id: Float
  location_id: Float
  min_affection: Float
  min_beauty: Float
  min_happiness: Float
  min_level: Float
  party_species_id: Float
  party_type_id: Float
  region_id: Float
  relative_physical_stats: Float
  trade_species_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_pokemonevolution"
"""
input pokemonevolution_stddev_order_by {
  base_form_id: order_by
  evolution_item_id: order_by
  evolution_trigger_id: order_by
  evolved_species_id: order_by
  gender_id: order_by
  held_item_id: order_by
  id: order_by
  known_move_id: order_by
  known_move_type_id: order_by
  location_id: order_by
  min_affection: order_by
  min_beauty: order_by
  min_happiness: order_by
  min_level: order_by
  party_species_id: order_by
  party_type_id: order_by
  region_id: order_by
  relative_physical_stats: order_by
  trade_species_id: order_by
}

"""aggregate stddev_pop on columns"""
type pokemonevolution_stddev_pop_fields {
  base_form_id: Float
  evolution_item_id: Float
  evolution_trigger_id: Float
  evolved_species_id: Float
  gender_id: Float
  held_item_id: Float
  id: Float
  known_move_id: Float
  known_move_type_id: Float
  location_id: Float
  min_affection: Float
  min_beauty: Float
  min_happiness: Float
  min_level: Float
  party_species_id: Float
  party_type_id: Float
  region_id: Float
  relative_physical_stats: Float
  trade_species_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_pokemonevolution"
"""
input pokemonevolution_stddev_pop_order_by {
  base_form_id: order_by
  evolution_item_id: order_by
  evolution_trigger_id: order_by
  evolved_species_id: order_by
  gender_id: order_by
  held_item_id: order_by
  id: order_by
  known_move_id: order_by
  known_move_type_id: order_by
  location_id: order_by
  min_affection: order_by
  min_beauty: order_by
  min_happiness: order_by
  min_level: order_by
  party_species_id: order_by
  party_type_id: order_by
  region_id: order_by
  relative_physical_stats: order_by
  trade_species_id: order_by
}

"""aggregate stddev_samp on columns"""
type pokemonevolution_stddev_samp_fields {
  base_form_id: Float
  evolution_item_id: Float
  evolution_trigger_id: Float
  evolved_species_id: Float
  gender_id: Float
  held_item_id: Float
  id: Float
  known_move_id: Float
  known_move_type_id: Float
  location_id: Float
  min_affection: Float
  min_beauty: Float
  min_happiness: Float
  min_level: Float
  party_species_id: Float
  party_type_id: Float
  region_id: Float
  relative_physical_stats: Float
  trade_species_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_pokemonevolution"
"""
input pokemonevolution_stddev_samp_order_by {
  base_form_id: order_by
  evolution_item_id: order_by
  evolution_trigger_id: order_by
  evolved_species_id: order_by
  gender_id: order_by
  held_item_id: order_by
  id: order_by
  known_move_id: order_by
  known_move_type_id: order_by
  location_id: order_by
  min_affection: order_by
  min_beauty: order_by
  min_happiness: order_by
  min_level: order_by
  party_species_id: order_by
  party_type_id: order_by
  region_id: order_by
  relative_physical_stats: order_by
  trade_species_id: order_by
}

"""aggregate sum on columns"""
type pokemonevolution_sum_fields {
  base_form_id: Int
  evolution_item_id: Int
  evolution_trigger_id: Int
  evolved_species_id: Int
  gender_id: Int
  held_item_id: Int
  id: Int
  known_move_id: Int
  known_move_type_id: Int
  location_id: Int
  min_affection: Int
  min_beauty: Int
  min_happiness: Int
  min_level: Int
  party_species_id: Int
  party_type_id: Int
  region_id: Int
  relative_physical_stats: Int
  trade_species_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_pokemonevolution"
"""
input pokemonevolution_sum_order_by {
  base_form_id: order_by
  evolution_item_id: order_by
  evolution_trigger_id: order_by
  evolved_species_id: order_by
  gender_id: order_by
  held_item_id: order_by
  id: order_by
  known_move_id: order_by
  known_move_type_id: order_by
  location_id: order_by
  min_affection: order_by
  min_beauty: order_by
  min_happiness: order_by
  min_level: order_by
  party_species_id: order_by
  party_type_id: order_by
  region_id: order_by
  relative_physical_stats: order_by
  trade_species_id: order_by
}

"""aggregate var_pop on columns"""
type pokemonevolution_var_pop_fields {
  base_form_id: Float
  evolution_item_id: Float
  evolution_trigger_id: Float
  evolved_species_id: Float
  gender_id: Float
  held_item_id: Float
  id: Float
  known_move_id: Float
  known_move_type_id: Float
  location_id: Float
  min_affection: Float
  min_beauty: Float
  min_happiness: Float
  min_level: Float
  party_species_id: Float
  party_type_id: Float
  region_id: Float
  relative_physical_stats: Float
  trade_species_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_pokemonevolution"
"""
input pokemonevolution_var_pop_order_by {
  base_form_id: order_by
  evolution_item_id: order_by
  evolution_trigger_id: order_by
  evolved_species_id: order_by
  gender_id: order_by
  held_item_id: order_by
  id: order_by
  known_move_id: order_by
  known_move_type_id: order_by
  location_id: order_by
  min_affection: order_by
  min_beauty: order_by
  min_happiness: order_by
  min_level: order_by
  party_species_id: order_by
  party_type_id: order_by
  region_id: order_by
  relative_physical_stats: order_by
  trade_species_id: order_by
}

"""aggregate var_samp on columns"""
type pokemonevolution_var_samp_fields {
  base_form_id: Float
  evolution_item_id: Float
  evolution_trigger_id: Float
  evolved_species_id: Float
  gender_id: Float
  held_item_id: Float
  id: Float
  known_move_id: Float
  known_move_type_id: Float
  location_id: Float
  min_affection: Float
  min_beauty: Float
  min_happiness: Float
  min_level: Float
  party_species_id: Float
  party_type_id: Float
  region_id: Float
  relative_physical_stats: Float
  trade_species_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_pokemonevolution"
"""
input pokemonevolution_var_samp_order_by {
  base_form_id: order_by
  evolution_item_id: order_by
  evolution_trigger_id: order_by
  evolved_species_id: order_by
  gender_id: order_by
  held_item_id: order_by
  id: order_by
  known_move_id: order_by
  known_move_type_id: order_by
  location_id: order_by
  min_affection: order_by
  min_beauty: order_by
  min_happiness: order_by
  min_level: order_by
  party_species_id: order_by
  party_type_id: order_by
  region_id: order_by
  relative_physical_stats: order_by
  trade_species_id: order_by
}

"""aggregate variance on columns"""
type pokemonevolution_variance_fields {
  base_form_id: Float
  evolution_item_id: Float
  evolution_trigger_id: Float
  evolved_species_id: Float
  gender_id: Float
  held_item_id: Float
  id: Float
  known_move_id: Float
  known_move_type_id: Float
  location_id: Float
  min_affection: Float
  min_beauty: Float
  min_happiness: Float
  min_level: Float
  party_species_id: Float
  party_type_id: Float
  region_id: Float
  relative_physical_stats: Float
  trade_species_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_pokemonevolution"
"""
input pokemonevolution_variance_order_by {
  base_form_id: order_by
  evolution_item_id: order_by
  evolution_trigger_id: order_by
  evolved_species_id: order_by
  gender_id: order_by
  held_item_id: order_by
  id: order_by
  known_move_id: order_by
  known_move_type_id: order_by
  location_id: order_by
  min_affection: order_by
  min_beauty: order_by
  min_happiness: order_by
  min_level: order_by
  party_species_id: order_by
  party_type_id: order_by
  region_id: order_by
  relative_physical_stats: order_by
  trade_species_id: order_by
}

"""
columns and relationships of "pokemon_v2_pokemonform"
"""
type pokemonform {
  form_name: String!
  form_order: Int
  id: Int!
  is_battle_only: Boolean!
  is_default: Boolean!
  is_mega: Boolean!
  name: String!
  order: Int

  """An object relationship"""
  pokemon: pokemon
  pokemon_id: Int

  """An array relationship"""
  pokemonformgenerations(
    """distinct select on columns"""
    distinct_on: [pokemonformgeneration_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonformgeneration_order_by!]

    """filter the rows returned"""
    where: pokemonformgeneration_bool_exp
  ): [pokemonformgeneration!]!

  """An aggregate relationship"""
  pokemonformgenerations_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonformgeneration_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonformgeneration_order_by!]

    """filter the rows returned"""
    where: pokemonformgeneration_bool_exp
  ): pokemonformgeneration_aggregate!

  """An array relationship"""
  pokemonformnames(
    """distinct select on columns"""
    distinct_on: [pokemonformname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonformname_order_by!]

    """filter the rows returned"""
    where: pokemonformname_bool_exp
  ): [pokemonformname!]!

  """An aggregate relationship"""
  pokemonformnames_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonformname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonformname_order_by!]

    """filter the rows returned"""
    where: pokemonformname_bool_exp
  ): pokemonformname_aggregate!

  """An array relationship"""
  pokemonformsprites(
    """distinct select on columns"""
    distinct_on: [pokemonformsprites_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonformsprites_order_by!]

    """filter the rows returned"""
    where: pokemonformsprites_bool_exp
  ): [pokemonformsprites!]!

  """An aggregate relationship"""
  pokemonformsprites_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonformsprites_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonformsprites_order_by!]

    """filter the rows returned"""
    where: pokemonformsprites_bool_exp
  ): pokemonformsprites_aggregate!

  """An array relationship"""
  pokemonformtypes(
    """distinct select on columns"""
    distinct_on: [pokemonformtype_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonformtype_order_by!]

    """filter the rows returned"""
    where: pokemonformtype_bool_exp
  ): [pokemonformtype!]!

  """An aggregate relationship"""
  pokemonformtypes_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonformtype_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonformtype_order_by!]

    """filter the rows returned"""
    where: pokemonformtype_bool_exp
  ): pokemonformtype_aggregate!
  version_group_id: Int

  """An object relationship"""
  versiongroup: versiongroup
}

"""
aggregated selection of "pokemon_v2_pokemonform"
"""
type pokemonform_aggregate {
  aggregate: pokemonform_aggregate_fields
  nodes: [pokemonform!]!
}

input pokemonform_aggregate_bool_exp {
  bool_and: pokemonform_aggregate_bool_exp_bool_and
  bool_or: pokemonform_aggregate_bool_exp_bool_or
  count: pokemonform_aggregate_bool_exp_count
}

input pokemonform_aggregate_bool_exp_bool_and {
  arguments: pokemonform_select_column_pokemonform_aggregate_bool_exp_bool_and_arguments_columns!
  distinct: Boolean
  filter: pokemonform_bool_exp
  predicate: Boolean_comparison_exp!
}

input pokemonform_aggregate_bool_exp_bool_or {
  arguments: pokemonform_select_column_pokemonform_aggregate_bool_exp_bool_or_arguments_columns!
  distinct: Boolean
  filter: pokemonform_bool_exp
  predicate: Boolean_comparison_exp!
}

input pokemonform_aggregate_bool_exp_count {
  arguments: [pokemonform_select_column!]
  distinct: Boolean
  filter: pokemonform_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_pokemonform"
"""
type pokemonform_aggregate_fields {
  avg: pokemonform_avg_fields
  count(columns: [pokemonform_select_column!], distinct: Boolean): Int!
  max: pokemonform_max_fields
  min: pokemonform_min_fields
  stddev: pokemonform_stddev_fields
  stddev_pop: pokemonform_stddev_pop_fields
  stddev_samp: pokemonform_stddev_samp_fields
  sum: pokemonform_sum_fields
  var_pop: pokemonform_var_pop_fields
  var_samp: pokemonform_var_samp_fields
  variance: pokemonform_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_pokemonform"
"""
input pokemonform_aggregate_order_by {
  avg: pokemonform_avg_order_by
  count: order_by
  max: pokemonform_max_order_by
  min: pokemonform_min_order_by
  stddev: pokemonform_stddev_order_by
  stddev_pop: pokemonform_stddev_pop_order_by
  stddev_samp: pokemonform_stddev_samp_order_by
  sum: pokemonform_sum_order_by
  var_pop: pokemonform_var_pop_order_by
  var_samp: pokemonform_var_samp_order_by
  variance: pokemonform_variance_order_by
}

"""aggregate avg on columns"""
type pokemonform_avg_fields {
  form_order: Float
  id: Float
  order: Float
  pokemon_id: Float
  version_group_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_pokemonform"
"""
input pokemonform_avg_order_by {
  form_order: order_by
  id: order_by
  order: order_by
  pokemon_id: order_by
  version_group_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_pokemonform". All fields are combined with a logical 'AND'.
"""
input pokemonform_bool_exp {
  _and: [pokemonform_bool_exp!]
  _not: pokemonform_bool_exp
  _or: [pokemonform_bool_exp!]
  form_name: String_comparison_exp
  form_order: Int_comparison_exp
  id: Int_comparison_exp
  is_battle_only: Boolean_comparison_exp
  is_default: Boolean_comparison_exp
  is_mega: Boolean_comparison_exp
  name: String_comparison_exp
  order: Int_comparison_exp
  pokemon: pokemon_bool_exp
  pokemon_id: Int_comparison_exp
  pokemonformgenerations: pokemonformgeneration_bool_exp
  pokemonformgenerations_aggregate: pokemonformgeneration_aggregate_bool_exp
  pokemonformnames: pokemonformname_bool_exp
  pokemonformnames_aggregate: pokemonformname_aggregate_bool_exp
  pokemonformsprites: pokemonformsprites_bool_exp
  pokemonformsprites_aggregate: pokemonformsprites_aggregate_bool_exp
  pokemonformtypes: pokemonformtype_bool_exp
  pokemonformtypes_aggregate: pokemonformtype_aggregate_bool_exp
  version_group_id: Int_comparison_exp
  versiongroup: versiongroup_bool_exp
}

"""aggregate max on columns"""
type pokemonform_max_fields {
  form_name: String
  form_order: Int
  id: Int
  name: String
  order: Int
  pokemon_id: Int
  version_group_id: Int
}

"""
order by max() on columns of table "pokemon_v2_pokemonform"
"""
input pokemonform_max_order_by {
  form_name: order_by
  form_order: order_by
  id: order_by
  name: order_by
  order: order_by
  pokemon_id: order_by
  version_group_id: order_by
}

"""aggregate min on columns"""
type pokemonform_min_fields {
  form_name: String
  form_order: Int
  id: Int
  name: String
  order: Int
  pokemon_id: Int
  version_group_id: Int
}

"""
order by min() on columns of table "pokemon_v2_pokemonform"
"""
input pokemonform_min_order_by {
  form_name: order_by
  form_order: order_by
  id: order_by
  name: order_by
  order: order_by
  pokemon_id: order_by
  version_group_id: order_by
}

"""Ordering options when selecting data from "pokemon_v2_pokemonform"."""
input pokemonform_order_by {
  form_name: order_by
  form_order: order_by
  id: order_by
  is_battle_only: order_by
  is_default: order_by
  is_mega: order_by
  name: order_by
  order: order_by
  pokemon: pokemon_order_by
  pokemon_id: order_by
  pokemonformgenerations_aggregate: pokemonformgeneration_aggregate_order_by
  pokemonformnames_aggregate: pokemonformname_aggregate_order_by
  pokemonformsprites_aggregate: pokemonformsprites_aggregate_order_by
  pokemonformtypes_aggregate: pokemonformtype_aggregate_order_by
  version_group_id: order_by
  versiongroup: versiongroup_order_by
}

"""
select columns of table "pokemon_v2_pokemonform"
"""
enum pokemonform_select_column {
  """column name"""
  form_name

  """column name"""
  form_order

  """column name"""
  id

  """column name"""
  is_battle_only

  """column name"""
  is_default

  """column name"""
  is_mega

  """column name"""
  name

  """column name"""
  order

  """column name"""
  pokemon_id

  """column name"""
  version_group_id
}

"""
select "pokemonform_aggregate_bool_exp_bool_and_arguments_columns" columns of table "pokemon_v2_pokemonform"
"""
enum pokemonform_select_column_pokemonform_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
  is_battle_only

  """column name"""
  is_default

  """column name"""
  is_mega
}

"""
select "pokemonform_aggregate_bool_exp_bool_or_arguments_columns" columns of table "pokemon_v2_pokemonform"
"""
enum pokemonform_select_column_pokemonform_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
  is_battle_only

  """column name"""
  is_default

  """column name"""
  is_mega
}

"""aggregate stddev on columns"""
type pokemonform_stddev_fields {
  form_order: Float
  id: Float
  order: Float
  pokemon_id: Float
  version_group_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_pokemonform"
"""
input pokemonform_stddev_order_by {
  form_order: order_by
  id: order_by
  order: order_by
  pokemon_id: order_by
  version_group_id: order_by
}

"""aggregate stddev_pop on columns"""
type pokemonform_stddev_pop_fields {
  form_order: Float
  id: Float
  order: Float
  pokemon_id: Float
  version_group_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_pokemonform"
"""
input pokemonform_stddev_pop_order_by {
  form_order: order_by
  id: order_by
  order: order_by
  pokemon_id: order_by
  version_group_id: order_by
}

"""aggregate stddev_samp on columns"""
type pokemonform_stddev_samp_fields {
  form_order: Float
  id: Float
  order: Float
  pokemon_id: Float
  version_group_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_pokemonform"
"""
input pokemonform_stddev_samp_order_by {
  form_order: order_by
  id: order_by
  order: order_by
  pokemon_id: order_by
  version_group_id: order_by
}

"""aggregate sum on columns"""
type pokemonform_sum_fields {
  form_order: Int
  id: Int
  order: Int
  pokemon_id: Int
  version_group_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_pokemonform"
"""
input pokemonform_sum_order_by {
  form_order: order_by
  id: order_by
  order: order_by
  pokemon_id: order_by
  version_group_id: order_by
}

"""aggregate var_pop on columns"""
type pokemonform_var_pop_fields {
  form_order: Float
  id: Float
  order: Float
  pokemon_id: Float
  version_group_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_pokemonform"
"""
input pokemonform_var_pop_order_by {
  form_order: order_by
  id: order_by
  order: order_by
  pokemon_id: order_by
  version_group_id: order_by
}

"""aggregate var_samp on columns"""
type pokemonform_var_samp_fields {
  form_order: Float
  id: Float
  order: Float
  pokemon_id: Float
  version_group_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_pokemonform"
"""
input pokemonform_var_samp_order_by {
  form_order: order_by
  id: order_by
  order: order_by
  pokemon_id: order_by
  version_group_id: order_by
}

"""aggregate variance on columns"""
type pokemonform_variance_fields {
  form_order: Float
  id: Float
  order: Float
  pokemon_id: Float
  version_group_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_pokemonform"
"""
input pokemonform_variance_order_by {
  form_order: order_by
  id: order_by
  order: order_by
  pokemon_id: order_by
  version_group_id: order_by
}

"""
columns and relationships of "pokemon_v2_pokemonformgeneration"
"""
type pokemonformgeneration {
  game_index: Int!

  """An object relationship"""
  generation: generation
  generation_id: Int
  id: Int!
  pokemon_form_id: Int

  """An object relationship"""
  pokemonform: pokemonform
}

"""
aggregated selection of "pokemon_v2_pokemonformgeneration"
"""
type pokemonformgeneration_aggregate {
  aggregate: pokemonformgeneration_aggregate_fields
  nodes: [pokemonformgeneration!]!
}

input pokemonformgeneration_aggregate_bool_exp {
  count: pokemonformgeneration_aggregate_bool_exp_count
}

input pokemonformgeneration_aggregate_bool_exp_count {
  arguments: [pokemonformgeneration_select_column!]
  distinct: Boolean
  filter: pokemonformgeneration_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_pokemonformgeneration"
"""
type pokemonformgeneration_aggregate_fields {
  avg: pokemonformgeneration_avg_fields
  count(columns: [pokemonformgeneration_select_column!], distinct: Boolean): Int!
  max: pokemonformgeneration_max_fields
  min: pokemonformgeneration_min_fields
  stddev: pokemonformgeneration_stddev_fields
  stddev_pop: pokemonformgeneration_stddev_pop_fields
  stddev_samp: pokemonformgeneration_stddev_samp_fields
  sum: pokemonformgeneration_sum_fields
  var_pop: pokemonformgeneration_var_pop_fields
  var_samp: pokemonformgeneration_var_samp_fields
  variance: pokemonformgeneration_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_pokemonformgeneration"
"""
input pokemonformgeneration_aggregate_order_by {
  avg: pokemonformgeneration_avg_order_by
  count: order_by
  max: pokemonformgeneration_max_order_by
  min: pokemonformgeneration_min_order_by
  stddev: pokemonformgeneration_stddev_order_by
  stddev_pop: pokemonformgeneration_stddev_pop_order_by
  stddev_samp: pokemonformgeneration_stddev_samp_order_by
  sum: pokemonformgeneration_sum_order_by
  var_pop: pokemonformgeneration_var_pop_order_by
  var_samp: pokemonformgeneration_var_samp_order_by
  variance: pokemonformgeneration_variance_order_by
}

"""aggregate avg on columns"""
type pokemonformgeneration_avg_fields {
  game_index: Float
  generation_id: Float
  id: Float
  pokemon_form_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_pokemonformgeneration"
"""
input pokemonformgeneration_avg_order_by {
  game_index: order_by
  generation_id: order_by
  id: order_by
  pokemon_form_id: order_by
}

"""
Boolean expression to filter rows from the table
"pokemon_v2_pokemonformgeneration". All fields are combined with a logical 'AND'.
"""
input pokemonformgeneration_bool_exp {
  _and: [pokemonformgeneration_bool_exp!]
  _not: pokemonformgeneration_bool_exp
  _or: [pokemonformgeneration_bool_exp!]
  game_index: Int_comparison_exp
  generation: generation_bool_exp
  generation_id: Int_comparison_exp
  id: Int_comparison_exp
  pokemon_form_id: Int_comparison_exp
  pokemonform: pokemonform_bool_exp
}

"""aggregate max on columns"""
type pokemonformgeneration_max_fields {
  game_index: Int
  generation_id: Int
  id: Int
  pokemon_form_id: Int
}

"""
order by max() on columns of table "pokemon_v2_pokemonformgeneration"
"""
input pokemonformgeneration_max_order_by {
  game_index: order_by
  generation_id: order_by
  id: order_by
  pokemon_form_id: order_by
}

"""aggregate min on columns"""
type pokemonformgeneration_min_fields {
  game_index: Int
  generation_id: Int
  id: Int
  pokemon_form_id: Int
}

"""
order by min() on columns of table "pokemon_v2_pokemonformgeneration"
"""
input pokemonformgeneration_min_order_by {
  game_index: order_by
  generation_id: order_by
  id: order_by
  pokemon_form_id: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_pokemonformgeneration".
"""
input pokemonformgeneration_order_by {
  game_index: order_by
  generation: generation_order_by
  generation_id: order_by
  id: order_by
  pokemon_form_id: order_by
  pokemonform: pokemonform_order_by
}

"""
select columns of table "pokemon_v2_pokemonformgeneration"
"""
enum pokemonformgeneration_select_column {
  """column name"""
  game_index

  """column name"""
  generation_id

  """column name"""
  id

  """column name"""
  pokemon_form_id
}

"""aggregate stddev on columns"""
type pokemonformgeneration_stddev_fields {
  game_index: Float
  generation_id: Float
  id: Float
  pokemon_form_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_pokemonformgeneration"
"""
input pokemonformgeneration_stddev_order_by {
  game_index: order_by
  generation_id: order_by
  id: order_by
  pokemon_form_id: order_by
}

"""aggregate stddev_pop on columns"""
type pokemonformgeneration_stddev_pop_fields {
  game_index: Float
  generation_id: Float
  id: Float
  pokemon_form_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_pokemonformgeneration"
"""
input pokemonformgeneration_stddev_pop_order_by {
  game_index: order_by
  generation_id: order_by
  id: order_by
  pokemon_form_id: order_by
}

"""aggregate stddev_samp on columns"""
type pokemonformgeneration_stddev_samp_fields {
  game_index: Float
  generation_id: Float
  id: Float
  pokemon_form_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_pokemonformgeneration"
"""
input pokemonformgeneration_stddev_samp_order_by {
  game_index: order_by
  generation_id: order_by
  id: order_by
  pokemon_form_id: order_by
}

"""aggregate sum on columns"""
type pokemonformgeneration_sum_fields {
  game_index: Int
  generation_id: Int
  id: Int
  pokemon_form_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_pokemonformgeneration"
"""
input pokemonformgeneration_sum_order_by {
  game_index: order_by
  generation_id: order_by
  id: order_by
  pokemon_form_id: order_by
}

"""aggregate var_pop on columns"""
type pokemonformgeneration_var_pop_fields {
  game_index: Float
  generation_id: Float
  id: Float
  pokemon_form_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_pokemonformgeneration"
"""
input pokemonformgeneration_var_pop_order_by {
  game_index: order_by
  generation_id: order_by
  id: order_by
  pokemon_form_id: order_by
}

"""aggregate var_samp on columns"""
type pokemonformgeneration_var_samp_fields {
  game_index: Float
  generation_id: Float
  id: Float
  pokemon_form_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_pokemonformgeneration"
"""
input pokemonformgeneration_var_samp_order_by {
  game_index: order_by
  generation_id: order_by
  id: order_by
  pokemon_form_id: order_by
}

"""aggregate variance on columns"""
type pokemonformgeneration_variance_fields {
  game_index: Float
  generation_id: Float
  id: Float
  pokemon_form_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_pokemonformgeneration"
"""
input pokemonformgeneration_variance_order_by {
  game_index: order_by
  generation_id: order_by
  id: order_by
  pokemon_form_id: order_by
}

"""
columns and relationships of "pokemon_v2_pokemonformname"
"""
type pokemonformname {
  id: Int!

  """An object relationship"""
  language: language
  language_id: Int
  name: String!
  pokemon_form_id: Int
  pokemon_name: String!

  """An object relationship"""
  pokemonform: pokemonform
}

"""
aggregated selection of "pokemon_v2_pokemonformname"
"""
type pokemonformname_aggregate {
  aggregate: pokemonformname_aggregate_fields
  nodes: [pokemonformname!]!
}

input pokemonformname_aggregate_bool_exp {
  count: pokemonformname_aggregate_bool_exp_count
}

input pokemonformname_aggregate_bool_exp_count {
  arguments: [pokemonformname_select_column!]
  distinct: Boolean
  filter: pokemonformname_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_pokemonformname"
"""
type pokemonformname_aggregate_fields {
  avg: pokemonformname_avg_fields
  count(columns: [pokemonformname_select_column!], distinct: Boolean): Int!
  max: pokemonformname_max_fields
  min: pokemonformname_min_fields
  stddev: pokemonformname_stddev_fields
  stddev_pop: pokemonformname_stddev_pop_fields
  stddev_samp: pokemonformname_stddev_samp_fields
  sum: pokemonformname_sum_fields
  var_pop: pokemonformname_var_pop_fields
  var_samp: pokemonformname_var_samp_fields
  variance: pokemonformname_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_pokemonformname"
"""
input pokemonformname_aggregate_order_by {
  avg: pokemonformname_avg_order_by
  count: order_by
  max: pokemonformname_max_order_by
  min: pokemonformname_min_order_by
  stddev: pokemonformname_stddev_order_by
  stddev_pop: pokemonformname_stddev_pop_order_by
  stddev_samp: pokemonformname_stddev_samp_order_by
  sum: pokemonformname_sum_order_by
  var_pop: pokemonformname_var_pop_order_by
  var_samp: pokemonformname_var_samp_order_by
  variance: pokemonformname_variance_order_by
}

"""aggregate avg on columns"""
type pokemonformname_avg_fields {
  id: Float
  language_id: Float
  pokemon_form_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_pokemonformname"
"""
input pokemonformname_avg_order_by {
  id: order_by
  language_id: order_by
  pokemon_form_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_pokemonformname". All fields are combined with a logical 'AND'.
"""
input pokemonformname_bool_exp {
  _and: [pokemonformname_bool_exp!]
  _not: pokemonformname_bool_exp
  _or: [pokemonformname_bool_exp!]
  id: Int_comparison_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
  name: String_comparison_exp
  pokemon_form_id: Int_comparison_exp
  pokemon_name: String_comparison_exp
  pokemonform: pokemonform_bool_exp
}

"""aggregate max on columns"""
type pokemonformname_max_fields {
  id: Int
  language_id: Int
  name: String
  pokemon_form_id: Int
  pokemon_name: String
}

"""
order by max() on columns of table "pokemon_v2_pokemonformname"
"""
input pokemonformname_max_order_by {
  id: order_by
  language_id: order_by
  name: order_by
  pokemon_form_id: order_by
  pokemon_name: order_by
}

"""aggregate min on columns"""
type pokemonformname_min_fields {
  id: Int
  language_id: Int
  name: String
  pokemon_form_id: Int
  pokemon_name: String
}

"""
order by min() on columns of table "pokemon_v2_pokemonformname"
"""
input pokemonformname_min_order_by {
  id: order_by
  language_id: order_by
  name: order_by
  pokemon_form_id: order_by
  pokemon_name: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_pokemonformname".
"""
input pokemonformname_order_by {
  id: order_by
  language: language_order_by
  language_id: order_by
  name: order_by
  pokemon_form_id: order_by
  pokemon_name: order_by
  pokemonform: pokemonform_order_by
}

"""
select columns of table "pokemon_v2_pokemonformname"
"""
enum pokemonformname_select_column {
  """column name"""
  id

  """column name"""
  language_id

  """column name"""
  name

  """column name"""
  pokemon_form_id

  """column name"""
  pokemon_name
}

"""aggregate stddev on columns"""
type pokemonformname_stddev_fields {
  id: Float
  language_id: Float
  pokemon_form_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_pokemonformname"
"""
input pokemonformname_stddev_order_by {
  id: order_by
  language_id: order_by
  pokemon_form_id: order_by
}

"""aggregate stddev_pop on columns"""
type pokemonformname_stddev_pop_fields {
  id: Float
  language_id: Float
  pokemon_form_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_pokemonformname"
"""
input pokemonformname_stddev_pop_order_by {
  id: order_by
  language_id: order_by
  pokemon_form_id: order_by
}

"""aggregate stddev_samp on columns"""
type pokemonformname_stddev_samp_fields {
  id: Float
  language_id: Float
  pokemon_form_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_pokemonformname"
"""
input pokemonformname_stddev_samp_order_by {
  id: order_by
  language_id: order_by
  pokemon_form_id: order_by
}

"""aggregate sum on columns"""
type pokemonformname_sum_fields {
  id: Int
  language_id: Int
  pokemon_form_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_pokemonformname"
"""
input pokemonformname_sum_order_by {
  id: order_by
  language_id: order_by
  pokemon_form_id: order_by
}

"""aggregate var_pop on columns"""
type pokemonformname_var_pop_fields {
  id: Float
  language_id: Float
  pokemon_form_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_pokemonformname"
"""
input pokemonformname_var_pop_order_by {
  id: order_by
  language_id: order_by
  pokemon_form_id: order_by
}

"""aggregate var_samp on columns"""
type pokemonformname_var_samp_fields {
  id: Float
  language_id: Float
  pokemon_form_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_pokemonformname"
"""
input pokemonformname_var_samp_order_by {
  id: order_by
  language_id: order_by
  pokemon_form_id: order_by
}

"""aggregate variance on columns"""
type pokemonformname_variance_fields {
  id: Float
  language_id: Float
  pokemon_form_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_pokemonformname"
"""
input pokemonformname_variance_order_by {
  id: order_by
  language_id: order_by
  pokemon_form_id: order_by
}

"""
columns and relationships of "pokemon_v2_pokemonformsprites"
"""
type pokemonformsprites {
  id: Int!
  pokemon_form_id: Int

  """An object relationship"""
  pokemonform: pokemonform
  sprites(
    """JSON select path"""
    path: String
  ): jsonb!
}

"""
aggregated selection of "pokemon_v2_pokemonformsprites"
"""
type pokemonformsprites_aggregate {
  aggregate: pokemonformsprites_aggregate_fields
  nodes: [pokemonformsprites!]!
}

input pokemonformsprites_aggregate_bool_exp {
  count: pokemonformsprites_aggregate_bool_exp_count
}

input pokemonformsprites_aggregate_bool_exp_count {
  arguments: [pokemonformsprites_select_column!]
  distinct: Boolean
  filter: pokemonformsprites_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_pokemonformsprites"
"""
type pokemonformsprites_aggregate_fields {
  avg: pokemonformsprites_avg_fields
  count(columns: [pokemonformsprites_select_column!], distinct: Boolean): Int!
  max: pokemonformsprites_max_fields
  min: pokemonformsprites_min_fields
  stddev: pokemonformsprites_stddev_fields
  stddev_pop: pokemonformsprites_stddev_pop_fields
  stddev_samp: pokemonformsprites_stddev_samp_fields
  sum: pokemonformsprites_sum_fields
  var_pop: pokemonformsprites_var_pop_fields
  var_samp: pokemonformsprites_var_samp_fields
  variance: pokemonformsprites_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_pokemonformsprites"
"""
input pokemonformsprites_aggregate_order_by {
  avg: pokemonformsprites_avg_order_by
  count: order_by
  max: pokemonformsprites_max_order_by
  min: pokemonformsprites_min_order_by
  stddev: pokemonformsprites_stddev_order_by
  stddev_pop: pokemonformsprites_stddev_pop_order_by
  stddev_samp: pokemonformsprites_stddev_samp_order_by
  sum: pokemonformsprites_sum_order_by
  var_pop: pokemonformsprites_var_pop_order_by
  var_samp: pokemonformsprites_var_samp_order_by
  variance: pokemonformsprites_variance_order_by
}

"""aggregate avg on columns"""
type pokemonformsprites_avg_fields {
  id: Float
  pokemon_form_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_pokemonformsprites"
"""
input pokemonformsprites_avg_order_by {
  id: order_by
  pokemon_form_id: order_by
}

"""
Boolean expression to filter rows from the table
"pokemon_v2_pokemonformsprites". All fields are combined with a logical 'AND'.
"""
input pokemonformsprites_bool_exp {
  _and: [pokemonformsprites_bool_exp!]
  _not: pokemonformsprites_bool_exp
  _or: [pokemonformsprites_bool_exp!]
  id: Int_comparison_exp
  pokemon_form_id: Int_comparison_exp
  pokemonform: pokemonform_bool_exp
  sprites: jsonb_comparison_exp
}

"""aggregate max on columns"""
type pokemonformsprites_max_fields {
  id: Int
  pokemon_form_id: Int
}

"""
order by max() on columns of table "pokemon_v2_pokemonformsprites"
"""
input pokemonformsprites_max_order_by {
  id: order_by
  pokemon_form_id: order_by
}

"""aggregate min on columns"""
type pokemonformsprites_min_fields {
  id: Int
  pokemon_form_id: Int
}

"""
order by min() on columns of table "pokemon_v2_pokemonformsprites"
"""
input pokemonformsprites_min_order_by {
  id: order_by
  pokemon_form_id: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_pokemonformsprites".
"""
input pokemonformsprites_order_by {
  id: order_by
  pokemon_form_id: order_by
  pokemonform: pokemonform_order_by
  sprites: order_by
}

"""
select columns of table "pokemon_v2_pokemonformsprites"
"""
enum pokemonformsprites_select_column {
  """column name"""
  id

  """column name"""
  pokemon_form_id

  """column name"""
  sprites
}

"""aggregate stddev on columns"""
type pokemonformsprites_stddev_fields {
  id: Float
  pokemon_form_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_pokemonformsprites"
"""
input pokemonformsprites_stddev_order_by {
  id: order_by
  pokemon_form_id: order_by
}

"""aggregate stddev_pop on columns"""
type pokemonformsprites_stddev_pop_fields {
  id: Float
  pokemon_form_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_pokemonformsprites"
"""
input pokemonformsprites_stddev_pop_order_by {
  id: order_by
  pokemon_form_id: order_by
}

"""aggregate stddev_samp on columns"""
type pokemonformsprites_stddev_samp_fields {
  id: Float
  pokemon_form_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_pokemonformsprites"
"""
input pokemonformsprites_stddev_samp_order_by {
  id: order_by
  pokemon_form_id: order_by
}

"""aggregate sum on columns"""
type pokemonformsprites_sum_fields {
  id: Int
  pokemon_form_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_pokemonformsprites"
"""
input pokemonformsprites_sum_order_by {
  id: order_by
  pokemon_form_id: order_by
}

"""aggregate var_pop on columns"""
type pokemonformsprites_var_pop_fields {
  id: Float
  pokemon_form_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_pokemonformsprites"
"""
input pokemonformsprites_var_pop_order_by {
  id: order_by
  pokemon_form_id: order_by
}

"""aggregate var_samp on columns"""
type pokemonformsprites_var_samp_fields {
  id: Float
  pokemon_form_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_pokemonformsprites"
"""
input pokemonformsprites_var_samp_order_by {
  id: order_by
  pokemon_form_id: order_by
}

"""aggregate variance on columns"""
type pokemonformsprites_variance_fields {
  id: Float
  pokemon_form_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_pokemonformsprites"
"""
input pokemonformsprites_variance_order_by {
  id: order_by
  pokemon_form_id: order_by
}

"""
columns and relationships of "pokemon_v2_pokemonformtype"
"""
type pokemonformtype {
  id: Int!
  pokemon_form_id: Int

  """An object relationship"""
  pokemonform: pokemonform
  slot: Int!

  """An object relationship"""
  type: type
  type_id: Int
}

"""
aggregated selection of "pokemon_v2_pokemonformtype"
"""
type pokemonformtype_aggregate {
  aggregate: pokemonformtype_aggregate_fields
  nodes: [pokemonformtype!]!
}

input pokemonformtype_aggregate_bool_exp {
  count: pokemonformtype_aggregate_bool_exp_count
}

input pokemonformtype_aggregate_bool_exp_count {
  arguments: [pokemonformtype_select_column!]
  distinct: Boolean
  filter: pokemonformtype_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_pokemonformtype"
"""
type pokemonformtype_aggregate_fields {
  avg: pokemonformtype_avg_fields
  count(columns: [pokemonformtype_select_column!], distinct: Boolean): Int!
  max: pokemonformtype_max_fields
  min: pokemonformtype_min_fields
  stddev: pokemonformtype_stddev_fields
  stddev_pop: pokemonformtype_stddev_pop_fields
  stddev_samp: pokemonformtype_stddev_samp_fields
  sum: pokemonformtype_sum_fields
  var_pop: pokemonformtype_var_pop_fields
  var_samp: pokemonformtype_var_samp_fields
  variance: pokemonformtype_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_pokemonformtype"
"""
input pokemonformtype_aggregate_order_by {
  avg: pokemonformtype_avg_order_by
  count: order_by
  max: pokemonformtype_max_order_by
  min: pokemonformtype_min_order_by
  stddev: pokemonformtype_stddev_order_by
  stddev_pop: pokemonformtype_stddev_pop_order_by
  stddev_samp: pokemonformtype_stddev_samp_order_by
  sum: pokemonformtype_sum_order_by
  var_pop: pokemonformtype_var_pop_order_by
  var_samp: pokemonformtype_var_samp_order_by
  variance: pokemonformtype_variance_order_by
}

"""aggregate avg on columns"""
type pokemonformtype_avg_fields {
  id: Float
  pokemon_form_id: Float
  slot: Float
  type_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_pokemonformtype"
"""
input pokemonformtype_avg_order_by {
  id: order_by
  pokemon_form_id: order_by
  slot: order_by
  type_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_pokemonformtype". All fields are combined with a logical 'AND'.
"""
input pokemonformtype_bool_exp {
  _and: [pokemonformtype_bool_exp!]
  _not: pokemonformtype_bool_exp
  _or: [pokemonformtype_bool_exp!]
  id: Int_comparison_exp
  pokemon_form_id: Int_comparison_exp
  pokemonform: pokemonform_bool_exp
  slot: Int_comparison_exp
  type: type_bool_exp
  type_id: Int_comparison_exp
}

"""aggregate max on columns"""
type pokemonformtype_max_fields {
  id: Int
  pokemon_form_id: Int
  slot: Int
  type_id: Int
}

"""
order by max() on columns of table "pokemon_v2_pokemonformtype"
"""
input pokemonformtype_max_order_by {
  id: order_by
  pokemon_form_id: order_by
  slot: order_by
  type_id: order_by
}

"""aggregate min on columns"""
type pokemonformtype_min_fields {
  id: Int
  pokemon_form_id: Int
  slot: Int
  type_id: Int
}

"""
order by min() on columns of table "pokemon_v2_pokemonformtype"
"""
input pokemonformtype_min_order_by {
  id: order_by
  pokemon_form_id: order_by
  slot: order_by
  type_id: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_pokemonformtype".
"""
input pokemonformtype_order_by {
  id: order_by
  pokemon_form_id: order_by
  pokemonform: pokemonform_order_by
  slot: order_by
  type: type_order_by
  type_id: order_by
}

"""
select columns of table "pokemon_v2_pokemonformtype"
"""
enum pokemonformtype_select_column {
  """column name"""
  id

  """column name"""
  pokemon_form_id

  """column name"""
  slot

  """column name"""
  type_id
}

"""aggregate stddev on columns"""
type pokemonformtype_stddev_fields {
  id: Float
  pokemon_form_id: Float
  slot: Float
  type_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_pokemonformtype"
"""
input pokemonformtype_stddev_order_by {
  id: order_by
  pokemon_form_id: order_by
  slot: order_by
  type_id: order_by
}

"""aggregate stddev_pop on columns"""
type pokemonformtype_stddev_pop_fields {
  id: Float
  pokemon_form_id: Float
  slot: Float
  type_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_pokemonformtype"
"""
input pokemonformtype_stddev_pop_order_by {
  id: order_by
  pokemon_form_id: order_by
  slot: order_by
  type_id: order_by
}

"""aggregate stddev_samp on columns"""
type pokemonformtype_stddev_samp_fields {
  id: Float
  pokemon_form_id: Float
  slot: Float
  type_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_pokemonformtype"
"""
input pokemonformtype_stddev_samp_order_by {
  id: order_by
  pokemon_form_id: order_by
  slot: order_by
  type_id: order_by
}

"""aggregate sum on columns"""
type pokemonformtype_sum_fields {
  id: Int
  pokemon_form_id: Int
  slot: Int
  type_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_pokemonformtype"
"""
input pokemonformtype_sum_order_by {
  id: order_by
  pokemon_form_id: order_by
  slot: order_by
  type_id: order_by
}

"""aggregate var_pop on columns"""
type pokemonformtype_var_pop_fields {
  id: Float
  pokemon_form_id: Float
  slot: Float
  type_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_pokemonformtype"
"""
input pokemonformtype_var_pop_order_by {
  id: order_by
  pokemon_form_id: order_by
  slot: order_by
  type_id: order_by
}

"""aggregate var_samp on columns"""
type pokemonformtype_var_samp_fields {
  id: Float
  pokemon_form_id: Float
  slot: Float
  type_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_pokemonformtype"
"""
input pokemonformtype_var_samp_order_by {
  id: order_by
  pokemon_form_id: order_by
  slot: order_by
  type_id: order_by
}

"""aggregate variance on columns"""
type pokemonformtype_variance_fields {
  id: Float
  pokemon_form_id: Float
  slot: Float
  type_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_pokemonformtype"
"""
input pokemonformtype_variance_order_by {
  id: order_by
  pokemon_form_id: order_by
  slot: order_by
  type_id: order_by
}

"""
columns and relationships of "pokemon_v2_pokemongameindex"
"""
type pokemongameindex {
  game_index: Int!
  id: Int!

  """An object relationship"""
  pokemon: pokemon
  pokemon_id: Int

  """An object relationship"""
  version: version
  version_id: Int
}

"""
aggregated selection of "pokemon_v2_pokemongameindex"
"""
type pokemongameindex_aggregate {
  aggregate: pokemongameindex_aggregate_fields
  nodes: [pokemongameindex!]!
}

input pokemongameindex_aggregate_bool_exp {
  count: pokemongameindex_aggregate_bool_exp_count
}

input pokemongameindex_aggregate_bool_exp_count {
  arguments: [pokemongameindex_select_column!]
  distinct: Boolean
  filter: pokemongameindex_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_pokemongameindex"
"""
type pokemongameindex_aggregate_fields {
  avg: pokemongameindex_avg_fields
  count(columns: [pokemongameindex_select_column!], distinct: Boolean): Int!
  max: pokemongameindex_max_fields
  min: pokemongameindex_min_fields
  stddev: pokemongameindex_stddev_fields
  stddev_pop: pokemongameindex_stddev_pop_fields
  stddev_samp: pokemongameindex_stddev_samp_fields
  sum: pokemongameindex_sum_fields
  var_pop: pokemongameindex_var_pop_fields
  var_samp: pokemongameindex_var_samp_fields
  variance: pokemongameindex_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_pokemongameindex"
"""
input pokemongameindex_aggregate_order_by {
  avg: pokemongameindex_avg_order_by
  count: order_by
  max: pokemongameindex_max_order_by
  min: pokemongameindex_min_order_by
  stddev: pokemongameindex_stddev_order_by
  stddev_pop: pokemongameindex_stddev_pop_order_by
  stddev_samp: pokemongameindex_stddev_samp_order_by
  sum: pokemongameindex_sum_order_by
  var_pop: pokemongameindex_var_pop_order_by
  var_samp: pokemongameindex_var_samp_order_by
  variance: pokemongameindex_variance_order_by
}

"""aggregate avg on columns"""
type pokemongameindex_avg_fields {
  game_index: Float
  id: Float
  pokemon_id: Float
  version_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_pokemongameindex"
"""
input pokemongameindex_avg_order_by {
  game_index: order_by
  id: order_by
  pokemon_id: order_by
  version_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_pokemongameindex".
All fields are combined with a logical 'AND'.
"""
input pokemongameindex_bool_exp {
  _and: [pokemongameindex_bool_exp!]
  _not: pokemongameindex_bool_exp
  _or: [pokemongameindex_bool_exp!]
  game_index: Int_comparison_exp
  id: Int_comparison_exp
  pokemon: pokemon_bool_exp
  pokemon_id: Int_comparison_exp
  version: version_bool_exp
  version_id: Int_comparison_exp
}

"""aggregate max on columns"""
type pokemongameindex_max_fields {
  game_index: Int
  id: Int
  pokemon_id: Int
  version_id: Int
}

"""
order by max() on columns of table "pokemon_v2_pokemongameindex"
"""
input pokemongameindex_max_order_by {
  game_index: order_by
  id: order_by
  pokemon_id: order_by
  version_id: order_by
}

"""aggregate min on columns"""
type pokemongameindex_min_fields {
  game_index: Int
  id: Int
  pokemon_id: Int
  version_id: Int
}

"""
order by min() on columns of table "pokemon_v2_pokemongameindex"
"""
input pokemongameindex_min_order_by {
  game_index: order_by
  id: order_by
  pokemon_id: order_by
  version_id: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_pokemongameindex".
"""
input pokemongameindex_order_by {
  game_index: order_by
  id: order_by
  pokemon: pokemon_order_by
  pokemon_id: order_by
  version: version_order_by
  version_id: order_by
}

"""
select columns of table "pokemon_v2_pokemongameindex"
"""
enum pokemongameindex_select_column {
  """column name"""
  game_index

  """column name"""
  id

  """column name"""
  pokemon_id

  """column name"""
  version_id
}

"""aggregate stddev on columns"""
type pokemongameindex_stddev_fields {
  game_index: Float
  id: Float
  pokemon_id: Float
  version_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_pokemongameindex"
"""
input pokemongameindex_stddev_order_by {
  game_index: order_by
  id: order_by
  pokemon_id: order_by
  version_id: order_by
}

"""aggregate stddev_pop on columns"""
type pokemongameindex_stddev_pop_fields {
  game_index: Float
  id: Float
  pokemon_id: Float
  version_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_pokemongameindex"
"""
input pokemongameindex_stddev_pop_order_by {
  game_index: order_by
  id: order_by
  pokemon_id: order_by
  version_id: order_by
}

"""aggregate stddev_samp on columns"""
type pokemongameindex_stddev_samp_fields {
  game_index: Float
  id: Float
  pokemon_id: Float
  version_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_pokemongameindex"
"""
input pokemongameindex_stddev_samp_order_by {
  game_index: order_by
  id: order_by
  pokemon_id: order_by
  version_id: order_by
}

"""aggregate sum on columns"""
type pokemongameindex_sum_fields {
  game_index: Int
  id: Int
  pokemon_id: Int
  version_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_pokemongameindex"
"""
input pokemongameindex_sum_order_by {
  game_index: order_by
  id: order_by
  pokemon_id: order_by
  version_id: order_by
}

"""aggregate var_pop on columns"""
type pokemongameindex_var_pop_fields {
  game_index: Float
  id: Float
  pokemon_id: Float
  version_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_pokemongameindex"
"""
input pokemongameindex_var_pop_order_by {
  game_index: order_by
  id: order_by
  pokemon_id: order_by
  version_id: order_by
}

"""aggregate var_samp on columns"""
type pokemongameindex_var_samp_fields {
  game_index: Float
  id: Float
  pokemon_id: Float
  version_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_pokemongameindex"
"""
input pokemongameindex_var_samp_order_by {
  game_index: order_by
  id: order_by
  pokemon_id: order_by
  version_id: order_by
}

"""aggregate variance on columns"""
type pokemongameindex_variance_fields {
  game_index: Float
  id: Float
  pokemon_id: Float
  version_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_pokemongameindex"
"""
input pokemongameindex_variance_order_by {
  game_index: order_by
  id: order_by
  pokemon_id: order_by
  version_id: order_by
}

"""
columns and relationships of "pokemon_v2_pokemonhabitat"
"""
type pokemonhabitat {
  id: Int!
  name: String!

  """An array relationship"""
  pokemonhabitatnames(
    """distinct select on columns"""
    distinct_on: [pokemonhabitatname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonhabitatname_order_by!]

    """filter the rows returned"""
    where: pokemonhabitatname_bool_exp
  ): [pokemonhabitatname!]!

  """An aggregate relationship"""
  pokemonhabitatnames_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonhabitatname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonhabitatname_order_by!]

    """filter the rows returned"""
    where: pokemonhabitatname_bool_exp
  ): pokemonhabitatname_aggregate!

  """An array relationship"""
  pokemonspecies(
    """distinct select on columns"""
    distinct_on: [pokemonspecies_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonspecies_order_by!]

    """filter the rows returned"""
    where: pokemonspecies_bool_exp
  ): [pokemonspecies!]!

  """An aggregate relationship"""
  pokemonspecies_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonspecies_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonspecies_order_by!]

    """filter the rows returned"""
    where: pokemonspecies_bool_exp
  ): pokemonspecies_aggregate!
}

"""
aggregated selection of "pokemon_v2_pokemonhabitat"
"""
type pokemonhabitat_aggregate {
  aggregate: pokemonhabitat_aggregate_fields
  nodes: [pokemonhabitat!]!
}

"""
aggregate fields of "pokemon_v2_pokemonhabitat"
"""
type pokemonhabitat_aggregate_fields {
  avg: pokemonhabitat_avg_fields
  count(columns: [pokemonhabitat_select_column!], distinct: Boolean): Int!
  max: pokemonhabitat_max_fields
  min: pokemonhabitat_min_fields
  stddev: pokemonhabitat_stddev_fields
  stddev_pop: pokemonhabitat_stddev_pop_fields
  stddev_samp: pokemonhabitat_stddev_samp_fields
  sum: pokemonhabitat_sum_fields
  var_pop: pokemonhabitat_var_pop_fields
  var_samp: pokemonhabitat_var_samp_fields
  variance: pokemonhabitat_variance_fields
}

"""aggregate avg on columns"""
type pokemonhabitat_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "pokemon_v2_pokemonhabitat". All fields are combined with a logical 'AND'.
"""
input pokemonhabitat_bool_exp {
  _and: [pokemonhabitat_bool_exp!]
  _not: pokemonhabitat_bool_exp
  _or: [pokemonhabitat_bool_exp!]
  id: Int_comparison_exp
  name: String_comparison_exp
  pokemonhabitatnames: pokemonhabitatname_bool_exp
  pokemonhabitatnames_aggregate: pokemonhabitatname_aggregate_bool_exp
  pokemonspecies: pokemonspecies_bool_exp
  pokemonspecies_aggregate: pokemonspecies_aggregate_bool_exp
}

"""aggregate max on columns"""
type pokemonhabitat_max_fields {
  id: Int
  name: String
}

"""aggregate min on columns"""
type pokemonhabitat_min_fields {
  id: Int
  name: String
}

"""Ordering options when selecting data from "pokemon_v2_pokemonhabitat"."""
input pokemonhabitat_order_by {
  id: order_by
  name: order_by
  pokemonhabitatnames_aggregate: pokemonhabitatname_aggregate_order_by
  pokemonspecies_aggregate: pokemonspecies_aggregate_order_by
}

"""
select columns of table "pokemon_v2_pokemonhabitat"
"""
enum pokemonhabitat_select_column {
  """column name"""
  id

  """column name"""
  name
}

"""aggregate stddev on columns"""
type pokemonhabitat_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type pokemonhabitat_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type pokemonhabitat_stddev_samp_fields {
  id: Float
}

"""aggregate sum on columns"""
type pokemonhabitat_sum_fields {
  id: Int
}

"""aggregate var_pop on columns"""
type pokemonhabitat_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type pokemonhabitat_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type pokemonhabitat_variance_fields {
  id: Float
}

"""
columns and relationships of "pokemon_v2_pokemonhabitatname"
"""
type pokemonhabitatname {
  id: Int!

  """An object relationship"""
  language: language
  language_id: Int
  name: String!
  pokemon_habitat_id: Int

  """An object relationship"""
  pokemonhabitat: pokemonhabitat
}

"""
aggregated selection of "pokemon_v2_pokemonhabitatname"
"""
type pokemonhabitatname_aggregate {
  aggregate: pokemonhabitatname_aggregate_fields
  nodes: [pokemonhabitatname!]!
}

input pokemonhabitatname_aggregate_bool_exp {
  count: pokemonhabitatname_aggregate_bool_exp_count
}

input pokemonhabitatname_aggregate_bool_exp_count {
  arguments: [pokemonhabitatname_select_column!]
  distinct: Boolean
  filter: pokemonhabitatname_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_pokemonhabitatname"
"""
type pokemonhabitatname_aggregate_fields {
  avg: pokemonhabitatname_avg_fields
  count(columns: [pokemonhabitatname_select_column!], distinct: Boolean): Int!
  max: pokemonhabitatname_max_fields
  min: pokemonhabitatname_min_fields
  stddev: pokemonhabitatname_stddev_fields
  stddev_pop: pokemonhabitatname_stddev_pop_fields
  stddev_samp: pokemonhabitatname_stddev_samp_fields
  sum: pokemonhabitatname_sum_fields
  var_pop: pokemonhabitatname_var_pop_fields
  var_samp: pokemonhabitatname_var_samp_fields
  variance: pokemonhabitatname_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_pokemonhabitatname"
"""
input pokemonhabitatname_aggregate_order_by {
  avg: pokemonhabitatname_avg_order_by
  count: order_by
  max: pokemonhabitatname_max_order_by
  min: pokemonhabitatname_min_order_by
  stddev: pokemonhabitatname_stddev_order_by
  stddev_pop: pokemonhabitatname_stddev_pop_order_by
  stddev_samp: pokemonhabitatname_stddev_samp_order_by
  sum: pokemonhabitatname_sum_order_by
  var_pop: pokemonhabitatname_var_pop_order_by
  var_samp: pokemonhabitatname_var_samp_order_by
  variance: pokemonhabitatname_variance_order_by
}

"""aggregate avg on columns"""
type pokemonhabitatname_avg_fields {
  id: Float
  language_id: Float
  pokemon_habitat_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_pokemonhabitatname"
"""
input pokemonhabitatname_avg_order_by {
  id: order_by
  language_id: order_by
  pokemon_habitat_id: order_by
}

"""
Boolean expression to filter rows from the table
"pokemon_v2_pokemonhabitatname". All fields are combined with a logical 'AND'.
"""
input pokemonhabitatname_bool_exp {
  _and: [pokemonhabitatname_bool_exp!]
  _not: pokemonhabitatname_bool_exp
  _or: [pokemonhabitatname_bool_exp!]
  id: Int_comparison_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
  name: String_comparison_exp
  pokemon_habitat_id: Int_comparison_exp
  pokemonhabitat: pokemonhabitat_bool_exp
}

"""aggregate max on columns"""
type pokemonhabitatname_max_fields {
  id: Int
  language_id: Int
  name: String
  pokemon_habitat_id: Int
}

"""
order by max() on columns of table "pokemon_v2_pokemonhabitatname"
"""
input pokemonhabitatname_max_order_by {
  id: order_by
  language_id: order_by
  name: order_by
  pokemon_habitat_id: order_by
}

"""aggregate min on columns"""
type pokemonhabitatname_min_fields {
  id: Int
  language_id: Int
  name: String
  pokemon_habitat_id: Int
}

"""
order by min() on columns of table "pokemon_v2_pokemonhabitatname"
"""
input pokemonhabitatname_min_order_by {
  id: order_by
  language_id: order_by
  name: order_by
  pokemon_habitat_id: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_pokemonhabitatname".
"""
input pokemonhabitatname_order_by {
  id: order_by
  language: language_order_by
  language_id: order_by
  name: order_by
  pokemon_habitat_id: order_by
  pokemonhabitat: pokemonhabitat_order_by
}

"""
select columns of table "pokemon_v2_pokemonhabitatname"
"""
enum pokemonhabitatname_select_column {
  """column name"""
  id

  """column name"""
  language_id

  """column name"""
  name

  """column name"""
  pokemon_habitat_id
}

"""aggregate stddev on columns"""
type pokemonhabitatname_stddev_fields {
  id: Float
  language_id: Float
  pokemon_habitat_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_pokemonhabitatname"
"""
input pokemonhabitatname_stddev_order_by {
  id: order_by
  language_id: order_by
  pokemon_habitat_id: order_by
}

"""aggregate stddev_pop on columns"""
type pokemonhabitatname_stddev_pop_fields {
  id: Float
  language_id: Float
  pokemon_habitat_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_pokemonhabitatname"
"""
input pokemonhabitatname_stddev_pop_order_by {
  id: order_by
  language_id: order_by
  pokemon_habitat_id: order_by
}

"""aggregate stddev_samp on columns"""
type pokemonhabitatname_stddev_samp_fields {
  id: Float
  language_id: Float
  pokemon_habitat_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_pokemonhabitatname"
"""
input pokemonhabitatname_stddev_samp_order_by {
  id: order_by
  language_id: order_by
  pokemon_habitat_id: order_by
}

"""aggregate sum on columns"""
type pokemonhabitatname_sum_fields {
  id: Int
  language_id: Int
  pokemon_habitat_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_pokemonhabitatname"
"""
input pokemonhabitatname_sum_order_by {
  id: order_by
  language_id: order_by
  pokemon_habitat_id: order_by
}

"""aggregate var_pop on columns"""
type pokemonhabitatname_var_pop_fields {
  id: Float
  language_id: Float
  pokemon_habitat_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_pokemonhabitatname"
"""
input pokemonhabitatname_var_pop_order_by {
  id: order_by
  language_id: order_by
  pokemon_habitat_id: order_by
}

"""aggregate var_samp on columns"""
type pokemonhabitatname_var_samp_fields {
  id: Float
  language_id: Float
  pokemon_habitat_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_pokemonhabitatname"
"""
input pokemonhabitatname_var_samp_order_by {
  id: order_by
  language_id: order_by
  pokemon_habitat_id: order_by
}

"""aggregate variance on columns"""
type pokemonhabitatname_variance_fields {
  id: Float
  language_id: Float
  pokemon_habitat_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_pokemonhabitatname"
"""
input pokemonhabitatname_variance_order_by {
  id: order_by
  language_id: order_by
  pokemon_habitat_id: order_by
}

"""
columns and relationships of "pokemon_v2_pokemonitem"
"""
type pokemonitem {
  id: Int!

  """An object relationship"""
  item: item
  item_id: Int

  """An object relationship"""
  pokemon: pokemon
  pokemon_id: Int
  rarity: Int!

  """An object relationship"""
  version: version
  version_id: Int
}

"""
aggregated selection of "pokemon_v2_pokemonitem"
"""
type pokemonitem_aggregate {
  aggregate: pokemonitem_aggregate_fields
  nodes: [pokemonitem!]!
}

input pokemonitem_aggregate_bool_exp {
  count: pokemonitem_aggregate_bool_exp_count
}

input pokemonitem_aggregate_bool_exp_count {
  arguments: [pokemonitem_select_column!]
  distinct: Boolean
  filter: pokemonitem_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_pokemonitem"
"""
type pokemonitem_aggregate_fields {
  avg: pokemonitem_avg_fields
  count(columns: [pokemonitem_select_column!], distinct: Boolean): Int!
  max: pokemonitem_max_fields
  min: pokemonitem_min_fields
  stddev: pokemonitem_stddev_fields
  stddev_pop: pokemonitem_stddev_pop_fields
  stddev_samp: pokemonitem_stddev_samp_fields
  sum: pokemonitem_sum_fields
  var_pop: pokemonitem_var_pop_fields
  var_samp: pokemonitem_var_samp_fields
  variance: pokemonitem_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_pokemonitem"
"""
input pokemonitem_aggregate_order_by {
  avg: pokemonitem_avg_order_by
  count: order_by
  max: pokemonitem_max_order_by
  min: pokemonitem_min_order_by
  stddev: pokemonitem_stddev_order_by
  stddev_pop: pokemonitem_stddev_pop_order_by
  stddev_samp: pokemonitem_stddev_samp_order_by
  sum: pokemonitem_sum_order_by
  var_pop: pokemonitem_var_pop_order_by
  var_samp: pokemonitem_var_samp_order_by
  variance: pokemonitem_variance_order_by
}

"""aggregate avg on columns"""
type pokemonitem_avg_fields {
  id: Float
  item_id: Float
  pokemon_id: Float
  rarity: Float
  version_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_pokemonitem"
"""
input pokemonitem_avg_order_by {
  id: order_by
  item_id: order_by
  pokemon_id: order_by
  rarity: order_by
  version_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_pokemonitem". All fields are combined with a logical 'AND'.
"""
input pokemonitem_bool_exp {
  _and: [pokemonitem_bool_exp!]
  _not: pokemonitem_bool_exp
  _or: [pokemonitem_bool_exp!]
  id: Int_comparison_exp
  item: item_bool_exp
  item_id: Int_comparison_exp
  pokemon: pokemon_bool_exp
  pokemon_id: Int_comparison_exp
  rarity: Int_comparison_exp
  version: version_bool_exp
  version_id: Int_comparison_exp
}

"""aggregate max on columns"""
type pokemonitem_max_fields {
  id: Int
  item_id: Int
  pokemon_id: Int
  rarity: Int
  version_id: Int
}

"""
order by max() on columns of table "pokemon_v2_pokemonitem"
"""
input pokemonitem_max_order_by {
  id: order_by
  item_id: order_by
  pokemon_id: order_by
  rarity: order_by
  version_id: order_by
}

"""aggregate min on columns"""
type pokemonitem_min_fields {
  id: Int
  item_id: Int
  pokemon_id: Int
  rarity: Int
  version_id: Int
}

"""
order by min() on columns of table "pokemon_v2_pokemonitem"
"""
input pokemonitem_min_order_by {
  id: order_by
  item_id: order_by
  pokemon_id: order_by
  rarity: order_by
  version_id: order_by
}

"""Ordering options when selecting data from "pokemon_v2_pokemonitem"."""
input pokemonitem_order_by {
  id: order_by
  item: item_order_by
  item_id: order_by
  pokemon: pokemon_order_by
  pokemon_id: order_by
  rarity: order_by
  version: version_order_by
  version_id: order_by
}

"""
select columns of table "pokemon_v2_pokemonitem"
"""
enum pokemonitem_select_column {
  """column name"""
  id

  """column name"""
  item_id

  """column name"""
  pokemon_id

  """column name"""
  rarity

  """column name"""
  version_id
}

"""aggregate stddev on columns"""
type pokemonitem_stddev_fields {
  id: Float
  item_id: Float
  pokemon_id: Float
  rarity: Float
  version_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_pokemonitem"
"""
input pokemonitem_stddev_order_by {
  id: order_by
  item_id: order_by
  pokemon_id: order_by
  rarity: order_by
  version_id: order_by
}

"""aggregate stddev_pop on columns"""
type pokemonitem_stddev_pop_fields {
  id: Float
  item_id: Float
  pokemon_id: Float
  rarity: Float
  version_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_pokemonitem"
"""
input pokemonitem_stddev_pop_order_by {
  id: order_by
  item_id: order_by
  pokemon_id: order_by
  rarity: order_by
  version_id: order_by
}

"""aggregate stddev_samp on columns"""
type pokemonitem_stddev_samp_fields {
  id: Float
  item_id: Float
  pokemon_id: Float
  rarity: Float
  version_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_pokemonitem"
"""
input pokemonitem_stddev_samp_order_by {
  id: order_by
  item_id: order_by
  pokemon_id: order_by
  rarity: order_by
  version_id: order_by
}

"""aggregate sum on columns"""
type pokemonitem_sum_fields {
  id: Int
  item_id: Int
  pokemon_id: Int
  rarity: Int
  version_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_pokemonitem"
"""
input pokemonitem_sum_order_by {
  id: order_by
  item_id: order_by
  pokemon_id: order_by
  rarity: order_by
  version_id: order_by
}

"""aggregate var_pop on columns"""
type pokemonitem_var_pop_fields {
  id: Float
  item_id: Float
  pokemon_id: Float
  rarity: Float
  version_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_pokemonitem"
"""
input pokemonitem_var_pop_order_by {
  id: order_by
  item_id: order_by
  pokemon_id: order_by
  rarity: order_by
  version_id: order_by
}

"""aggregate var_samp on columns"""
type pokemonitem_var_samp_fields {
  id: Float
  item_id: Float
  pokemon_id: Float
  rarity: Float
  version_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_pokemonitem"
"""
input pokemonitem_var_samp_order_by {
  id: order_by
  item_id: order_by
  pokemon_id: order_by
  rarity: order_by
  version_id: order_by
}

"""aggregate variance on columns"""
type pokemonitem_variance_fields {
  id: Float
  item_id: Float
  pokemon_id: Float
  rarity: Float
  version_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_pokemonitem"
"""
input pokemonitem_variance_order_by {
  id: order_by
  item_id: order_by
  pokemon_id: order_by
  rarity: order_by
  version_id: order_by
}

"""
columns and relationships of "pokemon_v2_pokemonmove"
"""
type pokemonmove {
  id: Int!
  level: Int!
  mastery: Int

  """An object relationship"""
  move: move
  move_id: Int
  move_learn_method_id: Int

  """An object relationship"""
  movelearnmethod: movelearnmethod
  order: Int

  """An object relationship"""
  pokemon: pokemon
  pokemon_id: Int
  version_group_id: Int

  """An object relationship"""
  versiongroup: versiongroup
}

"""
aggregated selection of "pokemon_v2_pokemonmove"
"""
type pokemonmove_aggregate {
  aggregate: pokemonmove_aggregate_fields
  nodes: [pokemonmove!]!
}

input pokemonmove_aggregate_bool_exp {
  count: pokemonmove_aggregate_bool_exp_count
}

input pokemonmove_aggregate_bool_exp_count {
  arguments: [pokemonmove_select_column!]
  distinct: Boolean
  filter: pokemonmove_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_pokemonmove"
"""
type pokemonmove_aggregate_fields {
  avg: pokemonmove_avg_fields
  count(columns: [pokemonmove_select_column!], distinct: Boolean): Int!
  max: pokemonmove_max_fields
  min: pokemonmove_min_fields
  stddev: pokemonmove_stddev_fields
  stddev_pop: pokemonmove_stddev_pop_fields
  stddev_samp: pokemonmove_stddev_samp_fields
  sum: pokemonmove_sum_fields
  var_pop: pokemonmove_var_pop_fields
  var_samp: pokemonmove_var_samp_fields
  variance: pokemonmove_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_pokemonmove"
"""
input pokemonmove_aggregate_order_by {
  avg: pokemonmove_avg_order_by
  count: order_by
  max: pokemonmove_max_order_by
  min: pokemonmove_min_order_by
  stddev: pokemonmove_stddev_order_by
  stddev_pop: pokemonmove_stddev_pop_order_by
  stddev_samp: pokemonmove_stddev_samp_order_by
  sum: pokemonmove_sum_order_by
  var_pop: pokemonmove_var_pop_order_by
  var_samp: pokemonmove_var_samp_order_by
  variance: pokemonmove_variance_order_by
}

"""aggregate avg on columns"""
type pokemonmove_avg_fields {
  id: Float
  level: Float
  mastery: Float
  move_id: Float
  move_learn_method_id: Float
  order: Float
  pokemon_id: Float
  version_group_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_pokemonmove"
"""
input pokemonmove_avg_order_by {
  id: order_by
  level: order_by
  mastery: order_by
  move_id: order_by
  move_learn_method_id: order_by
  order: order_by
  pokemon_id: order_by
  version_group_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_pokemonmove". All fields are combined with a logical 'AND'.
"""
input pokemonmove_bool_exp {
  _and: [pokemonmove_bool_exp!]
  _not: pokemonmove_bool_exp
  _or: [pokemonmove_bool_exp!]
  id: Int_comparison_exp
  level: Int_comparison_exp
  mastery: Int_comparison_exp
  move: move_bool_exp
  move_id: Int_comparison_exp
  move_learn_method_id: Int_comparison_exp
  movelearnmethod: movelearnmethod_bool_exp
  order: Int_comparison_exp
  pokemon: pokemon_bool_exp
  pokemon_id: Int_comparison_exp
  version_group_id: Int_comparison_exp
  versiongroup: versiongroup_bool_exp
}

"""aggregate max on columns"""
type pokemonmove_max_fields {
  id: Int
  level: Int
  mastery: Int
  move_id: Int
  move_learn_method_id: Int
  order: Int
  pokemon_id: Int
  version_group_id: Int
}

"""
order by max() on columns of table "pokemon_v2_pokemonmove"
"""
input pokemonmove_max_order_by {
  id: order_by
  level: order_by
  mastery: order_by
  move_id: order_by
  move_learn_method_id: order_by
  order: order_by
  pokemon_id: order_by
  version_group_id: order_by
}

"""aggregate min on columns"""
type pokemonmove_min_fields {
  id: Int
  level: Int
  mastery: Int
  move_id: Int
  move_learn_method_id: Int
  order: Int
  pokemon_id: Int
  version_group_id: Int
}

"""
order by min() on columns of table "pokemon_v2_pokemonmove"
"""
input pokemonmove_min_order_by {
  id: order_by
  level: order_by
  mastery: order_by
  move_id: order_by
  move_learn_method_id: order_by
  order: order_by
  pokemon_id: order_by
  version_group_id: order_by
}

"""Ordering options when selecting data from "pokemon_v2_pokemonmove"."""
input pokemonmove_order_by {
  id: order_by
  level: order_by
  mastery: order_by
  move: move_order_by
  move_id: order_by
  move_learn_method_id: order_by
  movelearnmethod: movelearnmethod_order_by
  order: order_by
  pokemon: pokemon_order_by
  pokemon_id: order_by
  version_group_id: order_by
  versiongroup: versiongroup_order_by
}

"""
select columns of table "pokemon_v2_pokemonmove"
"""
enum pokemonmove_select_column {
  """column name"""
  id

  """column name"""
  level

  """column name"""
  mastery

  """column name"""
  move_id

  """column name"""
  move_learn_method_id

  """column name"""
  order

  """column name"""
  pokemon_id

  """column name"""
  version_group_id
}

"""aggregate stddev on columns"""
type pokemonmove_stddev_fields {
  id: Float
  level: Float
  mastery: Float
  move_id: Float
  move_learn_method_id: Float
  order: Float
  pokemon_id: Float
  version_group_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_pokemonmove"
"""
input pokemonmove_stddev_order_by {
  id: order_by
  level: order_by
  mastery: order_by
  move_id: order_by
  move_learn_method_id: order_by
  order: order_by
  pokemon_id: order_by
  version_group_id: order_by
}

"""aggregate stddev_pop on columns"""
type pokemonmove_stddev_pop_fields {
  id: Float
  level: Float
  mastery: Float
  move_id: Float
  move_learn_method_id: Float
  order: Float
  pokemon_id: Float
  version_group_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_pokemonmove"
"""
input pokemonmove_stddev_pop_order_by {
  id: order_by
  level: order_by
  mastery: order_by
  move_id: order_by
  move_learn_method_id: order_by
  order: order_by
  pokemon_id: order_by
  version_group_id: order_by
}

"""aggregate stddev_samp on columns"""
type pokemonmove_stddev_samp_fields {
  id: Float
  level: Float
  mastery: Float
  move_id: Float
  move_learn_method_id: Float
  order: Float
  pokemon_id: Float
  version_group_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_pokemonmove"
"""
input pokemonmove_stddev_samp_order_by {
  id: order_by
  level: order_by
  mastery: order_by
  move_id: order_by
  move_learn_method_id: order_by
  order: order_by
  pokemon_id: order_by
  version_group_id: order_by
}

"""aggregate sum on columns"""
type pokemonmove_sum_fields {
  id: Int
  level: Int
  mastery: Int
  move_id: Int
  move_learn_method_id: Int
  order: Int
  pokemon_id: Int
  version_group_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_pokemonmove"
"""
input pokemonmove_sum_order_by {
  id: order_by
  level: order_by
  mastery: order_by
  move_id: order_by
  move_learn_method_id: order_by
  order: order_by
  pokemon_id: order_by
  version_group_id: order_by
}

"""aggregate var_pop on columns"""
type pokemonmove_var_pop_fields {
  id: Float
  level: Float
  mastery: Float
  move_id: Float
  move_learn_method_id: Float
  order: Float
  pokemon_id: Float
  version_group_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_pokemonmove"
"""
input pokemonmove_var_pop_order_by {
  id: order_by
  level: order_by
  mastery: order_by
  move_id: order_by
  move_learn_method_id: order_by
  order: order_by
  pokemon_id: order_by
  version_group_id: order_by
}

"""aggregate var_samp on columns"""
type pokemonmove_var_samp_fields {
  id: Float
  level: Float
  mastery: Float
  move_id: Float
  move_learn_method_id: Float
  order: Float
  pokemon_id: Float
  version_group_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_pokemonmove"
"""
input pokemonmove_var_samp_order_by {
  id: order_by
  level: order_by
  mastery: order_by
  move_id: order_by
  move_learn_method_id: order_by
  order: order_by
  pokemon_id: order_by
  version_group_id: order_by
}

"""aggregate variance on columns"""
type pokemonmove_variance_fields {
  id: Float
  level: Float
  mastery: Float
  move_id: Float
  move_learn_method_id: Float
  order: Float
  pokemon_id: Float
  version_group_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_pokemonmove"
"""
input pokemonmove_variance_order_by {
  id: order_by
  level: order_by
  mastery: order_by
  move_id: order_by
  move_learn_method_id: order_by
  order: order_by
  pokemon_id: order_by
  version_group_id: order_by
}

"""
columns and relationships of "pokemon_v2_pokemonshape"
"""
type pokemonshape {
  id: Int!
  name: String!

  """An array relationship"""
  pokemonshapenames(
    """distinct select on columns"""
    distinct_on: [pokemonshapename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonshapename_order_by!]

    """filter the rows returned"""
    where: pokemonshapename_bool_exp
  ): [pokemonshapename!]!

  """An aggregate relationship"""
  pokemonshapenames_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonshapename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonshapename_order_by!]

    """filter the rows returned"""
    where: pokemonshapename_bool_exp
  ): pokemonshapename_aggregate!

  """An array relationship"""
  pokemonspecies(
    """distinct select on columns"""
    distinct_on: [pokemonspecies_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonspecies_order_by!]

    """filter the rows returned"""
    where: pokemonspecies_bool_exp
  ): [pokemonspecies!]!

  """An aggregate relationship"""
  pokemonspecies_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonspecies_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonspecies_order_by!]

    """filter the rows returned"""
    where: pokemonspecies_bool_exp
  ): pokemonspecies_aggregate!
}

"""
aggregated selection of "pokemon_v2_pokemonshape"
"""
type pokemonshape_aggregate {
  aggregate: pokemonshape_aggregate_fields
  nodes: [pokemonshape!]!
}

"""
aggregate fields of "pokemon_v2_pokemonshape"
"""
type pokemonshape_aggregate_fields {
  avg: pokemonshape_avg_fields
  count(columns: [pokemonshape_select_column!], distinct: Boolean): Int!
  max: pokemonshape_max_fields
  min: pokemonshape_min_fields
  stddev: pokemonshape_stddev_fields
  stddev_pop: pokemonshape_stddev_pop_fields
  stddev_samp: pokemonshape_stddev_samp_fields
  sum: pokemonshape_sum_fields
  var_pop: pokemonshape_var_pop_fields
  var_samp: pokemonshape_var_samp_fields
  variance: pokemonshape_variance_fields
}

"""aggregate avg on columns"""
type pokemonshape_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "pokemon_v2_pokemonshape". All fields are combined with a logical 'AND'.
"""
input pokemonshape_bool_exp {
  _and: [pokemonshape_bool_exp!]
  _not: pokemonshape_bool_exp
  _or: [pokemonshape_bool_exp!]
  id: Int_comparison_exp
  name: String_comparison_exp
  pokemonshapenames: pokemonshapename_bool_exp
  pokemonshapenames_aggregate: pokemonshapename_aggregate_bool_exp
  pokemonspecies: pokemonspecies_bool_exp
  pokemonspecies_aggregate: pokemonspecies_aggregate_bool_exp
}

"""aggregate max on columns"""
type pokemonshape_max_fields {
  id: Int
  name: String
}

"""aggregate min on columns"""
type pokemonshape_min_fields {
  id: Int
  name: String
}

"""Ordering options when selecting data from "pokemon_v2_pokemonshape"."""
input pokemonshape_order_by {
  id: order_by
  name: order_by
  pokemonshapenames_aggregate: pokemonshapename_aggregate_order_by
  pokemonspecies_aggregate: pokemonspecies_aggregate_order_by
}

"""
select columns of table "pokemon_v2_pokemonshape"
"""
enum pokemonshape_select_column {
  """column name"""
  id

  """column name"""
  name
}

"""aggregate stddev on columns"""
type pokemonshape_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type pokemonshape_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type pokemonshape_stddev_samp_fields {
  id: Float
}

"""aggregate sum on columns"""
type pokemonshape_sum_fields {
  id: Int
}

"""aggregate var_pop on columns"""
type pokemonshape_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type pokemonshape_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type pokemonshape_variance_fields {
  id: Float
}

"""
columns and relationships of "pokemon_v2_pokemonshapename"
"""
type pokemonshapename {
  awesome_name: String!
  id: Int!

  """An object relationship"""
  language: language
  language_id: Int
  name: String!
  pokemon_shape_id: Int

  """An object relationship"""
  pokemonshape: pokemonshape
}

"""
aggregated selection of "pokemon_v2_pokemonshapename"
"""
type pokemonshapename_aggregate {
  aggregate: pokemonshapename_aggregate_fields
  nodes: [pokemonshapename!]!
}

input pokemonshapename_aggregate_bool_exp {
  count: pokemonshapename_aggregate_bool_exp_count
}

input pokemonshapename_aggregate_bool_exp_count {
  arguments: [pokemonshapename_select_column!]
  distinct: Boolean
  filter: pokemonshapename_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_pokemonshapename"
"""
type pokemonshapename_aggregate_fields {
  avg: pokemonshapename_avg_fields
  count(columns: [pokemonshapename_select_column!], distinct: Boolean): Int!
  max: pokemonshapename_max_fields
  min: pokemonshapename_min_fields
  stddev: pokemonshapename_stddev_fields
  stddev_pop: pokemonshapename_stddev_pop_fields
  stddev_samp: pokemonshapename_stddev_samp_fields
  sum: pokemonshapename_sum_fields
  var_pop: pokemonshapename_var_pop_fields
  var_samp: pokemonshapename_var_samp_fields
  variance: pokemonshapename_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_pokemonshapename"
"""
input pokemonshapename_aggregate_order_by {
  avg: pokemonshapename_avg_order_by
  count: order_by
  max: pokemonshapename_max_order_by
  min: pokemonshapename_min_order_by
  stddev: pokemonshapename_stddev_order_by
  stddev_pop: pokemonshapename_stddev_pop_order_by
  stddev_samp: pokemonshapename_stddev_samp_order_by
  sum: pokemonshapename_sum_order_by
  var_pop: pokemonshapename_var_pop_order_by
  var_samp: pokemonshapename_var_samp_order_by
  variance: pokemonshapename_variance_order_by
}

"""aggregate avg on columns"""
type pokemonshapename_avg_fields {
  id: Float
  language_id: Float
  pokemon_shape_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_pokemonshapename"
"""
input pokemonshapename_avg_order_by {
  id: order_by
  language_id: order_by
  pokemon_shape_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_pokemonshapename".
All fields are combined with a logical 'AND'.
"""
input pokemonshapename_bool_exp {
  _and: [pokemonshapename_bool_exp!]
  _not: pokemonshapename_bool_exp
  _or: [pokemonshapename_bool_exp!]
  awesome_name: String_comparison_exp
  id: Int_comparison_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
  name: String_comparison_exp
  pokemon_shape_id: Int_comparison_exp
  pokemonshape: pokemonshape_bool_exp
}

"""aggregate max on columns"""
type pokemonshapename_max_fields {
  awesome_name: String
  id: Int
  language_id: Int
  name: String
  pokemon_shape_id: Int
}

"""
order by max() on columns of table "pokemon_v2_pokemonshapename"
"""
input pokemonshapename_max_order_by {
  awesome_name: order_by
  id: order_by
  language_id: order_by
  name: order_by
  pokemon_shape_id: order_by
}

"""aggregate min on columns"""
type pokemonshapename_min_fields {
  awesome_name: String
  id: Int
  language_id: Int
  name: String
  pokemon_shape_id: Int
}

"""
order by min() on columns of table "pokemon_v2_pokemonshapename"
"""
input pokemonshapename_min_order_by {
  awesome_name: order_by
  id: order_by
  language_id: order_by
  name: order_by
  pokemon_shape_id: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_pokemonshapename".
"""
input pokemonshapename_order_by {
  awesome_name: order_by
  id: order_by
  language: language_order_by
  language_id: order_by
  name: order_by
  pokemon_shape_id: order_by
  pokemonshape: pokemonshape_order_by
}

"""
select columns of table "pokemon_v2_pokemonshapename"
"""
enum pokemonshapename_select_column {
  """column name"""
  awesome_name

  """column name"""
  id

  """column name"""
  language_id

  """column name"""
  name

  """column name"""
  pokemon_shape_id
}

"""aggregate stddev on columns"""
type pokemonshapename_stddev_fields {
  id: Float
  language_id: Float
  pokemon_shape_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_pokemonshapename"
"""
input pokemonshapename_stddev_order_by {
  id: order_by
  language_id: order_by
  pokemon_shape_id: order_by
}

"""aggregate stddev_pop on columns"""
type pokemonshapename_stddev_pop_fields {
  id: Float
  language_id: Float
  pokemon_shape_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_pokemonshapename"
"""
input pokemonshapename_stddev_pop_order_by {
  id: order_by
  language_id: order_by
  pokemon_shape_id: order_by
}

"""aggregate stddev_samp on columns"""
type pokemonshapename_stddev_samp_fields {
  id: Float
  language_id: Float
  pokemon_shape_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_pokemonshapename"
"""
input pokemonshapename_stddev_samp_order_by {
  id: order_by
  language_id: order_by
  pokemon_shape_id: order_by
}

"""aggregate sum on columns"""
type pokemonshapename_sum_fields {
  id: Int
  language_id: Int
  pokemon_shape_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_pokemonshapename"
"""
input pokemonshapename_sum_order_by {
  id: order_by
  language_id: order_by
  pokemon_shape_id: order_by
}

"""aggregate var_pop on columns"""
type pokemonshapename_var_pop_fields {
  id: Float
  language_id: Float
  pokemon_shape_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_pokemonshapename"
"""
input pokemonshapename_var_pop_order_by {
  id: order_by
  language_id: order_by
  pokemon_shape_id: order_by
}

"""aggregate var_samp on columns"""
type pokemonshapename_var_samp_fields {
  id: Float
  language_id: Float
  pokemon_shape_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_pokemonshapename"
"""
input pokemonshapename_var_samp_order_by {
  id: order_by
  language_id: order_by
  pokemon_shape_id: order_by
}

"""aggregate variance on columns"""
type pokemonshapename_variance_fields {
  id: Float
  language_id: Float
  pokemon_shape_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_pokemonshapename"
"""
input pokemonshapename_variance_order_by {
  id: order_by
  language_id: order_by
  pokemon_shape_id: order_by
}

"""
columns and relationships of "pokemon_v2_pokemonspecies"
"""
type pokemonspecies {
  """An array relationship"""
  PokemonevolutionsByPartySpeciesId(
    """distinct select on columns"""
    distinct_on: [pokemonevolution_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonevolution_order_by!]

    """filter the rows returned"""
    where: pokemonevolution_bool_exp
  ): [pokemonevolution!]!

  """An aggregate relationship"""
  PokemonevolutionsByPartySpeciesId_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonevolution_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonevolution_order_by!]

    """filter the rows returned"""
    where: pokemonevolution_bool_exp
  ): pokemonevolution_aggregate!

  """An array relationship"""
  PokemonevolutionsByTradeSpeciesId(
    """distinct select on columns"""
    distinct_on: [pokemonevolution_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonevolution_order_by!]

    """filter the rows returned"""
    where: pokemonevolution_bool_exp
  ): [pokemonevolution!]!

  """An aggregate relationship"""
  PokemonevolutionsByTradeSpeciesId_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonevolution_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonevolution_order_by!]

    """filter the rows returned"""
    where: pokemonevolution_bool_exp
  ): pokemonevolution_aggregate!
  base_happiness: Int
  capture_rate: Int
  evolution_chain_id: Int

  """An object relationship"""
  evolutionchain: evolutionchain
  evolves_from_species_id: Int
  forms_switchable: Boolean!
  gender_rate: Int

  """An object relationship"""
  generation: generation
  generation_id: Int
  growth_rate_id: Int

  """An object relationship"""
  growthrate: growthrate
  has_gender_differences: Boolean!
  hatch_counter: Int
  id: Int!
  is_baby: Boolean!
  is_legendary: Boolean!
  is_mythical: Boolean!
  name: String!
  order: Int

  """An array relationship"""
  palparks(
    """distinct select on columns"""
    distinct_on: [palpark_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [palpark_order_by!]

    """filter the rows returned"""
    where: palpark_bool_exp
  ): [palpark!]!

  """An aggregate relationship"""
  palparks_aggregate(
    """distinct select on columns"""
    distinct_on: [palpark_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [palpark_order_by!]

    """filter the rows returned"""
    where: palpark_bool_exp
  ): palpark_aggregate!
  pokemon_color_id: Int
  pokemon_habitat_id: Int
  pokemon_shape_id: Int

  """An object relationship"""
  pokemoncolor: pokemoncolor

  """An array relationship"""
  pokemondexnumbers(
    """distinct select on columns"""
    distinct_on: [pokemondexnumber_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemondexnumber_order_by!]

    """filter the rows returned"""
    where: pokemondexnumber_bool_exp
  ): [pokemondexnumber!]!

  """An aggregate relationship"""
  pokemondexnumbers_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemondexnumber_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemondexnumber_order_by!]

    """filter the rows returned"""
    where: pokemondexnumber_bool_exp
  ): pokemondexnumber_aggregate!

  """An array relationship"""
  pokemonegggroups(
    """distinct select on columns"""
    distinct_on: [pokemonegggroup_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonegggroup_order_by!]

    """filter the rows returned"""
    where: pokemonegggroup_bool_exp
  ): [pokemonegggroup!]!

  """An aggregate relationship"""
  pokemonegggroups_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonegggroup_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonegggroup_order_by!]

    """filter the rows returned"""
    where: pokemonegggroup_bool_exp
  ): pokemonegggroup_aggregate!

  """An array relationship"""
  pokemonevolutions(
    """distinct select on columns"""
    distinct_on: [pokemonevolution_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonevolution_order_by!]

    """filter the rows returned"""
    where: pokemonevolution_bool_exp
  ): [pokemonevolution!]!

  """An aggregate relationship"""
  pokemonevolutions_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonevolution_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonevolution_order_by!]

    """filter the rows returned"""
    where: pokemonevolution_bool_exp
  ): pokemonevolution_aggregate!

  """An object relationship"""
  pokemonhabitat: pokemonhabitat

  """An array relationship"""
  pokemons(
    """distinct select on columns"""
    distinct_on: [pokemon_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemon_order_by!]

    """filter the rows returned"""
    where: pokemon_bool_exp
  ): [pokemon!]!

  """An aggregate relationship"""
  pokemons_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemon_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemon_order_by!]

    """filter the rows returned"""
    where: pokemon_bool_exp
  ): pokemon_aggregate!

  """An object relationship"""
  pokemonshape: pokemonshape

  """An array relationship"""
  pokemonspecies(
    """distinct select on columns"""
    distinct_on: [pokemonspecies_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonspecies_order_by!]

    """filter the rows returned"""
    where: pokemonspecies_bool_exp
  ): [pokemonspecies!]!

  """An aggregate relationship"""
  pokemonspecies_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonspecies_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonspecies_order_by!]

    """filter the rows returned"""
    where: pokemonspecies_bool_exp
  ): pokemonspecies_aggregate!

  """An array relationship"""
  pokemonspeciesdescriptions(
    """distinct select on columns"""
    distinct_on: [pokemonspeciesdescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonspeciesdescription_order_by!]

    """filter the rows returned"""
    where: pokemonspeciesdescription_bool_exp
  ): [pokemonspeciesdescription!]!

  """An aggregate relationship"""
  pokemonspeciesdescriptions_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonspeciesdescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonspeciesdescription_order_by!]

    """filter the rows returned"""
    where: pokemonspeciesdescription_bool_exp
  ): pokemonspeciesdescription_aggregate!

  """An array relationship"""
  pokemonspeciesflavortexts(
    """distinct select on columns"""
    distinct_on: [pokemonspeciesflavortext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonspeciesflavortext_order_by!]

    """filter the rows returned"""
    where: pokemonspeciesflavortext_bool_exp
  ): [pokemonspeciesflavortext!]!

  """An aggregate relationship"""
  pokemonspeciesflavortexts_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonspeciesflavortext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonspeciesflavortext_order_by!]

    """filter the rows returned"""
    where: pokemonspeciesflavortext_bool_exp
  ): pokemonspeciesflavortext_aggregate!

  """An array relationship"""
  pokemonspeciesnames(
    """distinct select on columns"""
    distinct_on: [pokemonspeciesname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonspeciesname_order_by!]

    """filter the rows returned"""
    where: pokemonspeciesname_bool_exp
  ): [pokemonspeciesname!]!

  """An aggregate relationship"""
  pokemonspeciesnames_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonspeciesname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonspeciesname_order_by!]

    """filter the rows returned"""
    where: pokemonspeciesname_bool_exp
  ): pokemonspeciesname_aggregate!

  """An object relationship"""
  pokemonspecy: pokemonspecies
}

"""
aggregated selection of "pokemon_v2_pokemonspecies"
"""
type pokemonspecies_aggregate {
  aggregate: pokemonspecies_aggregate_fields
  nodes: [pokemonspecies!]!
}

input pokemonspecies_aggregate_bool_exp {
  bool_and: pokemonspecies_aggregate_bool_exp_bool_and
  bool_or: pokemonspecies_aggregate_bool_exp_bool_or
  count: pokemonspecies_aggregate_bool_exp_count
}

input pokemonspecies_aggregate_bool_exp_bool_and {
  arguments: pokemonspecies_select_column_pokemonspecies_aggregate_bool_exp_bool_and_arguments_columns!
  distinct: Boolean
  filter: pokemonspecies_bool_exp
  predicate: Boolean_comparison_exp!
}

input pokemonspecies_aggregate_bool_exp_bool_or {
  arguments: pokemonspecies_select_column_pokemonspecies_aggregate_bool_exp_bool_or_arguments_columns!
  distinct: Boolean
  filter: pokemonspecies_bool_exp
  predicate: Boolean_comparison_exp!
}

input pokemonspecies_aggregate_bool_exp_count {
  arguments: [pokemonspecies_select_column!]
  distinct: Boolean
  filter: pokemonspecies_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_pokemonspecies"
"""
type pokemonspecies_aggregate_fields {
  avg: pokemonspecies_avg_fields
  count(columns: [pokemonspecies_select_column!], distinct: Boolean): Int!
  max: pokemonspecies_max_fields
  min: pokemonspecies_min_fields
  stddev: pokemonspecies_stddev_fields
  stddev_pop: pokemonspecies_stddev_pop_fields
  stddev_samp: pokemonspecies_stddev_samp_fields
  sum: pokemonspecies_sum_fields
  var_pop: pokemonspecies_var_pop_fields
  var_samp: pokemonspecies_var_samp_fields
  variance: pokemonspecies_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_pokemonspecies"
"""
input pokemonspecies_aggregate_order_by {
  avg: pokemonspecies_avg_order_by
  count: order_by
  max: pokemonspecies_max_order_by
  min: pokemonspecies_min_order_by
  stddev: pokemonspecies_stddev_order_by
  stddev_pop: pokemonspecies_stddev_pop_order_by
  stddev_samp: pokemonspecies_stddev_samp_order_by
  sum: pokemonspecies_sum_order_by
  var_pop: pokemonspecies_var_pop_order_by
  var_samp: pokemonspecies_var_samp_order_by
  variance: pokemonspecies_variance_order_by
}

"""aggregate avg on columns"""
type pokemonspecies_avg_fields {
  base_happiness: Float
  capture_rate: Float
  evolution_chain_id: Float
  evolves_from_species_id: Float
  gender_rate: Float
  generation_id: Float
  growth_rate_id: Float
  hatch_counter: Float
  id: Float
  order: Float
  pokemon_color_id: Float
  pokemon_habitat_id: Float
  pokemon_shape_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_pokemonspecies"
"""
input pokemonspecies_avg_order_by {
  base_happiness: order_by
  capture_rate: order_by
  evolution_chain_id: order_by
  evolves_from_species_id: order_by
  gender_rate: order_by
  generation_id: order_by
  growth_rate_id: order_by
  hatch_counter: order_by
  id: order_by
  order: order_by
  pokemon_color_id: order_by
  pokemon_habitat_id: order_by
  pokemon_shape_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_pokemonspecies". All fields are combined with a logical 'AND'.
"""
input pokemonspecies_bool_exp {
  PokemonevolutionsByPartySpeciesId: pokemonevolution_bool_exp
  PokemonevolutionsByPartySpeciesId_aggregate: pokemonevolution_aggregate_bool_exp
  PokemonevolutionsByTradeSpeciesId: pokemonevolution_bool_exp
  PokemonevolutionsByTradeSpeciesId_aggregate: pokemonevolution_aggregate_bool_exp
  _and: [pokemonspecies_bool_exp!]
  _not: pokemonspecies_bool_exp
  _or: [pokemonspecies_bool_exp!]
  base_happiness: Int_comparison_exp
  capture_rate: Int_comparison_exp
  evolution_chain_id: Int_comparison_exp
  evolutionchain: evolutionchain_bool_exp
  evolves_from_species_id: Int_comparison_exp
  forms_switchable: Boolean_comparison_exp
  gender_rate: Int_comparison_exp
  generation: generation_bool_exp
  generation_id: Int_comparison_exp
  growth_rate_id: Int_comparison_exp
  growthrate: growthrate_bool_exp
  has_gender_differences: Boolean_comparison_exp
  hatch_counter: Int_comparison_exp
  id: Int_comparison_exp
  is_baby: Boolean_comparison_exp
  is_legendary: Boolean_comparison_exp
  is_mythical: Boolean_comparison_exp
  name: String_comparison_exp
  order: Int_comparison_exp
  palparks: palpark_bool_exp
  palparks_aggregate: palpark_aggregate_bool_exp
  pokemon_color_id: Int_comparison_exp
  pokemon_habitat_id: Int_comparison_exp
  pokemon_shape_id: Int_comparison_exp
  pokemoncolor: pokemoncolor_bool_exp
  pokemondexnumbers: pokemondexnumber_bool_exp
  pokemondexnumbers_aggregate: pokemondexnumber_aggregate_bool_exp
  pokemonegggroups: pokemonegggroup_bool_exp
  pokemonegggroups_aggregate: pokemonegggroup_aggregate_bool_exp
  pokemonevolutions: pokemonevolution_bool_exp
  pokemonevolutions_aggregate: pokemonevolution_aggregate_bool_exp
  pokemonhabitat: pokemonhabitat_bool_exp
  pokemons: pokemon_bool_exp
  pokemons_aggregate: pokemon_aggregate_bool_exp
  pokemonshape: pokemonshape_bool_exp
  pokemonspecies: pokemonspecies_bool_exp
  pokemonspecies_aggregate: pokemonspecies_aggregate_bool_exp
  pokemonspeciesdescriptions: pokemonspeciesdescription_bool_exp
  pokemonspeciesdescriptions_aggregate: pokemonspeciesdescription_aggregate_bool_exp
  pokemonspeciesflavortexts: pokemonspeciesflavortext_bool_exp
  pokemonspeciesflavortexts_aggregate: pokemonspeciesflavortext_aggregate_bool_exp
  pokemonspeciesnames: pokemonspeciesname_bool_exp
  pokemonspeciesnames_aggregate: pokemonspeciesname_aggregate_bool_exp
  pokemonspecy: pokemonspecies_bool_exp
}

"""aggregate max on columns"""
type pokemonspecies_max_fields {
  base_happiness: Int
  capture_rate: Int
  evolution_chain_id: Int
  evolves_from_species_id: Int
  gender_rate: Int
  generation_id: Int
  growth_rate_id: Int
  hatch_counter: Int
  id: Int
  name: String
  order: Int
  pokemon_color_id: Int
  pokemon_habitat_id: Int
  pokemon_shape_id: Int
}

"""
order by max() on columns of table "pokemon_v2_pokemonspecies"
"""
input pokemonspecies_max_order_by {
  base_happiness: order_by
  capture_rate: order_by
  evolution_chain_id: order_by
  evolves_from_species_id: order_by
  gender_rate: order_by
  generation_id: order_by
  growth_rate_id: order_by
  hatch_counter: order_by
  id: order_by
  name: order_by
  order: order_by
  pokemon_color_id: order_by
  pokemon_habitat_id: order_by
  pokemon_shape_id: order_by
}

"""aggregate min on columns"""
type pokemonspecies_min_fields {
  base_happiness: Int
  capture_rate: Int
  evolution_chain_id: Int
  evolves_from_species_id: Int
  gender_rate: Int
  generation_id: Int
  growth_rate_id: Int
  hatch_counter: Int
  id: Int
  name: String
  order: Int
  pokemon_color_id: Int
  pokemon_habitat_id: Int
  pokemon_shape_id: Int
}

"""
order by min() on columns of table "pokemon_v2_pokemonspecies"
"""
input pokemonspecies_min_order_by {
  base_happiness: order_by
  capture_rate: order_by
  evolution_chain_id: order_by
  evolves_from_species_id: order_by
  gender_rate: order_by
  generation_id: order_by
  growth_rate_id: order_by
  hatch_counter: order_by
  id: order_by
  name: order_by
  order: order_by
  pokemon_color_id: order_by
  pokemon_habitat_id: order_by
  pokemon_shape_id: order_by
}

"""Ordering options when selecting data from "pokemon_v2_pokemonspecies"."""
input pokemonspecies_order_by {
  PokemonevolutionsByPartySpeciesId_aggregate: pokemonevolution_aggregate_order_by
  PokemonevolutionsByTradeSpeciesId_aggregate: pokemonevolution_aggregate_order_by
  base_happiness: order_by
  capture_rate: order_by
  evolution_chain_id: order_by
  evolutionchain: evolutionchain_order_by
  evolves_from_species_id: order_by
  forms_switchable: order_by
  gender_rate: order_by
  generation: generation_order_by
  generation_id: order_by
  growth_rate_id: order_by
  growthrate: growthrate_order_by
  has_gender_differences: order_by
  hatch_counter: order_by
  id: order_by
  is_baby: order_by
  is_legendary: order_by
  is_mythical: order_by
  name: order_by
  order: order_by
  palparks_aggregate: palpark_aggregate_order_by
  pokemon_color_id: order_by
  pokemon_habitat_id: order_by
  pokemon_shape_id: order_by
  pokemoncolor: pokemoncolor_order_by
  pokemondexnumbers_aggregate: pokemondexnumber_aggregate_order_by
  pokemonegggroups_aggregate: pokemonegggroup_aggregate_order_by
  pokemonevolutions_aggregate: pokemonevolution_aggregate_order_by
  pokemonhabitat: pokemonhabitat_order_by
  pokemons_aggregate: pokemon_aggregate_order_by
  pokemonshape: pokemonshape_order_by
  pokemonspecies_aggregate: pokemonspecies_aggregate_order_by
  pokemonspeciesdescriptions_aggregate: pokemonspeciesdescription_aggregate_order_by
  pokemonspeciesflavortexts_aggregate: pokemonspeciesflavortext_aggregate_order_by
  pokemonspeciesnames_aggregate: pokemonspeciesname_aggregate_order_by
  pokemonspecy: pokemonspecies_order_by
}

"""
select columns of table "pokemon_v2_pokemonspecies"
"""
enum pokemonspecies_select_column {
  """column name"""
  base_happiness

  """column name"""
  capture_rate

  """column name"""
  evolution_chain_id

  """column name"""
  evolves_from_species_id

  """column name"""
  forms_switchable

  """column name"""
  gender_rate

  """column name"""
  generation_id

  """column name"""
  growth_rate_id

  """column name"""
  has_gender_differences

  """column name"""
  hatch_counter

  """column name"""
  id

  """column name"""
  is_baby

  """column name"""
  is_legendary

  """column name"""
  is_mythical

  """column name"""
  name

  """column name"""
  order

  """column name"""
  pokemon_color_id

  """column name"""
  pokemon_habitat_id

  """column name"""
  pokemon_shape_id
}

"""
select "pokemonspecies_aggregate_bool_exp_bool_and_arguments_columns" columns of table "pokemon_v2_pokemonspecies"
"""
enum pokemonspecies_select_column_pokemonspecies_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
  forms_switchable

  """column name"""
  has_gender_differences

  """column name"""
  is_baby

  """column name"""
  is_legendary

  """column name"""
  is_mythical
}

"""
select "pokemonspecies_aggregate_bool_exp_bool_or_arguments_columns" columns of table "pokemon_v2_pokemonspecies"
"""
enum pokemonspecies_select_column_pokemonspecies_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
  forms_switchable

  """column name"""
  has_gender_differences

  """column name"""
  is_baby

  """column name"""
  is_legendary

  """column name"""
  is_mythical
}

"""aggregate stddev on columns"""
type pokemonspecies_stddev_fields {
  base_happiness: Float
  capture_rate: Float
  evolution_chain_id: Float
  evolves_from_species_id: Float
  gender_rate: Float
  generation_id: Float
  growth_rate_id: Float
  hatch_counter: Float
  id: Float
  order: Float
  pokemon_color_id: Float
  pokemon_habitat_id: Float
  pokemon_shape_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_pokemonspecies"
"""
input pokemonspecies_stddev_order_by {
  base_happiness: order_by
  capture_rate: order_by
  evolution_chain_id: order_by
  evolves_from_species_id: order_by
  gender_rate: order_by
  generation_id: order_by
  growth_rate_id: order_by
  hatch_counter: order_by
  id: order_by
  order: order_by
  pokemon_color_id: order_by
  pokemon_habitat_id: order_by
  pokemon_shape_id: order_by
}

"""aggregate stddev_pop on columns"""
type pokemonspecies_stddev_pop_fields {
  base_happiness: Float
  capture_rate: Float
  evolution_chain_id: Float
  evolves_from_species_id: Float
  gender_rate: Float
  generation_id: Float
  growth_rate_id: Float
  hatch_counter: Float
  id: Float
  order: Float
  pokemon_color_id: Float
  pokemon_habitat_id: Float
  pokemon_shape_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_pokemonspecies"
"""
input pokemonspecies_stddev_pop_order_by {
  base_happiness: order_by
  capture_rate: order_by
  evolution_chain_id: order_by
  evolves_from_species_id: order_by
  gender_rate: order_by
  generation_id: order_by
  growth_rate_id: order_by
  hatch_counter: order_by
  id: order_by
  order: order_by
  pokemon_color_id: order_by
  pokemon_habitat_id: order_by
  pokemon_shape_id: order_by
}

"""aggregate stddev_samp on columns"""
type pokemonspecies_stddev_samp_fields {
  base_happiness: Float
  capture_rate: Float
  evolution_chain_id: Float
  evolves_from_species_id: Float
  gender_rate: Float
  generation_id: Float
  growth_rate_id: Float
  hatch_counter: Float
  id: Float
  order: Float
  pokemon_color_id: Float
  pokemon_habitat_id: Float
  pokemon_shape_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_pokemonspecies"
"""
input pokemonspecies_stddev_samp_order_by {
  base_happiness: order_by
  capture_rate: order_by
  evolution_chain_id: order_by
  evolves_from_species_id: order_by
  gender_rate: order_by
  generation_id: order_by
  growth_rate_id: order_by
  hatch_counter: order_by
  id: order_by
  order: order_by
  pokemon_color_id: order_by
  pokemon_habitat_id: order_by
  pokemon_shape_id: order_by
}

"""aggregate sum on columns"""
type pokemonspecies_sum_fields {
  base_happiness: Int
  capture_rate: Int
  evolution_chain_id: Int
  evolves_from_species_id: Int
  gender_rate: Int
  generation_id: Int
  growth_rate_id: Int
  hatch_counter: Int
  id: Int
  order: Int
  pokemon_color_id: Int
  pokemon_habitat_id: Int
  pokemon_shape_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_pokemonspecies"
"""
input pokemonspecies_sum_order_by {
  base_happiness: order_by
  capture_rate: order_by
  evolution_chain_id: order_by
  evolves_from_species_id: order_by
  gender_rate: order_by
  generation_id: order_by
  growth_rate_id: order_by
  hatch_counter: order_by
  id: order_by
  order: order_by
  pokemon_color_id: order_by
  pokemon_habitat_id: order_by
  pokemon_shape_id: order_by
}

"""aggregate var_pop on columns"""
type pokemonspecies_var_pop_fields {
  base_happiness: Float
  capture_rate: Float
  evolution_chain_id: Float
  evolves_from_species_id: Float
  gender_rate: Float
  generation_id: Float
  growth_rate_id: Float
  hatch_counter: Float
  id: Float
  order: Float
  pokemon_color_id: Float
  pokemon_habitat_id: Float
  pokemon_shape_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_pokemonspecies"
"""
input pokemonspecies_var_pop_order_by {
  base_happiness: order_by
  capture_rate: order_by
  evolution_chain_id: order_by
  evolves_from_species_id: order_by
  gender_rate: order_by
  generation_id: order_by
  growth_rate_id: order_by
  hatch_counter: order_by
  id: order_by
  order: order_by
  pokemon_color_id: order_by
  pokemon_habitat_id: order_by
  pokemon_shape_id: order_by
}

"""aggregate var_samp on columns"""
type pokemonspecies_var_samp_fields {
  base_happiness: Float
  capture_rate: Float
  evolution_chain_id: Float
  evolves_from_species_id: Float
  gender_rate: Float
  generation_id: Float
  growth_rate_id: Float
  hatch_counter: Float
  id: Float
  order: Float
  pokemon_color_id: Float
  pokemon_habitat_id: Float
  pokemon_shape_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_pokemonspecies"
"""
input pokemonspecies_var_samp_order_by {
  base_happiness: order_by
  capture_rate: order_by
  evolution_chain_id: order_by
  evolves_from_species_id: order_by
  gender_rate: order_by
  generation_id: order_by
  growth_rate_id: order_by
  hatch_counter: order_by
  id: order_by
  order: order_by
  pokemon_color_id: order_by
  pokemon_habitat_id: order_by
  pokemon_shape_id: order_by
}

"""aggregate variance on columns"""
type pokemonspecies_variance_fields {
  base_happiness: Float
  capture_rate: Float
  evolution_chain_id: Float
  evolves_from_species_id: Float
  gender_rate: Float
  generation_id: Float
  growth_rate_id: Float
  hatch_counter: Float
  id: Float
  order: Float
  pokemon_color_id: Float
  pokemon_habitat_id: Float
  pokemon_shape_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_pokemonspecies"
"""
input pokemonspecies_variance_order_by {
  base_happiness: order_by
  capture_rate: order_by
  evolution_chain_id: order_by
  evolves_from_species_id: order_by
  gender_rate: order_by
  generation_id: order_by
  growth_rate_id: order_by
  hatch_counter: order_by
  id: order_by
  order: order_by
  pokemon_color_id: order_by
  pokemon_habitat_id: order_by
  pokemon_shape_id: order_by
}

"""
columns and relationships of "pokemon_v2_pokemonspeciesdescription"
"""
type pokemonspeciesdescription {
  description: String!
  id: Int!

  """An object relationship"""
  language: language
  language_id: Int
  pokemon_species_id: Int

  """An object relationship"""
  pokemonspecy: pokemonspecies
}

"""
aggregated selection of "pokemon_v2_pokemonspeciesdescription"
"""
type pokemonspeciesdescription_aggregate {
  aggregate: pokemonspeciesdescription_aggregate_fields
  nodes: [pokemonspeciesdescription!]!
}

input pokemonspeciesdescription_aggregate_bool_exp {
  count: pokemonspeciesdescription_aggregate_bool_exp_count
}

input pokemonspeciesdescription_aggregate_bool_exp_count {
  arguments: [pokemonspeciesdescription_select_column!]
  distinct: Boolean
  filter: pokemonspeciesdescription_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_pokemonspeciesdescription"
"""
type pokemonspeciesdescription_aggregate_fields {
  avg: pokemonspeciesdescription_avg_fields
  count(columns: [pokemonspeciesdescription_select_column!], distinct: Boolean): Int!
  max: pokemonspeciesdescription_max_fields
  min: pokemonspeciesdescription_min_fields
  stddev: pokemonspeciesdescription_stddev_fields
  stddev_pop: pokemonspeciesdescription_stddev_pop_fields
  stddev_samp: pokemonspeciesdescription_stddev_samp_fields
  sum: pokemonspeciesdescription_sum_fields
  var_pop: pokemonspeciesdescription_var_pop_fields
  var_samp: pokemonspeciesdescription_var_samp_fields
  variance: pokemonspeciesdescription_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_pokemonspeciesdescription"
"""
input pokemonspeciesdescription_aggregate_order_by {
  avg: pokemonspeciesdescription_avg_order_by
  count: order_by
  max: pokemonspeciesdescription_max_order_by
  min: pokemonspeciesdescription_min_order_by
  stddev: pokemonspeciesdescription_stddev_order_by
  stddev_pop: pokemonspeciesdescription_stddev_pop_order_by
  stddev_samp: pokemonspeciesdescription_stddev_samp_order_by
  sum: pokemonspeciesdescription_sum_order_by
  var_pop: pokemonspeciesdescription_var_pop_order_by
  var_samp: pokemonspeciesdescription_var_samp_order_by
  variance: pokemonspeciesdescription_variance_order_by
}

"""aggregate avg on columns"""
type pokemonspeciesdescription_avg_fields {
  id: Float
  language_id: Float
  pokemon_species_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_pokemonspeciesdescription"
"""
input pokemonspeciesdescription_avg_order_by {
  id: order_by
  language_id: order_by
  pokemon_species_id: order_by
}

"""
Boolean expression to filter rows from the table
"pokemon_v2_pokemonspeciesdescription". All fields are combined with a logical 'AND'.
"""
input pokemonspeciesdescription_bool_exp {
  _and: [pokemonspeciesdescription_bool_exp!]
  _not: pokemonspeciesdescription_bool_exp
  _or: [pokemonspeciesdescription_bool_exp!]
  description: String_comparison_exp
  id: Int_comparison_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
  pokemon_species_id: Int_comparison_exp
  pokemonspecy: pokemonspecies_bool_exp
}

"""aggregate max on columns"""
type pokemonspeciesdescription_max_fields {
  description: String
  id: Int
  language_id: Int
  pokemon_species_id: Int
}

"""
order by max() on columns of table "pokemon_v2_pokemonspeciesdescription"
"""
input pokemonspeciesdescription_max_order_by {
  description: order_by
  id: order_by
  language_id: order_by
  pokemon_species_id: order_by
}

"""aggregate min on columns"""
type pokemonspeciesdescription_min_fields {
  description: String
  id: Int
  language_id: Int
  pokemon_species_id: Int
}

"""
order by min() on columns of table "pokemon_v2_pokemonspeciesdescription"
"""
input pokemonspeciesdescription_min_order_by {
  description: order_by
  id: order_by
  language_id: order_by
  pokemon_species_id: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_pokemonspeciesdescription".
"""
input pokemonspeciesdescription_order_by {
  description: order_by
  id: order_by
  language: language_order_by
  language_id: order_by
  pokemon_species_id: order_by
  pokemonspecy: pokemonspecies_order_by
}

"""
select columns of table "pokemon_v2_pokemonspeciesdescription"
"""
enum pokemonspeciesdescription_select_column {
  """column name"""
  description

  """column name"""
  id

  """column name"""
  language_id

  """column name"""
  pokemon_species_id
}

"""aggregate stddev on columns"""
type pokemonspeciesdescription_stddev_fields {
  id: Float
  language_id: Float
  pokemon_species_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_pokemonspeciesdescription"
"""
input pokemonspeciesdescription_stddev_order_by {
  id: order_by
  language_id: order_by
  pokemon_species_id: order_by
}

"""aggregate stddev_pop on columns"""
type pokemonspeciesdescription_stddev_pop_fields {
  id: Float
  language_id: Float
  pokemon_species_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_pokemonspeciesdescription"
"""
input pokemonspeciesdescription_stddev_pop_order_by {
  id: order_by
  language_id: order_by
  pokemon_species_id: order_by
}

"""aggregate stddev_samp on columns"""
type pokemonspeciesdescription_stddev_samp_fields {
  id: Float
  language_id: Float
  pokemon_species_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_pokemonspeciesdescription"
"""
input pokemonspeciesdescription_stddev_samp_order_by {
  id: order_by
  language_id: order_by
  pokemon_species_id: order_by
}

"""aggregate sum on columns"""
type pokemonspeciesdescription_sum_fields {
  id: Int
  language_id: Int
  pokemon_species_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_pokemonspeciesdescription"
"""
input pokemonspeciesdescription_sum_order_by {
  id: order_by
  language_id: order_by
  pokemon_species_id: order_by
}

"""aggregate var_pop on columns"""
type pokemonspeciesdescription_var_pop_fields {
  id: Float
  language_id: Float
  pokemon_species_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_pokemonspeciesdescription"
"""
input pokemonspeciesdescription_var_pop_order_by {
  id: order_by
  language_id: order_by
  pokemon_species_id: order_by
}

"""aggregate var_samp on columns"""
type pokemonspeciesdescription_var_samp_fields {
  id: Float
  language_id: Float
  pokemon_species_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_pokemonspeciesdescription"
"""
input pokemonspeciesdescription_var_samp_order_by {
  id: order_by
  language_id: order_by
  pokemon_species_id: order_by
}

"""aggregate variance on columns"""
type pokemonspeciesdescription_variance_fields {
  id: Float
  language_id: Float
  pokemon_species_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_pokemonspeciesdescription"
"""
input pokemonspeciesdescription_variance_order_by {
  id: order_by
  language_id: order_by
  pokemon_species_id: order_by
}

"""
columns and relationships of "pokemon_v2_pokemonspeciesflavortext"
"""
type pokemonspeciesflavortext {
  flavor_text: String!
  id: Int!

  """An object relationship"""
  language: language
  language_id: Int
  pokemon_species_id: Int

  """An object relationship"""
  pokemonspecy: pokemonspecies

  """An object relationship"""
  version: version
  version_id: Int
}

"""
aggregated selection of "pokemon_v2_pokemonspeciesflavortext"
"""
type pokemonspeciesflavortext_aggregate {
  aggregate: pokemonspeciesflavortext_aggregate_fields
  nodes: [pokemonspeciesflavortext!]!
}

input pokemonspeciesflavortext_aggregate_bool_exp {
  count: pokemonspeciesflavortext_aggregate_bool_exp_count
}

input pokemonspeciesflavortext_aggregate_bool_exp_count {
  arguments: [pokemonspeciesflavortext_select_column!]
  distinct: Boolean
  filter: pokemonspeciesflavortext_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_pokemonspeciesflavortext"
"""
type pokemonspeciesflavortext_aggregate_fields {
  avg: pokemonspeciesflavortext_avg_fields
  count(columns: [pokemonspeciesflavortext_select_column!], distinct: Boolean): Int!
  max: pokemonspeciesflavortext_max_fields
  min: pokemonspeciesflavortext_min_fields
  stddev: pokemonspeciesflavortext_stddev_fields
  stddev_pop: pokemonspeciesflavortext_stddev_pop_fields
  stddev_samp: pokemonspeciesflavortext_stddev_samp_fields
  sum: pokemonspeciesflavortext_sum_fields
  var_pop: pokemonspeciesflavortext_var_pop_fields
  var_samp: pokemonspeciesflavortext_var_samp_fields
  variance: pokemonspeciesflavortext_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_pokemonspeciesflavortext"
"""
input pokemonspeciesflavortext_aggregate_order_by {
  avg: pokemonspeciesflavortext_avg_order_by
  count: order_by
  max: pokemonspeciesflavortext_max_order_by
  min: pokemonspeciesflavortext_min_order_by
  stddev: pokemonspeciesflavortext_stddev_order_by
  stddev_pop: pokemonspeciesflavortext_stddev_pop_order_by
  stddev_samp: pokemonspeciesflavortext_stddev_samp_order_by
  sum: pokemonspeciesflavortext_sum_order_by
  var_pop: pokemonspeciesflavortext_var_pop_order_by
  var_samp: pokemonspeciesflavortext_var_samp_order_by
  variance: pokemonspeciesflavortext_variance_order_by
}

"""aggregate avg on columns"""
type pokemonspeciesflavortext_avg_fields {
  id: Float
  language_id: Float
  pokemon_species_id: Float
  version_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_pokemonspeciesflavortext"
"""
input pokemonspeciesflavortext_avg_order_by {
  id: order_by
  language_id: order_by
  pokemon_species_id: order_by
  version_id: order_by
}

"""
Boolean expression to filter rows from the table
"pokemon_v2_pokemonspeciesflavortext". All fields are combined with a logical 'AND'.
"""
input pokemonspeciesflavortext_bool_exp {
  _and: [pokemonspeciesflavortext_bool_exp!]
  _not: pokemonspeciesflavortext_bool_exp
  _or: [pokemonspeciesflavortext_bool_exp!]
  flavor_text: String_comparison_exp
  id: Int_comparison_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
  pokemon_species_id: Int_comparison_exp
  pokemonspecy: pokemonspecies_bool_exp
  version: version_bool_exp
  version_id: Int_comparison_exp
}

"""aggregate max on columns"""
type pokemonspeciesflavortext_max_fields {
  flavor_text: String
  id: Int
  language_id: Int
  pokemon_species_id: Int
  version_id: Int
}

"""
order by max() on columns of table "pokemon_v2_pokemonspeciesflavortext"
"""
input pokemonspeciesflavortext_max_order_by {
  flavor_text: order_by
  id: order_by
  language_id: order_by
  pokemon_species_id: order_by
  version_id: order_by
}

"""aggregate min on columns"""
type pokemonspeciesflavortext_min_fields {
  flavor_text: String
  id: Int
  language_id: Int
  pokemon_species_id: Int
  version_id: Int
}

"""
order by min() on columns of table "pokemon_v2_pokemonspeciesflavortext"
"""
input pokemonspeciesflavortext_min_order_by {
  flavor_text: order_by
  id: order_by
  language_id: order_by
  pokemon_species_id: order_by
  version_id: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_pokemonspeciesflavortext".
"""
input pokemonspeciesflavortext_order_by {
  flavor_text: order_by
  id: order_by
  language: language_order_by
  language_id: order_by
  pokemon_species_id: order_by
  pokemonspecy: pokemonspecies_order_by
  version: version_order_by
  version_id: order_by
}

"""
select columns of table "pokemon_v2_pokemonspeciesflavortext"
"""
enum pokemonspeciesflavortext_select_column {
  """column name"""
  flavor_text

  """column name"""
  id

  """column name"""
  language_id

  """column name"""
  pokemon_species_id

  """column name"""
  version_id
}

"""aggregate stddev on columns"""
type pokemonspeciesflavortext_stddev_fields {
  id: Float
  language_id: Float
  pokemon_species_id: Float
  version_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_pokemonspeciesflavortext"
"""
input pokemonspeciesflavortext_stddev_order_by {
  id: order_by
  language_id: order_by
  pokemon_species_id: order_by
  version_id: order_by
}

"""aggregate stddev_pop on columns"""
type pokemonspeciesflavortext_stddev_pop_fields {
  id: Float
  language_id: Float
  pokemon_species_id: Float
  version_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_pokemonspeciesflavortext"
"""
input pokemonspeciesflavortext_stddev_pop_order_by {
  id: order_by
  language_id: order_by
  pokemon_species_id: order_by
  version_id: order_by
}

"""aggregate stddev_samp on columns"""
type pokemonspeciesflavortext_stddev_samp_fields {
  id: Float
  language_id: Float
  pokemon_species_id: Float
  version_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_pokemonspeciesflavortext"
"""
input pokemonspeciesflavortext_stddev_samp_order_by {
  id: order_by
  language_id: order_by
  pokemon_species_id: order_by
  version_id: order_by
}

"""aggregate sum on columns"""
type pokemonspeciesflavortext_sum_fields {
  id: Int
  language_id: Int
  pokemon_species_id: Int
  version_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_pokemonspeciesflavortext"
"""
input pokemonspeciesflavortext_sum_order_by {
  id: order_by
  language_id: order_by
  pokemon_species_id: order_by
  version_id: order_by
}

"""aggregate var_pop on columns"""
type pokemonspeciesflavortext_var_pop_fields {
  id: Float
  language_id: Float
  pokemon_species_id: Float
  version_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_pokemonspeciesflavortext"
"""
input pokemonspeciesflavortext_var_pop_order_by {
  id: order_by
  language_id: order_by
  pokemon_species_id: order_by
  version_id: order_by
}

"""aggregate var_samp on columns"""
type pokemonspeciesflavortext_var_samp_fields {
  id: Float
  language_id: Float
  pokemon_species_id: Float
  version_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_pokemonspeciesflavortext"
"""
input pokemonspeciesflavortext_var_samp_order_by {
  id: order_by
  language_id: order_by
  pokemon_species_id: order_by
  version_id: order_by
}

"""aggregate variance on columns"""
type pokemonspeciesflavortext_variance_fields {
  id: Float
  language_id: Float
  pokemon_species_id: Float
  version_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_pokemonspeciesflavortext"
"""
input pokemonspeciesflavortext_variance_order_by {
  id: order_by
  language_id: order_by
  pokemon_species_id: order_by
  version_id: order_by
}

"""
columns and relationships of "pokemon_v2_pokemonspeciesname"
"""
type pokemonspeciesname {
  genus: String!
  id: Int!

  """An object relationship"""
  language: language
  language_id: Int
  name: String!
  pokemon_species_id: Int

  """An object relationship"""
  pokemonspecy: pokemonspecies
}

"""
aggregated selection of "pokemon_v2_pokemonspeciesname"
"""
type pokemonspeciesname_aggregate {
  aggregate: pokemonspeciesname_aggregate_fields
  nodes: [pokemonspeciesname!]!
}

input pokemonspeciesname_aggregate_bool_exp {
  count: pokemonspeciesname_aggregate_bool_exp_count
}

input pokemonspeciesname_aggregate_bool_exp_count {
  arguments: [pokemonspeciesname_select_column!]
  distinct: Boolean
  filter: pokemonspeciesname_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_pokemonspeciesname"
"""
type pokemonspeciesname_aggregate_fields {
  avg: pokemonspeciesname_avg_fields
  count(columns: [pokemonspeciesname_select_column!], distinct: Boolean): Int!
  max: pokemonspeciesname_max_fields
  min: pokemonspeciesname_min_fields
  stddev: pokemonspeciesname_stddev_fields
  stddev_pop: pokemonspeciesname_stddev_pop_fields
  stddev_samp: pokemonspeciesname_stddev_samp_fields
  sum: pokemonspeciesname_sum_fields
  var_pop: pokemonspeciesname_var_pop_fields
  var_samp: pokemonspeciesname_var_samp_fields
  variance: pokemonspeciesname_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_pokemonspeciesname"
"""
input pokemonspeciesname_aggregate_order_by {
  avg: pokemonspeciesname_avg_order_by
  count: order_by
  max: pokemonspeciesname_max_order_by
  min: pokemonspeciesname_min_order_by
  stddev: pokemonspeciesname_stddev_order_by
  stddev_pop: pokemonspeciesname_stddev_pop_order_by
  stddev_samp: pokemonspeciesname_stddev_samp_order_by
  sum: pokemonspeciesname_sum_order_by
  var_pop: pokemonspeciesname_var_pop_order_by
  var_samp: pokemonspeciesname_var_samp_order_by
  variance: pokemonspeciesname_variance_order_by
}

"""aggregate avg on columns"""
type pokemonspeciesname_avg_fields {
  id: Float
  language_id: Float
  pokemon_species_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_pokemonspeciesname"
"""
input pokemonspeciesname_avg_order_by {
  id: order_by
  language_id: order_by
  pokemon_species_id: order_by
}

"""
Boolean expression to filter rows from the table
"pokemon_v2_pokemonspeciesname". All fields are combined with a logical 'AND'.
"""
input pokemonspeciesname_bool_exp {
  _and: [pokemonspeciesname_bool_exp!]
  _not: pokemonspeciesname_bool_exp
  _or: [pokemonspeciesname_bool_exp!]
  genus: String_comparison_exp
  id: Int_comparison_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
  name: String_comparison_exp
  pokemon_species_id: Int_comparison_exp
  pokemonspecy: pokemonspecies_bool_exp
}

"""aggregate max on columns"""
type pokemonspeciesname_max_fields {
  genus: String
  id: Int
  language_id: Int
  name: String
  pokemon_species_id: Int
}

"""
order by max() on columns of table "pokemon_v2_pokemonspeciesname"
"""
input pokemonspeciesname_max_order_by {
  genus: order_by
  id: order_by
  language_id: order_by
  name: order_by
  pokemon_species_id: order_by
}

"""aggregate min on columns"""
type pokemonspeciesname_min_fields {
  genus: String
  id: Int
  language_id: Int
  name: String
  pokemon_species_id: Int
}

"""
order by min() on columns of table "pokemon_v2_pokemonspeciesname"
"""
input pokemonspeciesname_min_order_by {
  genus: order_by
  id: order_by
  language_id: order_by
  name: order_by
  pokemon_species_id: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_pokemonspeciesname".
"""
input pokemonspeciesname_order_by {
  genus: order_by
  id: order_by
  language: language_order_by
  language_id: order_by
  name: order_by
  pokemon_species_id: order_by
  pokemonspecy: pokemonspecies_order_by
}

"""
select columns of table "pokemon_v2_pokemonspeciesname"
"""
enum pokemonspeciesname_select_column {
  """column name"""
  genus

  """column name"""
  id

  """column name"""
  language_id

  """column name"""
  name

  """column name"""
  pokemon_species_id
}

"""aggregate stddev on columns"""
type pokemonspeciesname_stddev_fields {
  id: Float
  language_id: Float
  pokemon_species_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_pokemonspeciesname"
"""
input pokemonspeciesname_stddev_order_by {
  id: order_by
  language_id: order_by
  pokemon_species_id: order_by
}

"""aggregate stddev_pop on columns"""
type pokemonspeciesname_stddev_pop_fields {
  id: Float
  language_id: Float
  pokemon_species_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_pokemonspeciesname"
"""
input pokemonspeciesname_stddev_pop_order_by {
  id: order_by
  language_id: order_by
  pokemon_species_id: order_by
}

"""aggregate stddev_samp on columns"""
type pokemonspeciesname_stddev_samp_fields {
  id: Float
  language_id: Float
  pokemon_species_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_pokemonspeciesname"
"""
input pokemonspeciesname_stddev_samp_order_by {
  id: order_by
  language_id: order_by
  pokemon_species_id: order_by
}

"""aggregate sum on columns"""
type pokemonspeciesname_sum_fields {
  id: Int
  language_id: Int
  pokemon_species_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_pokemonspeciesname"
"""
input pokemonspeciesname_sum_order_by {
  id: order_by
  language_id: order_by
  pokemon_species_id: order_by
}

"""aggregate var_pop on columns"""
type pokemonspeciesname_var_pop_fields {
  id: Float
  language_id: Float
  pokemon_species_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_pokemonspeciesname"
"""
input pokemonspeciesname_var_pop_order_by {
  id: order_by
  language_id: order_by
  pokemon_species_id: order_by
}

"""aggregate var_samp on columns"""
type pokemonspeciesname_var_samp_fields {
  id: Float
  language_id: Float
  pokemon_species_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_pokemonspeciesname"
"""
input pokemonspeciesname_var_samp_order_by {
  id: order_by
  language_id: order_by
  pokemon_species_id: order_by
}

"""aggregate variance on columns"""
type pokemonspeciesname_variance_fields {
  id: Float
  language_id: Float
  pokemon_species_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_pokemonspeciesname"
"""
input pokemonspeciesname_variance_order_by {
  id: order_by
  language_id: order_by
  pokemon_species_id: order_by
}

"""
columns and relationships of "pokemon_v2_pokemonsprites"
"""
type pokemonsprites {
  id: Int!

  """An object relationship"""
  pokemon: pokemon
  pokemon_id: Int
  sprites(
    """JSON select path"""
    path: String
  ): jsonb!
}

"""
aggregated selection of "pokemon_v2_pokemonsprites"
"""
type pokemonsprites_aggregate {
  aggregate: pokemonsprites_aggregate_fields
  nodes: [pokemonsprites!]!
}

input pokemonsprites_aggregate_bool_exp {
  count: pokemonsprites_aggregate_bool_exp_count
}

input pokemonsprites_aggregate_bool_exp_count {
  arguments: [pokemonsprites_select_column!]
  distinct: Boolean
  filter: pokemonsprites_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_pokemonsprites"
"""
type pokemonsprites_aggregate_fields {
  avg: pokemonsprites_avg_fields
  count(columns: [pokemonsprites_select_column!], distinct: Boolean): Int!
  max: pokemonsprites_max_fields
  min: pokemonsprites_min_fields
  stddev: pokemonsprites_stddev_fields
  stddev_pop: pokemonsprites_stddev_pop_fields
  stddev_samp: pokemonsprites_stddev_samp_fields
  sum: pokemonsprites_sum_fields
  var_pop: pokemonsprites_var_pop_fields
  var_samp: pokemonsprites_var_samp_fields
  variance: pokemonsprites_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_pokemonsprites"
"""
input pokemonsprites_aggregate_order_by {
  avg: pokemonsprites_avg_order_by
  count: order_by
  max: pokemonsprites_max_order_by
  min: pokemonsprites_min_order_by
  stddev: pokemonsprites_stddev_order_by
  stddev_pop: pokemonsprites_stddev_pop_order_by
  stddev_samp: pokemonsprites_stddev_samp_order_by
  sum: pokemonsprites_sum_order_by
  var_pop: pokemonsprites_var_pop_order_by
  var_samp: pokemonsprites_var_samp_order_by
  variance: pokemonsprites_variance_order_by
}

"""aggregate avg on columns"""
type pokemonsprites_avg_fields {
  id: Float
  pokemon_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_pokemonsprites"
"""
input pokemonsprites_avg_order_by {
  id: order_by
  pokemon_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_pokemonsprites". All fields are combined with a logical 'AND'.
"""
input pokemonsprites_bool_exp {
  _and: [pokemonsprites_bool_exp!]
  _not: pokemonsprites_bool_exp
  _or: [pokemonsprites_bool_exp!]
  id: Int_comparison_exp
  pokemon: pokemon_bool_exp
  pokemon_id: Int_comparison_exp
  sprites: jsonb_comparison_exp
}

"""aggregate max on columns"""
type pokemonsprites_max_fields {
  id: Int
  pokemon_id: Int
}

"""
order by max() on columns of table "pokemon_v2_pokemonsprites"
"""
input pokemonsprites_max_order_by {
  id: order_by
  pokemon_id: order_by
}

"""aggregate min on columns"""
type pokemonsprites_min_fields {
  id: Int
  pokemon_id: Int
}

"""
order by min() on columns of table "pokemon_v2_pokemonsprites"
"""
input pokemonsprites_min_order_by {
  id: order_by
  pokemon_id: order_by
}

"""Ordering options when selecting data from "pokemon_v2_pokemonsprites"."""
input pokemonsprites_order_by {
  id: order_by
  pokemon: pokemon_order_by
  pokemon_id: order_by
  sprites: order_by
}

"""
select columns of table "pokemon_v2_pokemonsprites"
"""
enum pokemonsprites_select_column {
  """column name"""
  id

  """column name"""
  pokemon_id

  """column name"""
  sprites
}

"""aggregate stddev on columns"""
type pokemonsprites_stddev_fields {
  id: Float
  pokemon_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_pokemonsprites"
"""
input pokemonsprites_stddev_order_by {
  id: order_by
  pokemon_id: order_by
}

"""aggregate stddev_pop on columns"""
type pokemonsprites_stddev_pop_fields {
  id: Float
  pokemon_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_pokemonsprites"
"""
input pokemonsprites_stddev_pop_order_by {
  id: order_by
  pokemon_id: order_by
}

"""aggregate stddev_samp on columns"""
type pokemonsprites_stddev_samp_fields {
  id: Float
  pokemon_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_pokemonsprites"
"""
input pokemonsprites_stddev_samp_order_by {
  id: order_by
  pokemon_id: order_by
}

"""aggregate sum on columns"""
type pokemonsprites_sum_fields {
  id: Int
  pokemon_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_pokemonsprites"
"""
input pokemonsprites_sum_order_by {
  id: order_by
  pokemon_id: order_by
}

"""aggregate var_pop on columns"""
type pokemonsprites_var_pop_fields {
  id: Float
  pokemon_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_pokemonsprites"
"""
input pokemonsprites_var_pop_order_by {
  id: order_by
  pokemon_id: order_by
}

"""aggregate var_samp on columns"""
type pokemonsprites_var_samp_fields {
  id: Float
  pokemon_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_pokemonsprites"
"""
input pokemonsprites_var_samp_order_by {
  id: order_by
  pokemon_id: order_by
}

"""aggregate variance on columns"""
type pokemonsprites_variance_fields {
  id: Float
  pokemon_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_pokemonsprites"
"""
input pokemonsprites_variance_order_by {
  id: order_by
  pokemon_id: order_by
}

"""
columns and relationships of "pokemon_v2_pokemonstat"
"""
type pokemonstat {
  base_stat: Int!
  effort: Int!
  id: Int!

  """An object relationship"""
  pokemon: pokemon
  pokemon_id: Int

  """An object relationship"""
  stat: stat
  stat_id: Int
}

"""
aggregated selection of "pokemon_v2_pokemonstat"
"""
type pokemonstat_aggregate {
  aggregate: pokemonstat_aggregate_fields
  nodes: [pokemonstat!]!
}

input pokemonstat_aggregate_bool_exp {
  count: pokemonstat_aggregate_bool_exp_count
}

input pokemonstat_aggregate_bool_exp_count {
  arguments: [pokemonstat_select_column!]
  distinct: Boolean
  filter: pokemonstat_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_pokemonstat"
"""
type pokemonstat_aggregate_fields {
  avg: pokemonstat_avg_fields
  count(columns: [pokemonstat_select_column!], distinct: Boolean): Int!
  max: pokemonstat_max_fields
  min: pokemonstat_min_fields
  stddev: pokemonstat_stddev_fields
  stddev_pop: pokemonstat_stddev_pop_fields
  stddev_samp: pokemonstat_stddev_samp_fields
  sum: pokemonstat_sum_fields
  var_pop: pokemonstat_var_pop_fields
  var_samp: pokemonstat_var_samp_fields
  variance: pokemonstat_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_pokemonstat"
"""
input pokemonstat_aggregate_order_by {
  avg: pokemonstat_avg_order_by
  count: order_by
  max: pokemonstat_max_order_by
  min: pokemonstat_min_order_by
  stddev: pokemonstat_stddev_order_by
  stddev_pop: pokemonstat_stddev_pop_order_by
  stddev_samp: pokemonstat_stddev_samp_order_by
  sum: pokemonstat_sum_order_by
  var_pop: pokemonstat_var_pop_order_by
  var_samp: pokemonstat_var_samp_order_by
  variance: pokemonstat_variance_order_by
}

"""aggregate avg on columns"""
type pokemonstat_avg_fields {
  base_stat: Float
  effort: Float
  id: Float
  pokemon_id: Float
  stat_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_pokemonstat"
"""
input pokemonstat_avg_order_by {
  base_stat: order_by
  effort: order_by
  id: order_by
  pokemon_id: order_by
  stat_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_pokemonstat". All fields are combined with a logical 'AND'.
"""
input pokemonstat_bool_exp {
  _and: [pokemonstat_bool_exp!]
  _not: pokemonstat_bool_exp
  _or: [pokemonstat_bool_exp!]
  base_stat: Int_comparison_exp
  effort: Int_comparison_exp
  id: Int_comparison_exp
  pokemon: pokemon_bool_exp
  pokemon_id: Int_comparison_exp
  stat: stat_bool_exp
  stat_id: Int_comparison_exp
}

"""aggregate max on columns"""
type pokemonstat_max_fields {
  base_stat: Int
  effort: Int
  id: Int
  pokemon_id: Int
  stat_id: Int
}

"""
order by max() on columns of table "pokemon_v2_pokemonstat"
"""
input pokemonstat_max_order_by {
  base_stat: order_by
  effort: order_by
  id: order_by
  pokemon_id: order_by
  stat_id: order_by
}

"""aggregate min on columns"""
type pokemonstat_min_fields {
  base_stat: Int
  effort: Int
  id: Int
  pokemon_id: Int
  stat_id: Int
}

"""
order by min() on columns of table "pokemon_v2_pokemonstat"
"""
input pokemonstat_min_order_by {
  base_stat: order_by
  effort: order_by
  id: order_by
  pokemon_id: order_by
  stat_id: order_by
}

"""Ordering options when selecting data from "pokemon_v2_pokemonstat"."""
input pokemonstat_order_by {
  base_stat: order_by
  effort: order_by
  id: order_by
  pokemon: pokemon_order_by
  pokemon_id: order_by
  stat: stat_order_by
  stat_id: order_by
}

"""
select columns of table "pokemon_v2_pokemonstat"
"""
enum pokemonstat_select_column {
  """column name"""
  base_stat

  """column name"""
  effort

  """column name"""
  id

  """column name"""
  pokemon_id

  """column name"""
  stat_id
}

"""aggregate stddev on columns"""
type pokemonstat_stddev_fields {
  base_stat: Float
  effort: Float
  id: Float
  pokemon_id: Float
  stat_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_pokemonstat"
"""
input pokemonstat_stddev_order_by {
  base_stat: order_by
  effort: order_by
  id: order_by
  pokemon_id: order_by
  stat_id: order_by
}

"""aggregate stddev_pop on columns"""
type pokemonstat_stddev_pop_fields {
  base_stat: Float
  effort: Float
  id: Float
  pokemon_id: Float
  stat_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_pokemonstat"
"""
input pokemonstat_stddev_pop_order_by {
  base_stat: order_by
  effort: order_by
  id: order_by
  pokemon_id: order_by
  stat_id: order_by
}

"""aggregate stddev_samp on columns"""
type pokemonstat_stddev_samp_fields {
  base_stat: Float
  effort: Float
  id: Float
  pokemon_id: Float
  stat_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_pokemonstat"
"""
input pokemonstat_stddev_samp_order_by {
  base_stat: order_by
  effort: order_by
  id: order_by
  pokemon_id: order_by
  stat_id: order_by
}

"""aggregate sum on columns"""
type pokemonstat_sum_fields {
  base_stat: Int
  effort: Int
  id: Int
  pokemon_id: Int
  stat_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_pokemonstat"
"""
input pokemonstat_sum_order_by {
  base_stat: order_by
  effort: order_by
  id: order_by
  pokemon_id: order_by
  stat_id: order_by
}

"""aggregate var_pop on columns"""
type pokemonstat_var_pop_fields {
  base_stat: Float
  effort: Float
  id: Float
  pokemon_id: Float
  stat_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_pokemonstat"
"""
input pokemonstat_var_pop_order_by {
  base_stat: order_by
  effort: order_by
  id: order_by
  pokemon_id: order_by
  stat_id: order_by
}

"""aggregate var_samp on columns"""
type pokemonstat_var_samp_fields {
  base_stat: Float
  effort: Float
  id: Float
  pokemon_id: Float
  stat_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_pokemonstat"
"""
input pokemonstat_var_samp_order_by {
  base_stat: order_by
  effort: order_by
  id: order_by
  pokemon_id: order_by
  stat_id: order_by
}

"""aggregate variance on columns"""
type pokemonstat_variance_fields {
  base_stat: Float
  effort: Float
  id: Float
  pokemon_id: Float
  stat_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_pokemonstat"
"""
input pokemonstat_variance_order_by {
  base_stat: order_by
  effort: order_by
  id: order_by
  pokemon_id: order_by
  stat_id: order_by
}

"""
columns and relationships of "pokemon_v2_pokemontype"
"""
type pokemontype {
  id: Int!

  """An object relationship"""
  pokemon: pokemon
  pokemon_id: Int
  slot: Int!

  """An object relationship"""
  type: type
  type_id: Int
}

"""
aggregated selection of "pokemon_v2_pokemontype"
"""
type pokemontype_aggregate {
  aggregate: pokemontype_aggregate_fields
  nodes: [pokemontype!]!
}

input pokemontype_aggregate_bool_exp {
  count: pokemontype_aggregate_bool_exp_count
}

input pokemontype_aggregate_bool_exp_count {
  arguments: [pokemontype_select_column!]
  distinct: Boolean
  filter: pokemontype_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_pokemontype"
"""
type pokemontype_aggregate_fields {
  avg: pokemontype_avg_fields
  count(columns: [pokemontype_select_column!], distinct: Boolean): Int!
  max: pokemontype_max_fields
  min: pokemontype_min_fields
  stddev: pokemontype_stddev_fields
  stddev_pop: pokemontype_stddev_pop_fields
  stddev_samp: pokemontype_stddev_samp_fields
  sum: pokemontype_sum_fields
  var_pop: pokemontype_var_pop_fields
  var_samp: pokemontype_var_samp_fields
  variance: pokemontype_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_pokemontype"
"""
input pokemontype_aggregate_order_by {
  avg: pokemontype_avg_order_by
  count: order_by
  max: pokemontype_max_order_by
  min: pokemontype_min_order_by
  stddev: pokemontype_stddev_order_by
  stddev_pop: pokemontype_stddev_pop_order_by
  stddev_samp: pokemontype_stddev_samp_order_by
  sum: pokemontype_sum_order_by
  var_pop: pokemontype_var_pop_order_by
  var_samp: pokemontype_var_samp_order_by
  variance: pokemontype_variance_order_by
}

"""aggregate avg on columns"""
type pokemontype_avg_fields {
  id: Float
  pokemon_id: Float
  slot: Float
  type_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_pokemontype"
"""
input pokemontype_avg_order_by {
  id: order_by
  pokemon_id: order_by
  slot: order_by
  type_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_pokemontype". All fields are combined with a logical 'AND'.
"""
input pokemontype_bool_exp {
  _and: [pokemontype_bool_exp!]
  _not: pokemontype_bool_exp
  _or: [pokemontype_bool_exp!]
  id: Int_comparison_exp
  pokemon: pokemon_bool_exp
  pokemon_id: Int_comparison_exp
  slot: Int_comparison_exp
  type: type_bool_exp
  type_id: Int_comparison_exp
}

"""aggregate max on columns"""
type pokemontype_max_fields {
  id: Int
  pokemon_id: Int
  slot: Int
  type_id: Int
}

"""
order by max() on columns of table "pokemon_v2_pokemontype"
"""
input pokemontype_max_order_by {
  id: order_by
  pokemon_id: order_by
  slot: order_by
  type_id: order_by
}

"""aggregate min on columns"""
type pokemontype_min_fields {
  id: Int
  pokemon_id: Int
  slot: Int
  type_id: Int
}

"""
order by min() on columns of table "pokemon_v2_pokemontype"
"""
input pokemontype_min_order_by {
  id: order_by
  pokemon_id: order_by
  slot: order_by
  type_id: order_by
}

"""Ordering options when selecting data from "pokemon_v2_pokemontype"."""
input pokemontype_order_by {
  id: order_by
  pokemon: pokemon_order_by
  pokemon_id: order_by
  slot: order_by
  type: type_order_by
  type_id: order_by
}

"""
select columns of table "pokemon_v2_pokemontype"
"""
enum pokemontype_select_column {
  """column name"""
  id

  """column name"""
  pokemon_id

  """column name"""
  slot

  """column name"""
  type_id
}

"""aggregate stddev on columns"""
type pokemontype_stddev_fields {
  id: Float
  pokemon_id: Float
  slot: Float
  type_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_pokemontype"
"""
input pokemontype_stddev_order_by {
  id: order_by
  pokemon_id: order_by
  slot: order_by
  type_id: order_by
}

"""aggregate stddev_pop on columns"""
type pokemontype_stddev_pop_fields {
  id: Float
  pokemon_id: Float
  slot: Float
  type_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_pokemontype"
"""
input pokemontype_stddev_pop_order_by {
  id: order_by
  pokemon_id: order_by
  slot: order_by
  type_id: order_by
}

"""aggregate stddev_samp on columns"""
type pokemontype_stddev_samp_fields {
  id: Float
  pokemon_id: Float
  slot: Float
  type_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_pokemontype"
"""
input pokemontype_stddev_samp_order_by {
  id: order_by
  pokemon_id: order_by
  slot: order_by
  type_id: order_by
}

"""aggregate sum on columns"""
type pokemontype_sum_fields {
  id: Int
  pokemon_id: Int
  slot: Int
  type_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_pokemontype"
"""
input pokemontype_sum_order_by {
  id: order_by
  pokemon_id: order_by
  slot: order_by
  type_id: order_by
}

"""aggregate var_pop on columns"""
type pokemontype_var_pop_fields {
  id: Float
  pokemon_id: Float
  slot: Float
  type_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_pokemontype"
"""
input pokemontype_var_pop_order_by {
  id: order_by
  pokemon_id: order_by
  slot: order_by
  type_id: order_by
}

"""aggregate var_samp on columns"""
type pokemontype_var_samp_fields {
  id: Float
  pokemon_id: Float
  slot: Float
  type_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_pokemontype"
"""
input pokemontype_var_samp_order_by {
  id: order_by
  pokemon_id: order_by
  slot: order_by
  type_id: order_by
}

"""aggregate variance on columns"""
type pokemontype_variance_fields {
  id: Float
  pokemon_id: Float
  slot: Float
  type_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_pokemontype"
"""
input pokemontype_variance_order_by {
  id: order_by
  pokemon_id: order_by
  slot: order_by
  type_id: order_by
}

"""
columns and relationships of "pokemon_v2_pokemontypepast"
"""
type pokemontypepast {
  """An object relationship"""
  generation: generation
  generation_id: Int
  id: Int!

  """An object relationship"""
  pokemon: pokemon
  pokemon_id: Int
  slot: Int!

  """An object relationship"""
  type: type
  type_id: Int
}

"""
aggregated selection of "pokemon_v2_pokemontypepast"
"""
type pokemontypepast_aggregate {
  aggregate: pokemontypepast_aggregate_fields
  nodes: [pokemontypepast!]!
}

input pokemontypepast_aggregate_bool_exp {
  count: pokemontypepast_aggregate_bool_exp_count
}

input pokemontypepast_aggregate_bool_exp_count {
  arguments: [pokemontypepast_select_column!]
  distinct: Boolean
  filter: pokemontypepast_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_pokemontypepast"
"""
type pokemontypepast_aggregate_fields {
  avg: pokemontypepast_avg_fields
  count(columns: [pokemontypepast_select_column!], distinct: Boolean): Int!
  max: pokemontypepast_max_fields
  min: pokemontypepast_min_fields
  stddev: pokemontypepast_stddev_fields
  stddev_pop: pokemontypepast_stddev_pop_fields
  stddev_samp: pokemontypepast_stddev_samp_fields
  sum: pokemontypepast_sum_fields
  var_pop: pokemontypepast_var_pop_fields
  var_samp: pokemontypepast_var_samp_fields
  variance: pokemontypepast_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_pokemontypepast"
"""
input pokemontypepast_aggregate_order_by {
  avg: pokemontypepast_avg_order_by
  count: order_by
  max: pokemontypepast_max_order_by
  min: pokemontypepast_min_order_by
  stddev: pokemontypepast_stddev_order_by
  stddev_pop: pokemontypepast_stddev_pop_order_by
  stddev_samp: pokemontypepast_stddev_samp_order_by
  sum: pokemontypepast_sum_order_by
  var_pop: pokemontypepast_var_pop_order_by
  var_samp: pokemontypepast_var_samp_order_by
  variance: pokemontypepast_variance_order_by
}

"""aggregate avg on columns"""
type pokemontypepast_avg_fields {
  generation_id: Float
  id: Float
  pokemon_id: Float
  slot: Float
  type_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_pokemontypepast"
"""
input pokemontypepast_avg_order_by {
  generation_id: order_by
  id: order_by
  pokemon_id: order_by
  slot: order_by
  type_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_pokemontypepast". All fields are combined with a logical 'AND'.
"""
input pokemontypepast_bool_exp {
  _and: [pokemontypepast_bool_exp!]
  _not: pokemontypepast_bool_exp
  _or: [pokemontypepast_bool_exp!]
  generation: generation_bool_exp
  generation_id: Int_comparison_exp
  id: Int_comparison_exp
  pokemon: pokemon_bool_exp
  pokemon_id: Int_comparison_exp
  slot: Int_comparison_exp
  type: type_bool_exp
  type_id: Int_comparison_exp
}

"""aggregate max on columns"""
type pokemontypepast_max_fields {
  generation_id: Int
  id: Int
  pokemon_id: Int
  slot: Int
  type_id: Int
}

"""
order by max() on columns of table "pokemon_v2_pokemontypepast"
"""
input pokemontypepast_max_order_by {
  generation_id: order_by
  id: order_by
  pokemon_id: order_by
  slot: order_by
  type_id: order_by
}

"""aggregate min on columns"""
type pokemontypepast_min_fields {
  generation_id: Int
  id: Int
  pokemon_id: Int
  slot: Int
  type_id: Int
}

"""
order by min() on columns of table "pokemon_v2_pokemontypepast"
"""
input pokemontypepast_min_order_by {
  generation_id: order_by
  id: order_by
  pokemon_id: order_by
  slot: order_by
  type_id: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_pokemontypepast".
"""
input pokemontypepast_order_by {
  generation: generation_order_by
  generation_id: order_by
  id: order_by
  pokemon: pokemon_order_by
  pokemon_id: order_by
  slot: order_by
  type: type_order_by
  type_id: order_by
}

"""
select columns of table "pokemon_v2_pokemontypepast"
"""
enum pokemontypepast_select_column {
  """column name"""
  generation_id

  """column name"""
  id

  """column name"""
  pokemon_id

  """column name"""
  slot

  """column name"""
  type_id
}

"""aggregate stddev on columns"""
type pokemontypepast_stddev_fields {
  generation_id: Float
  id: Float
  pokemon_id: Float
  slot: Float
  type_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_pokemontypepast"
"""
input pokemontypepast_stddev_order_by {
  generation_id: order_by
  id: order_by
  pokemon_id: order_by
  slot: order_by
  type_id: order_by
}

"""aggregate stddev_pop on columns"""
type pokemontypepast_stddev_pop_fields {
  generation_id: Float
  id: Float
  pokemon_id: Float
  slot: Float
  type_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_pokemontypepast"
"""
input pokemontypepast_stddev_pop_order_by {
  generation_id: order_by
  id: order_by
  pokemon_id: order_by
  slot: order_by
  type_id: order_by
}

"""aggregate stddev_samp on columns"""
type pokemontypepast_stddev_samp_fields {
  generation_id: Float
  id: Float
  pokemon_id: Float
  slot: Float
  type_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_pokemontypepast"
"""
input pokemontypepast_stddev_samp_order_by {
  generation_id: order_by
  id: order_by
  pokemon_id: order_by
  slot: order_by
  type_id: order_by
}

"""aggregate sum on columns"""
type pokemontypepast_sum_fields {
  generation_id: Int
  id: Int
  pokemon_id: Int
  slot: Int
  type_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_pokemontypepast"
"""
input pokemontypepast_sum_order_by {
  generation_id: order_by
  id: order_by
  pokemon_id: order_by
  slot: order_by
  type_id: order_by
}

"""aggregate var_pop on columns"""
type pokemontypepast_var_pop_fields {
  generation_id: Float
  id: Float
  pokemon_id: Float
  slot: Float
  type_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_pokemontypepast"
"""
input pokemontypepast_var_pop_order_by {
  generation_id: order_by
  id: order_by
  pokemon_id: order_by
  slot: order_by
  type_id: order_by
}

"""aggregate var_samp on columns"""
type pokemontypepast_var_samp_fields {
  generation_id: Float
  id: Float
  pokemon_id: Float
  slot: Float
  type_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_pokemontypepast"
"""
input pokemontypepast_var_samp_order_by {
  generation_id: order_by
  id: order_by
  pokemon_id: order_by
  slot: order_by
  type_id: order_by
}

"""aggregate variance on columns"""
type pokemontypepast_variance_fields {
  generation_id: Float
  id: Float
  pokemon_id: Float
  slot: Float
  type_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_pokemontypepast"
"""
input pokemontypepast_variance_order_by {
  generation_id: order_by
  id: order_by
  pokemon_id: order_by
  slot: order_by
  type_id: order_by
}

type query_root {
  """
  fetch data from the table: "pokemon_v2_ability"
  """
  ability(
    """distinct select on columns"""
    distinct_on: [ability_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ability_order_by!]

    """filter the rows returned"""
    where: ability_bool_exp
  ): [ability!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_ability"
  """
  ability_aggregate(
    """distinct select on columns"""
    distinct_on: [ability_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [ability_order_by!]

    """filter the rows returned"""
    where: ability_bool_exp
  ): ability_aggregate!

  """
  fetch data from the table: "pokemon_v2_abilitychange"
  """
  abilitychange(
    """distinct select on columns"""
    distinct_on: [abilitychange_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [abilitychange_order_by!]

    """filter the rows returned"""
    where: abilitychange_bool_exp
  ): [abilitychange!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_abilitychange"
  """
  abilitychange_aggregate(
    """distinct select on columns"""
    distinct_on: [abilitychange_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [abilitychange_order_by!]

    """filter the rows returned"""
    where: abilitychange_bool_exp
  ): abilitychange_aggregate!

  """
  fetch data from the table: "pokemon_v2_abilitychangeeffecttext"
  """
  abilitychangeeffecttext(
    """distinct select on columns"""
    distinct_on: [abilitychangeeffecttext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [abilitychangeeffecttext_order_by!]

    """filter the rows returned"""
    where: abilitychangeeffecttext_bool_exp
  ): [abilitychangeeffecttext!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_abilitychangeeffecttext"
  """
  abilitychangeeffecttext_aggregate(
    """distinct select on columns"""
    distinct_on: [abilitychangeeffecttext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [abilitychangeeffecttext_order_by!]

    """filter the rows returned"""
    where: abilitychangeeffecttext_bool_exp
  ): abilitychangeeffecttext_aggregate!

  """
  fetch data from the table: "pokemon_v2_abilityeffecttext"
  """
  abilityeffecttext(
    """distinct select on columns"""
    distinct_on: [abilityeffecttext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [abilityeffecttext_order_by!]

    """filter the rows returned"""
    where: abilityeffecttext_bool_exp
  ): [abilityeffecttext!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_abilityeffecttext"
  """
  abilityeffecttext_aggregate(
    """distinct select on columns"""
    distinct_on: [abilityeffecttext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [abilityeffecttext_order_by!]

    """filter the rows returned"""
    where: abilityeffecttext_bool_exp
  ): abilityeffecttext_aggregate!

  """
  fetch data from the table: "pokemon_v2_abilityflavortext"
  """
  abilityflavortext(
    """distinct select on columns"""
    distinct_on: [abilityflavortext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [abilityflavortext_order_by!]

    """filter the rows returned"""
    where: abilityflavortext_bool_exp
  ): [abilityflavortext!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_abilityflavortext"
  """
  abilityflavortext_aggregate(
    """distinct select on columns"""
    distinct_on: [abilityflavortext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [abilityflavortext_order_by!]

    """filter the rows returned"""
    where: abilityflavortext_bool_exp
  ): abilityflavortext_aggregate!

  """
  fetch data from the table: "pokemon_v2_abilityname"
  """
  abilityname(
    """distinct select on columns"""
    distinct_on: [abilityname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [abilityname_order_by!]

    """filter the rows returned"""
    where: abilityname_bool_exp
  ): [abilityname!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_abilityname"
  """
  abilityname_aggregate(
    """distinct select on columns"""
    distinct_on: [abilityname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [abilityname_order_by!]

    """filter the rows returned"""
    where: abilityname_bool_exp
  ): abilityname_aggregate!

  """
  fetch data from the table: "pokemon_v2_berry"
  """
  berry(
    """distinct select on columns"""
    distinct_on: [berry_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [berry_order_by!]

    """filter the rows returned"""
    where: berry_bool_exp
  ): [berry!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_berry"
  """
  berry_aggregate(
    """distinct select on columns"""
    distinct_on: [berry_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [berry_order_by!]

    """filter the rows returned"""
    where: berry_bool_exp
  ): berry_aggregate!

  """
  fetch data from the table: "pokemon_v2_berryfirmness"
  """
  berryfirmness(
    """distinct select on columns"""
    distinct_on: [berryfirmness_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [berryfirmness_order_by!]

    """filter the rows returned"""
    where: berryfirmness_bool_exp
  ): [berryfirmness!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_berryfirmness"
  """
  berryfirmness_aggregate(
    """distinct select on columns"""
    distinct_on: [berryfirmness_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [berryfirmness_order_by!]

    """filter the rows returned"""
    where: berryfirmness_bool_exp
  ): berryfirmness_aggregate!

  """
  fetch data from the table: "pokemon_v2_berryfirmnessname"
  """
  berryfirmnessname(
    """distinct select on columns"""
    distinct_on: [berryfirmnessname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [berryfirmnessname_order_by!]

    """filter the rows returned"""
    where: berryfirmnessname_bool_exp
  ): [berryfirmnessname!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_berryfirmnessname"
  """
  berryfirmnessname_aggregate(
    """distinct select on columns"""
    distinct_on: [berryfirmnessname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [berryfirmnessname_order_by!]

    """filter the rows returned"""
    where: berryfirmnessname_bool_exp
  ): berryfirmnessname_aggregate!

  """
  fetch data from the table: "pokemon_v2_berryflavor"
  """
  berryflavor(
    """distinct select on columns"""
    distinct_on: [berryflavor_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [berryflavor_order_by!]

    """filter the rows returned"""
    where: berryflavor_bool_exp
  ): [berryflavor!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_berryflavor"
  """
  berryflavor_aggregate(
    """distinct select on columns"""
    distinct_on: [berryflavor_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [berryflavor_order_by!]

    """filter the rows returned"""
    where: berryflavor_bool_exp
  ): berryflavor_aggregate!

  """
  fetch data from the table: "pokemon_v2_berryflavormap"
  """
  berryflavormap(
    """distinct select on columns"""
    distinct_on: [berryflavormap_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [berryflavormap_order_by!]

    """filter the rows returned"""
    where: berryflavormap_bool_exp
  ): [berryflavormap!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_berryflavormap"
  """
  berryflavormap_aggregate(
    """distinct select on columns"""
    distinct_on: [berryflavormap_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [berryflavormap_order_by!]

    """filter the rows returned"""
    where: berryflavormap_bool_exp
  ): berryflavormap_aggregate!

  """
  fetch data from the table: "pokemon_v2_berryflavorname"
  """
  berryflavorname(
    """distinct select on columns"""
    distinct_on: [berryflavorname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [berryflavorname_order_by!]

    """filter the rows returned"""
    where: berryflavorname_bool_exp
  ): [berryflavorname!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_berryflavorname"
  """
  berryflavorname_aggregate(
    """distinct select on columns"""
    distinct_on: [berryflavorname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [berryflavorname_order_by!]

    """filter the rows returned"""
    where: berryflavorname_bool_exp
  ): berryflavorname_aggregate!

  """
  fetch data from the table: "pokemon_v2_characteristic"
  """
  characteristic(
    """distinct select on columns"""
    distinct_on: [characteristic_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [characteristic_order_by!]

    """filter the rows returned"""
    where: characteristic_bool_exp
  ): [characteristic!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_characteristic"
  """
  characteristic_aggregate(
    """distinct select on columns"""
    distinct_on: [characteristic_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [characteristic_order_by!]

    """filter the rows returned"""
    where: characteristic_bool_exp
  ): characteristic_aggregate!

  """
  fetch data from the table: "pokemon_v2_characteristicdescription"
  """
  characteristicdescription(
    """distinct select on columns"""
    distinct_on: [characteristicdescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [characteristicdescription_order_by!]

    """filter the rows returned"""
    where: characteristicdescription_bool_exp
  ): [characteristicdescription!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_characteristicdescription"
  """
  characteristicdescription_aggregate(
    """distinct select on columns"""
    distinct_on: [characteristicdescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [characteristicdescription_order_by!]

    """filter the rows returned"""
    where: characteristicdescription_bool_exp
  ): characteristicdescription_aggregate!

  """
  fetch data from the table: "pokemon_v2_contestcombo"
  """
  contestcombo(
    """distinct select on columns"""
    distinct_on: [contestcombo_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [contestcombo_order_by!]

    """filter the rows returned"""
    where: contestcombo_bool_exp
  ): [contestcombo!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_contestcombo"
  """
  contestcombo_aggregate(
    """distinct select on columns"""
    distinct_on: [contestcombo_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [contestcombo_order_by!]

    """filter the rows returned"""
    where: contestcombo_bool_exp
  ): contestcombo_aggregate!

  """
  fetch data from the table: "pokemon_v2_contesteffect"
  """
  contesteffect(
    """distinct select on columns"""
    distinct_on: [contesteffect_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [contesteffect_order_by!]

    """filter the rows returned"""
    where: contesteffect_bool_exp
  ): [contesteffect!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_contesteffect"
  """
  contesteffect_aggregate(
    """distinct select on columns"""
    distinct_on: [contesteffect_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [contesteffect_order_by!]

    """filter the rows returned"""
    where: contesteffect_bool_exp
  ): contesteffect_aggregate!

  """
  fetch data from the table: "pokemon_v2_contesteffecteffecttext"
  """
  contesteffecteffecttext(
    """distinct select on columns"""
    distinct_on: [contesteffecteffecttext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [contesteffecteffecttext_order_by!]

    """filter the rows returned"""
    where: contesteffecteffecttext_bool_exp
  ): [contesteffecteffecttext!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_contesteffecteffecttext"
  """
  contesteffecteffecttext_aggregate(
    """distinct select on columns"""
    distinct_on: [contesteffecteffecttext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [contesteffecteffecttext_order_by!]

    """filter the rows returned"""
    where: contesteffecteffecttext_bool_exp
  ): contesteffecteffecttext_aggregate!

  """
  fetch data from the table: "pokemon_v2_contesteffectflavortext"
  """
  contesteffectflavortext(
    """distinct select on columns"""
    distinct_on: [contesteffectflavortext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [contesteffectflavortext_order_by!]

    """filter the rows returned"""
    where: contesteffectflavortext_bool_exp
  ): [contesteffectflavortext!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_contesteffectflavortext"
  """
  contesteffectflavortext_aggregate(
    """distinct select on columns"""
    distinct_on: [contesteffectflavortext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [contesteffectflavortext_order_by!]

    """filter the rows returned"""
    where: contesteffectflavortext_bool_exp
  ): contesteffectflavortext_aggregate!

  """
  fetch data from the table: "pokemon_v2_contesttype"
  """
  contesttype(
    """distinct select on columns"""
    distinct_on: [contesttype_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [contesttype_order_by!]

    """filter the rows returned"""
    where: contesttype_bool_exp
  ): [contesttype!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_contesttype"
  """
  contesttype_aggregate(
    """distinct select on columns"""
    distinct_on: [contesttype_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [contesttype_order_by!]

    """filter the rows returned"""
    where: contesttype_bool_exp
  ): contesttype_aggregate!

  """
  fetch data from the table: "pokemon_v2_contesttypename"
  """
  contesttypename(
    """distinct select on columns"""
    distinct_on: [contesttypename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [contesttypename_order_by!]

    """filter the rows returned"""
    where: contesttypename_bool_exp
  ): [contesttypename!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_contesttypename"
  """
  contesttypename_aggregate(
    """distinct select on columns"""
    distinct_on: [contesttypename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [contesttypename_order_by!]

    """filter the rows returned"""
    where: contesttypename_bool_exp
  ): contesttypename_aggregate!

  """
  fetch data from the table: "pokemon_v2_egggroup"
  """
  egggroup(
    """distinct select on columns"""
    distinct_on: [egggroup_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [egggroup_order_by!]

    """filter the rows returned"""
    where: egggroup_bool_exp
  ): [egggroup!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_egggroup"
  """
  egggroup_aggregate(
    """distinct select on columns"""
    distinct_on: [egggroup_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [egggroup_order_by!]

    """filter the rows returned"""
    where: egggroup_bool_exp
  ): egggroup_aggregate!

  """
  fetch data from the table: "pokemon_v2_egggroupname"
  """
  egggroupname(
    """distinct select on columns"""
    distinct_on: [egggroupname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [egggroupname_order_by!]

    """filter the rows returned"""
    where: egggroupname_bool_exp
  ): [egggroupname!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_egggroupname"
  """
  egggroupname_aggregate(
    """distinct select on columns"""
    distinct_on: [egggroupname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [egggroupname_order_by!]

    """filter the rows returned"""
    where: egggroupname_bool_exp
  ): egggroupname_aggregate!

  """
  fetch data from the table: "pokemon_v2_encounter"
  """
  encounter(
    """distinct select on columns"""
    distinct_on: [encounter_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [encounter_order_by!]

    """filter the rows returned"""
    where: encounter_bool_exp
  ): [encounter!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_encounter"
  """
  encounter_aggregate(
    """distinct select on columns"""
    distinct_on: [encounter_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [encounter_order_by!]

    """filter the rows returned"""
    where: encounter_bool_exp
  ): encounter_aggregate!

  """
  fetch data from the table: "pokemon_v2_encountercondition"
  """
  encountercondition(
    """distinct select on columns"""
    distinct_on: [encountercondition_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [encountercondition_order_by!]

    """filter the rows returned"""
    where: encountercondition_bool_exp
  ): [encountercondition!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_encountercondition"
  """
  encountercondition_aggregate(
    """distinct select on columns"""
    distinct_on: [encountercondition_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [encountercondition_order_by!]

    """filter the rows returned"""
    where: encountercondition_bool_exp
  ): encountercondition_aggregate!

  """
  fetch data from the table: "pokemon_v2_encounterconditionname"
  """
  encounterconditionname(
    """distinct select on columns"""
    distinct_on: [encounterconditionname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [encounterconditionname_order_by!]

    """filter the rows returned"""
    where: encounterconditionname_bool_exp
  ): [encounterconditionname!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_encounterconditionname"
  """
  encounterconditionname_aggregate(
    """distinct select on columns"""
    distinct_on: [encounterconditionname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [encounterconditionname_order_by!]

    """filter the rows returned"""
    where: encounterconditionname_bool_exp
  ): encounterconditionname_aggregate!

  """
  fetch data from the table: "pokemon_v2_encounterconditionvalue"
  """
  encounterconditionvalue(
    """distinct select on columns"""
    distinct_on: [encounterconditionvalue_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [encounterconditionvalue_order_by!]

    """filter the rows returned"""
    where: encounterconditionvalue_bool_exp
  ): [encounterconditionvalue!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_encounterconditionvalue"
  """
  encounterconditionvalue_aggregate(
    """distinct select on columns"""
    distinct_on: [encounterconditionvalue_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [encounterconditionvalue_order_by!]

    """filter the rows returned"""
    where: encounterconditionvalue_bool_exp
  ): encounterconditionvalue_aggregate!

  """
  fetch data from the table: "pokemon_v2_encounterconditionvaluemap"
  """
  encounterconditionvaluemap(
    """distinct select on columns"""
    distinct_on: [encounterconditionvaluemap_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [encounterconditionvaluemap_order_by!]

    """filter the rows returned"""
    where: encounterconditionvaluemap_bool_exp
  ): [encounterconditionvaluemap!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_encounterconditionvaluemap"
  """
  encounterconditionvaluemap_aggregate(
    """distinct select on columns"""
    distinct_on: [encounterconditionvaluemap_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [encounterconditionvaluemap_order_by!]

    """filter the rows returned"""
    where: encounterconditionvaluemap_bool_exp
  ): encounterconditionvaluemap_aggregate!

  """
  fetch data from the table: "pokemon_v2_encounterconditionvaluename"
  """
  encounterconditionvaluename(
    """distinct select on columns"""
    distinct_on: [encounterconditionvaluename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [encounterconditionvaluename_order_by!]

    """filter the rows returned"""
    where: encounterconditionvaluename_bool_exp
  ): [encounterconditionvaluename!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_encounterconditionvaluename"
  """
  encounterconditionvaluename_aggregate(
    """distinct select on columns"""
    distinct_on: [encounterconditionvaluename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [encounterconditionvaluename_order_by!]

    """filter the rows returned"""
    where: encounterconditionvaluename_bool_exp
  ): encounterconditionvaluename_aggregate!

  """
  fetch data from the table: "pokemon_v2_encountermethod"
  """
  encountermethod(
    """distinct select on columns"""
    distinct_on: [encountermethod_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [encountermethod_order_by!]

    """filter the rows returned"""
    where: encountermethod_bool_exp
  ): [encountermethod!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_encountermethod"
  """
  encountermethod_aggregate(
    """distinct select on columns"""
    distinct_on: [encountermethod_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [encountermethod_order_by!]

    """filter the rows returned"""
    where: encountermethod_bool_exp
  ): encountermethod_aggregate!

  """
  fetch data from the table: "pokemon_v2_encountermethodname"
  """
  encountermethodname(
    """distinct select on columns"""
    distinct_on: [encountermethodname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [encountermethodname_order_by!]

    """filter the rows returned"""
    where: encountermethodname_bool_exp
  ): [encountermethodname!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_encountermethodname"
  """
  encountermethodname_aggregate(
    """distinct select on columns"""
    distinct_on: [encountermethodname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [encountermethodname_order_by!]

    """filter the rows returned"""
    where: encountermethodname_bool_exp
  ): encountermethodname_aggregate!

  """
  fetch data from the table: "pokemon_v2_encounterslot"
  """
  encounterslot(
    """distinct select on columns"""
    distinct_on: [encounterslot_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [encounterslot_order_by!]

    """filter the rows returned"""
    where: encounterslot_bool_exp
  ): [encounterslot!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_encounterslot"
  """
  encounterslot_aggregate(
    """distinct select on columns"""
    distinct_on: [encounterslot_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [encounterslot_order_by!]

    """filter the rows returned"""
    where: encounterslot_bool_exp
  ): encounterslot_aggregate!

  """
  fetch data from the table: "pokemon_v2_evolutionchain"
  """
  evolutionchain(
    """distinct select on columns"""
    distinct_on: [evolutionchain_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [evolutionchain_order_by!]

    """filter the rows returned"""
    where: evolutionchain_bool_exp
  ): [evolutionchain!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_evolutionchain"
  """
  evolutionchain_aggregate(
    """distinct select on columns"""
    distinct_on: [evolutionchain_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [evolutionchain_order_by!]

    """filter the rows returned"""
    where: evolutionchain_bool_exp
  ): evolutionchain_aggregate!

  """
  fetch data from the table: "pokemon_v2_evolutiontrigger"
  """
  evolutiontrigger(
    """distinct select on columns"""
    distinct_on: [evolutiontrigger_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [evolutiontrigger_order_by!]

    """filter the rows returned"""
    where: evolutiontrigger_bool_exp
  ): [evolutiontrigger!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_evolutiontrigger"
  """
  evolutiontrigger_aggregate(
    """distinct select on columns"""
    distinct_on: [evolutiontrigger_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [evolutiontrigger_order_by!]

    """filter the rows returned"""
    where: evolutiontrigger_bool_exp
  ): evolutiontrigger_aggregate!

  """
  fetch data from the table: "pokemon_v2_evolutiontriggername"
  """
  evolutiontriggername(
    """distinct select on columns"""
    distinct_on: [evolutiontriggername_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [evolutiontriggername_order_by!]

    """filter the rows returned"""
    where: evolutiontriggername_bool_exp
  ): [evolutiontriggername!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_evolutiontriggername"
  """
  evolutiontriggername_aggregate(
    """distinct select on columns"""
    distinct_on: [evolutiontriggername_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [evolutiontriggername_order_by!]

    """filter the rows returned"""
    where: evolutiontriggername_bool_exp
  ): evolutiontriggername_aggregate!

  """
  fetch data from the table: "pokemon_v2_experience"
  """
  experience(
    """distinct select on columns"""
    distinct_on: [experience_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [experience_order_by!]

    """filter the rows returned"""
    where: experience_bool_exp
  ): [experience!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_experience"
  """
  experience_aggregate(
    """distinct select on columns"""
    distinct_on: [experience_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [experience_order_by!]

    """filter the rows returned"""
    where: experience_bool_exp
  ): experience_aggregate!

  """
  fetch data from the table: "pokemon_v2_gender"
  """
  gender(
    """distinct select on columns"""
    distinct_on: [gender_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [gender_order_by!]

    """filter the rows returned"""
    where: gender_bool_exp
  ): [gender!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_gender"
  """
  gender_aggregate(
    """distinct select on columns"""
    distinct_on: [gender_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [gender_order_by!]

    """filter the rows returned"""
    where: gender_bool_exp
  ): gender_aggregate!

  """
  fetch data from the table: "pokemon_v2_generation"
  """
  generation(
    """distinct select on columns"""
    distinct_on: [generation_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [generation_order_by!]

    """filter the rows returned"""
    where: generation_bool_exp
  ): [generation!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_generation"
  """
  generation_aggregate(
    """distinct select on columns"""
    distinct_on: [generation_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [generation_order_by!]

    """filter the rows returned"""
    where: generation_bool_exp
  ): generation_aggregate!

  """
  fetch data from the table: "pokemon_v2_generationname"
  """
  generationname(
    """distinct select on columns"""
    distinct_on: [generationname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [generationname_order_by!]

    """filter the rows returned"""
    where: generationname_bool_exp
  ): [generationname!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_generationname"
  """
  generationname_aggregate(
    """distinct select on columns"""
    distinct_on: [generationname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [generationname_order_by!]

    """filter the rows returned"""
    where: generationname_bool_exp
  ): generationname_aggregate!

  """
  fetch data from the table: "pokemon_v2_growthrate"
  """
  growthrate(
    """distinct select on columns"""
    distinct_on: [growthrate_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [growthrate_order_by!]

    """filter the rows returned"""
    where: growthrate_bool_exp
  ): [growthrate!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_growthrate"
  """
  growthrate_aggregate(
    """distinct select on columns"""
    distinct_on: [growthrate_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [growthrate_order_by!]

    """filter the rows returned"""
    where: growthrate_bool_exp
  ): growthrate_aggregate!

  """
  fetch data from the table: "pokemon_v2_growthratedescription"
  """
  growthratedescription(
    """distinct select on columns"""
    distinct_on: [growthratedescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [growthratedescription_order_by!]

    """filter the rows returned"""
    where: growthratedescription_bool_exp
  ): [growthratedescription!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_growthratedescription"
  """
  growthratedescription_aggregate(
    """distinct select on columns"""
    distinct_on: [growthratedescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [growthratedescription_order_by!]

    """filter the rows returned"""
    where: growthratedescription_bool_exp
  ): growthratedescription_aggregate!

  """
  fetch data from the table: "pokemon_v2_item"
  """
  item(
    """distinct select on columns"""
    distinct_on: [item_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [item_order_by!]

    """filter the rows returned"""
    where: item_bool_exp
  ): [item!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_item"
  """
  item_aggregate(
    """distinct select on columns"""
    distinct_on: [item_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [item_order_by!]

    """filter the rows returned"""
    where: item_bool_exp
  ): item_aggregate!

  """
  fetch data from the table: "pokemon_v2_itemattribute"
  """
  itemattribute(
    """distinct select on columns"""
    distinct_on: [itemattribute_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemattribute_order_by!]

    """filter the rows returned"""
    where: itemattribute_bool_exp
  ): [itemattribute!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_itemattribute"
  """
  itemattribute_aggregate(
    """distinct select on columns"""
    distinct_on: [itemattribute_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemattribute_order_by!]

    """filter the rows returned"""
    where: itemattribute_bool_exp
  ): itemattribute_aggregate!

  """
  fetch data from the table: "pokemon_v2_itemattributedescription"
  """
  itemattributedescription(
    """distinct select on columns"""
    distinct_on: [itemattributedescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemattributedescription_order_by!]

    """filter the rows returned"""
    where: itemattributedescription_bool_exp
  ): [itemattributedescription!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_itemattributedescription"
  """
  itemattributedescription_aggregate(
    """distinct select on columns"""
    distinct_on: [itemattributedescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemattributedescription_order_by!]

    """filter the rows returned"""
    where: itemattributedescription_bool_exp
  ): itemattributedescription_aggregate!

  """
  fetch data from the table: "pokemon_v2_itemattributemap"
  """
  itemattributemap(
    """distinct select on columns"""
    distinct_on: [itemattributemap_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemattributemap_order_by!]

    """filter the rows returned"""
    where: itemattributemap_bool_exp
  ): [itemattributemap!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_itemattributemap"
  """
  itemattributemap_aggregate(
    """distinct select on columns"""
    distinct_on: [itemattributemap_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemattributemap_order_by!]

    """filter the rows returned"""
    where: itemattributemap_bool_exp
  ): itemattributemap_aggregate!

  """
  fetch data from the table: "pokemon_v2_itemattributename"
  """
  itemattributename(
    """distinct select on columns"""
    distinct_on: [itemattributename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemattributename_order_by!]

    """filter the rows returned"""
    where: itemattributename_bool_exp
  ): [itemattributename!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_itemattributename"
  """
  itemattributename_aggregate(
    """distinct select on columns"""
    distinct_on: [itemattributename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemattributename_order_by!]

    """filter the rows returned"""
    where: itemattributename_bool_exp
  ): itemattributename_aggregate!

  """
  fetch data from the table: "pokemon_v2_itemcategory"
  """
  itemcategory(
    """distinct select on columns"""
    distinct_on: [itemcategory_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemcategory_order_by!]

    """filter the rows returned"""
    where: itemcategory_bool_exp
  ): [itemcategory!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_itemcategory"
  """
  itemcategory_aggregate(
    """distinct select on columns"""
    distinct_on: [itemcategory_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemcategory_order_by!]

    """filter the rows returned"""
    where: itemcategory_bool_exp
  ): itemcategory_aggregate!

  """
  fetch data from the table: "pokemon_v2_itemcategoryname"
  """
  itemcategoryname(
    """distinct select on columns"""
    distinct_on: [itemcategoryname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemcategoryname_order_by!]

    """filter the rows returned"""
    where: itemcategoryname_bool_exp
  ): [itemcategoryname!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_itemcategoryname"
  """
  itemcategoryname_aggregate(
    """distinct select on columns"""
    distinct_on: [itemcategoryname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemcategoryname_order_by!]

    """filter the rows returned"""
    where: itemcategoryname_bool_exp
  ): itemcategoryname_aggregate!

  """
  fetch data from the table: "pokemon_v2_itemeffecttext"
  """
  itemeffecttext(
    """distinct select on columns"""
    distinct_on: [itemeffecttext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemeffecttext_order_by!]

    """filter the rows returned"""
    where: itemeffecttext_bool_exp
  ): [itemeffecttext!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_itemeffecttext"
  """
  itemeffecttext_aggregate(
    """distinct select on columns"""
    distinct_on: [itemeffecttext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemeffecttext_order_by!]

    """filter the rows returned"""
    where: itemeffecttext_bool_exp
  ): itemeffecttext_aggregate!

  """
  fetch data from the table: "pokemon_v2_itemflavortext"
  """
  itemflavortext(
    """distinct select on columns"""
    distinct_on: [itemflavortext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemflavortext_order_by!]

    """filter the rows returned"""
    where: itemflavortext_bool_exp
  ): [itemflavortext!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_itemflavortext"
  """
  itemflavortext_aggregate(
    """distinct select on columns"""
    distinct_on: [itemflavortext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemflavortext_order_by!]

    """filter the rows returned"""
    where: itemflavortext_bool_exp
  ): itemflavortext_aggregate!

  """
  fetch data from the table: "pokemon_v2_itemflingeffect"
  """
  itemflingeffect(
    """distinct select on columns"""
    distinct_on: [itemflingeffect_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemflingeffect_order_by!]

    """filter the rows returned"""
    where: itemflingeffect_bool_exp
  ): [itemflingeffect!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_itemflingeffect"
  """
  itemflingeffect_aggregate(
    """distinct select on columns"""
    distinct_on: [itemflingeffect_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemflingeffect_order_by!]

    """filter the rows returned"""
    where: itemflingeffect_bool_exp
  ): itemflingeffect_aggregate!

  """
  fetch data from the table: "pokemon_v2_itemflingeffecteffecttext"
  """
  itemflingeffecteffecttext(
    """distinct select on columns"""
    distinct_on: [itemflingeffecteffecttext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemflingeffecteffecttext_order_by!]

    """filter the rows returned"""
    where: itemflingeffecteffecttext_bool_exp
  ): [itemflingeffecteffecttext!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_itemflingeffecteffecttext"
  """
  itemflingeffecteffecttext_aggregate(
    """distinct select on columns"""
    distinct_on: [itemflingeffecteffecttext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemflingeffecteffecttext_order_by!]

    """filter the rows returned"""
    where: itemflingeffecteffecttext_bool_exp
  ): itemflingeffecteffecttext_aggregate!

  """
  fetch data from the table: "pokemon_v2_itemgameindex"
  """
  itemgameindex(
    """distinct select on columns"""
    distinct_on: [itemgameindex_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemgameindex_order_by!]

    """filter the rows returned"""
    where: itemgameindex_bool_exp
  ): [itemgameindex!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_itemgameindex"
  """
  itemgameindex_aggregate(
    """distinct select on columns"""
    distinct_on: [itemgameindex_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemgameindex_order_by!]

    """filter the rows returned"""
    where: itemgameindex_bool_exp
  ): itemgameindex_aggregate!

  """
  fetch data from the table: "pokemon_v2_itemname"
  """
  itemname(
    """distinct select on columns"""
    distinct_on: [itemname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemname_order_by!]

    """filter the rows returned"""
    where: itemname_bool_exp
  ): [itemname!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_itemname"
  """
  itemname_aggregate(
    """distinct select on columns"""
    distinct_on: [itemname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemname_order_by!]

    """filter the rows returned"""
    where: itemname_bool_exp
  ): itemname_aggregate!

  """
  fetch data from the table: "pokemon_v2_itempocket"
  """
  itempocket(
    """distinct select on columns"""
    distinct_on: [itempocket_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itempocket_order_by!]

    """filter the rows returned"""
    where: itempocket_bool_exp
  ): [itempocket!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_itempocket"
  """
  itempocket_aggregate(
    """distinct select on columns"""
    distinct_on: [itempocket_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itempocket_order_by!]

    """filter the rows returned"""
    where: itempocket_bool_exp
  ): itempocket_aggregate!

  """
  fetch data from the table: "pokemon_v2_itempocketname"
  """
  itempocketname(
    """distinct select on columns"""
    distinct_on: [itempocketname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itempocketname_order_by!]

    """filter the rows returned"""
    where: itempocketname_bool_exp
  ): [itempocketname!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_itempocketname"
  """
  itempocketname_aggregate(
    """distinct select on columns"""
    distinct_on: [itempocketname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itempocketname_order_by!]

    """filter the rows returned"""
    where: itempocketname_bool_exp
  ): itempocketname_aggregate!

  """An array relationship"""
  itemsprites(
    """distinct select on columns"""
    distinct_on: [itemsprites_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemsprites_order_by!]

    """filter the rows returned"""
    where: itemsprites_bool_exp
  ): [itemsprites!]!

  """An aggregate relationship"""
  itemsprites_aggregate(
    """distinct select on columns"""
    distinct_on: [itemsprites_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemsprites_order_by!]

    """filter the rows returned"""
    where: itemsprites_bool_exp
  ): itemsprites_aggregate!

  """
  fetch data from the table: "pokemon_v2_language"
  """
  language(
    """distinct select on columns"""
    distinct_on: [language_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [language_order_by!]

    """filter the rows returned"""
    where: language_bool_exp
  ): [language!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_language"
  """
  language_aggregate(
    """distinct select on columns"""
    distinct_on: [language_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [language_order_by!]

    """filter the rows returned"""
    where: language_bool_exp
  ): language_aggregate!

  """
  fetch data from the table: "pokemon_v2_languagename"
  """
  languagename(
    """distinct select on columns"""
    distinct_on: [languagename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [languagename_order_by!]

    """filter the rows returned"""
    where: languagename_bool_exp
  ): [languagename!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_languagename"
  """
  languagename_aggregate(
    """distinct select on columns"""
    distinct_on: [languagename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [languagename_order_by!]

    """filter the rows returned"""
    where: languagename_bool_exp
  ): languagename_aggregate!

  """
  fetch data from the table: "pokemon_v2_location"
  """
  location(
    """distinct select on columns"""
    distinct_on: [location_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [location_order_by!]

    """filter the rows returned"""
    where: location_bool_exp
  ): [location!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_location"
  """
  location_aggregate(
    """distinct select on columns"""
    distinct_on: [location_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [location_order_by!]

    """filter the rows returned"""
    where: location_bool_exp
  ): location_aggregate!

  """
  fetch data from the table: "pokemon_v2_locationarea"
  """
  locationarea(
    """distinct select on columns"""
    distinct_on: [locationarea_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [locationarea_order_by!]

    """filter the rows returned"""
    where: locationarea_bool_exp
  ): [locationarea!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_locationarea"
  """
  locationarea_aggregate(
    """distinct select on columns"""
    distinct_on: [locationarea_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [locationarea_order_by!]

    """filter the rows returned"""
    where: locationarea_bool_exp
  ): locationarea_aggregate!

  """
  fetch data from the table: "pokemon_v2_locationareaencounterrate"
  """
  locationareaencounterrate(
    """distinct select on columns"""
    distinct_on: [locationareaencounterrate_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [locationareaencounterrate_order_by!]

    """filter the rows returned"""
    where: locationareaencounterrate_bool_exp
  ): [locationareaencounterrate!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_locationareaencounterrate"
  """
  locationareaencounterrate_aggregate(
    """distinct select on columns"""
    distinct_on: [locationareaencounterrate_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [locationareaencounterrate_order_by!]

    """filter the rows returned"""
    where: locationareaencounterrate_bool_exp
  ): locationareaencounterrate_aggregate!

  """
  fetch data from the table: "pokemon_v2_locationareaname"
  """
  locationareaname(
    """distinct select on columns"""
    distinct_on: [locationareaname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [locationareaname_order_by!]

    """filter the rows returned"""
    where: locationareaname_bool_exp
  ): [locationareaname!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_locationareaname"
  """
  locationareaname_aggregate(
    """distinct select on columns"""
    distinct_on: [locationareaname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [locationareaname_order_by!]

    """filter the rows returned"""
    where: locationareaname_bool_exp
  ): locationareaname_aggregate!

  """
  fetch data from the table: "pokemon_v2_locationgameindex"
  """
  locationgameindex(
    """distinct select on columns"""
    distinct_on: [locationgameindex_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [locationgameindex_order_by!]

    """filter the rows returned"""
    where: locationgameindex_bool_exp
  ): [locationgameindex!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_locationgameindex"
  """
  locationgameindex_aggregate(
    """distinct select on columns"""
    distinct_on: [locationgameindex_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [locationgameindex_order_by!]

    """filter the rows returned"""
    where: locationgameindex_bool_exp
  ): locationgameindex_aggregate!

  """
  fetch data from the table: "pokemon_v2_locationname"
  """
  locationname(
    """distinct select on columns"""
    distinct_on: [locationname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [locationname_order_by!]

    """filter the rows returned"""
    where: locationname_bool_exp
  ): [locationname!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_locationname"
  """
  locationname_aggregate(
    """distinct select on columns"""
    distinct_on: [locationname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [locationname_order_by!]

    """filter the rows returned"""
    where: locationname_bool_exp
  ): locationname_aggregate!

  """
  fetch data from the table: "pokemon_v2_machine"
  """
  machine(
    """distinct select on columns"""
    distinct_on: [machine_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [machine_order_by!]

    """filter the rows returned"""
    where: machine_bool_exp
  ): [machine!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_machine"
  """
  machine_aggregate(
    """distinct select on columns"""
    distinct_on: [machine_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [machine_order_by!]

    """filter the rows returned"""
    where: machine_bool_exp
  ): machine_aggregate!

  """
  fetch data from the table: "pokemon_v2_move"
  """
  move(
    """distinct select on columns"""
    distinct_on: [move_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [move_order_by!]

    """filter the rows returned"""
    where: move_bool_exp
  ): [move!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_move"
  """
  move_aggregate(
    """distinct select on columns"""
    distinct_on: [move_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [move_order_by!]

    """filter the rows returned"""
    where: move_bool_exp
  ): move_aggregate!

  """
  fetch data from the table: "pokemon_v2_moveattribute"
  """
  moveattribute(
    """distinct select on columns"""
    distinct_on: [moveattribute_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [moveattribute_order_by!]

    """filter the rows returned"""
    where: moveattribute_bool_exp
  ): [moveattribute!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_moveattribute"
  """
  moveattribute_aggregate(
    """distinct select on columns"""
    distinct_on: [moveattribute_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [moveattribute_order_by!]

    """filter the rows returned"""
    where: moveattribute_bool_exp
  ): moveattribute_aggregate!

  """
  fetch data from the table: "pokemon_v2_moveattributedescription"
  """
  moveattributedescription(
    """distinct select on columns"""
    distinct_on: [moveattributedescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [moveattributedescription_order_by!]

    """filter the rows returned"""
    where: moveattributedescription_bool_exp
  ): [moveattributedescription!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_moveattributedescription"
  """
  moveattributedescription_aggregate(
    """distinct select on columns"""
    distinct_on: [moveattributedescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [moveattributedescription_order_by!]

    """filter the rows returned"""
    where: moveattributedescription_bool_exp
  ): moveattributedescription_aggregate!

  """
  fetch data from the table: "pokemon_v2_moveattributemap"
  """
  moveattributemap(
    """distinct select on columns"""
    distinct_on: [moveattributemap_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [moveattributemap_order_by!]

    """filter the rows returned"""
    where: moveattributemap_bool_exp
  ): [moveattributemap!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_moveattributemap"
  """
  moveattributemap_aggregate(
    """distinct select on columns"""
    distinct_on: [moveattributemap_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [moveattributemap_order_by!]

    """filter the rows returned"""
    where: moveattributemap_bool_exp
  ): moveattributemap_aggregate!

  """
  fetch data from the table: "pokemon_v2_moveattributename"
  """
  moveattributename(
    """distinct select on columns"""
    distinct_on: [moveattributename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [moveattributename_order_by!]

    """filter the rows returned"""
    where: moveattributename_bool_exp
  ): [moveattributename!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_moveattributename"
  """
  moveattributename_aggregate(
    """distinct select on columns"""
    distinct_on: [moveattributename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [moveattributename_order_by!]

    """filter the rows returned"""
    where: moveattributename_bool_exp
  ): moveattributename_aggregate!

  """
  fetch data from the table: "pokemon_v2_movebattlestyle"
  """
  movebattlestyle(
    """distinct select on columns"""
    distinct_on: [movebattlestyle_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movebattlestyle_order_by!]

    """filter the rows returned"""
    where: movebattlestyle_bool_exp
  ): [movebattlestyle!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_movebattlestyle"
  """
  movebattlestyle_aggregate(
    """distinct select on columns"""
    distinct_on: [movebattlestyle_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movebattlestyle_order_by!]

    """filter the rows returned"""
    where: movebattlestyle_bool_exp
  ): movebattlestyle_aggregate!

  """
  fetch data from the table: "pokemon_v2_movebattlestylename"
  """
  movebattlestylename(
    """distinct select on columns"""
    distinct_on: [movebattlestylename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movebattlestylename_order_by!]

    """filter the rows returned"""
    where: movebattlestylename_bool_exp
  ): [movebattlestylename!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_movebattlestylename"
  """
  movebattlestylename_aggregate(
    """distinct select on columns"""
    distinct_on: [movebattlestylename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movebattlestylename_order_by!]

    """filter the rows returned"""
    where: movebattlestylename_bool_exp
  ): movebattlestylename_aggregate!

  """
  fetch data from the table: "pokemon_v2_movechange"
  """
  movechange(
    """distinct select on columns"""
    distinct_on: [movechange_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movechange_order_by!]

    """filter the rows returned"""
    where: movechange_bool_exp
  ): [movechange!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_movechange"
  """
  movechange_aggregate(
    """distinct select on columns"""
    distinct_on: [movechange_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movechange_order_by!]

    """filter the rows returned"""
    where: movechange_bool_exp
  ): movechange_aggregate!

  """
  fetch data from the table: "pokemon_v2_movedamageclass"
  """
  movedamageclass(
    """distinct select on columns"""
    distinct_on: [movedamageclass_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movedamageclass_order_by!]

    """filter the rows returned"""
    where: movedamageclass_bool_exp
  ): [movedamageclass!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_movedamageclass"
  """
  movedamageclass_aggregate(
    """distinct select on columns"""
    distinct_on: [movedamageclass_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movedamageclass_order_by!]

    """filter the rows returned"""
    where: movedamageclass_bool_exp
  ): movedamageclass_aggregate!

  """
  fetch data from the table: "pokemon_v2_movedamageclassdescription"
  """
  movedamageclassdescription(
    """distinct select on columns"""
    distinct_on: [movedamageclassdescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movedamageclassdescription_order_by!]

    """filter the rows returned"""
    where: movedamageclassdescription_bool_exp
  ): [movedamageclassdescription!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_movedamageclassdescription"
  """
  movedamageclassdescription_aggregate(
    """distinct select on columns"""
    distinct_on: [movedamageclassdescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movedamageclassdescription_order_by!]

    """filter the rows returned"""
    where: movedamageclassdescription_bool_exp
  ): movedamageclassdescription_aggregate!

  """
  fetch data from the table: "pokemon_v2_movedamageclassname"
  """
  movedamageclassname(
    """distinct select on columns"""
    distinct_on: [movedamageclassname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movedamageclassname_order_by!]

    """filter the rows returned"""
    where: movedamageclassname_bool_exp
  ): [movedamageclassname!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_movedamageclassname"
  """
  movedamageclassname_aggregate(
    """distinct select on columns"""
    distinct_on: [movedamageclassname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movedamageclassname_order_by!]

    """filter the rows returned"""
    where: movedamageclassname_bool_exp
  ): movedamageclassname_aggregate!

  """
  fetch data from the table: "pokemon_v2_moveeffect"
  """
  moveeffect(
    """distinct select on columns"""
    distinct_on: [moveeffect_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [moveeffect_order_by!]

    """filter the rows returned"""
    where: moveeffect_bool_exp
  ): [moveeffect!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_moveeffect"
  """
  moveeffect_aggregate(
    """distinct select on columns"""
    distinct_on: [moveeffect_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [moveeffect_order_by!]

    """filter the rows returned"""
    where: moveeffect_bool_exp
  ): moveeffect_aggregate!

  """
  fetch data from the table: "pokemon_v2_moveeffectchange"
  """
  moveeffectchange(
    """distinct select on columns"""
    distinct_on: [moveeffectchange_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [moveeffectchange_order_by!]

    """filter the rows returned"""
    where: moveeffectchange_bool_exp
  ): [moveeffectchange!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_moveeffectchange"
  """
  moveeffectchange_aggregate(
    """distinct select on columns"""
    distinct_on: [moveeffectchange_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [moveeffectchange_order_by!]

    """filter the rows returned"""
    where: moveeffectchange_bool_exp
  ): moveeffectchange_aggregate!

  """
  fetch data from the table: "pokemon_v2_moveeffectchangeeffecttext"
  """
  moveeffectchangeeffecttext(
    """distinct select on columns"""
    distinct_on: [moveeffectchangeeffecttext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [moveeffectchangeeffecttext_order_by!]

    """filter the rows returned"""
    where: moveeffectchangeeffecttext_bool_exp
  ): [moveeffectchangeeffecttext!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_moveeffectchangeeffecttext"
  """
  moveeffectchangeeffecttext_aggregate(
    """distinct select on columns"""
    distinct_on: [moveeffectchangeeffecttext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [moveeffectchangeeffecttext_order_by!]

    """filter the rows returned"""
    where: moveeffectchangeeffecttext_bool_exp
  ): moveeffectchangeeffecttext_aggregate!

  """
  fetch data from the table: "pokemon_v2_moveeffecteffecttext"
  """
  moveeffecteffecttext(
    """distinct select on columns"""
    distinct_on: [moveeffecteffecttext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [moveeffecteffecttext_order_by!]

    """filter the rows returned"""
    where: moveeffecteffecttext_bool_exp
  ): [moveeffecteffecttext!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_moveeffecteffecttext"
  """
  moveeffecteffecttext_aggregate(
    """distinct select on columns"""
    distinct_on: [moveeffecteffecttext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [moveeffecteffecttext_order_by!]

    """filter the rows returned"""
    where: moveeffecteffecttext_bool_exp
  ): moveeffecteffecttext_aggregate!

  """
  fetch data from the table: "pokemon_v2_moveflavortext"
  """
  moveflavortext(
    """distinct select on columns"""
    distinct_on: [moveflavortext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [moveflavortext_order_by!]

    """filter the rows returned"""
    where: moveflavortext_bool_exp
  ): [moveflavortext!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_moveflavortext"
  """
  moveflavortext_aggregate(
    """distinct select on columns"""
    distinct_on: [moveflavortext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [moveflavortext_order_by!]

    """filter the rows returned"""
    where: moveflavortext_bool_exp
  ): moveflavortext_aggregate!

  """
  fetch data from the table: "pokemon_v2_movelearnmethod"
  """
  movelearnmethod(
    """distinct select on columns"""
    distinct_on: [movelearnmethod_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movelearnmethod_order_by!]

    """filter the rows returned"""
    where: movelearnmethod_bool_exp
  ): [movelearnmethod!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_movelearnmethod"
  """
  movelearnmethod_aggregate(
    """distinct select on columns"""
    distinct_on: [movelearnmethod_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movelearnmethod_order_by!]

    """filter the rows returned"""
    where: movelearnmethod_bool_exp
  ): movelearnmethod_aggregate!

  """
  fetch data from the table: "pokemon_v2_movelearnmethoddescription"
  """
  movelearnmethoddescription(
    """distinct select on columns"""
    distinct_on: [movelearnmethoddescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movelearnmethoddescription_order_by!]

    """filter the rows returned"""
    where: movelearnmethoddescription_bool_exp
  ): [movelearnmethoddescription!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_movelearnmethoddescription"
  """
  movelearnmethoddescription_aggregate(
    """distinct select on columns"""
    distinct_on: [movelearnmethoddescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movelearnmethoddescription_order_by!]

    """filter the rows returned"""
    where: movelearnmethoddescription_bool_exp
  ): movelearnmethoddescription_aggregate!

  """
  fetch data from the table: "pokemon_v2_movelearnmethodname"
  """
  movelearnmethodname(
    """distinct select on columns"""
    distinct_on: [movelearnmethodname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movelearnmethodname_order_by!]

    """filter the rows returned"""
    where: movelearnmethodname_bool_exp
  ): [movelearnmethodname!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_movelearnmethodname"
  """
  movelearnmethodname_aggregate(
    """distinct select on columns"""
    distinct_on: [movelearnmethodname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movelearnmethodname_order_by!]

    """filter the rows returned"""
    where: movelearnmethodname_bool_exp
  ): movelearnmethodname_aggregate!

  """An array relationship"""
  movemeta(
    """distinct select on columns"""
    distinct_on: [movemeta_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movemeta_order_by!]

    """filter the rows returned"""
    where: movemeta_bool_exp
  ): [movemeta!]!

  """An aggregate relationship"""
  movemeta_aggregate(
    """distinct select on columns"""
    distinct_on: [movemeta_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movemeta_order_by!]

    """filter the rows returned"""
    where: movemeta_bool_exp
  ): movemeta_aggregate!

  """
  fetch data from the table: "pokemon_v2_movemetaailment"
  """
  movemetaailment(
    """distinct select on columns"""
    distinct_on: [movemetaailment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movemetaailment_order_by!]

    """filter the rows returned"""
    where: movemetaailment_bool_exp
  ): [movemetaailment!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_movemetaailment"
  """
  movemetaailment_aggregate(
    """distinct select on columns"""
    distinct_on: [movemetaailment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movemetaailment_order_by!]

    """filter the rows returned"""
    where: movemetaailment_bool_exp
  ): movemetaailment_aggregate!

  """
  fetch data from the table: "pokemon_v2_movemetaailmentname"
  """
  movemetaailmentname(
    """distinct select on columns"""
    distinct_on: [movemetaailmentname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movemetaailmentname_order_by!]

    """filter the rows returned"""
    where: movemetaailmentname_bool_exp
  ): [movemetaailmentname!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_movemetaailmentname"
  """
  movemetaailmentname_aggregate(
    """distinct select on columns"""
    distinct_on: [movemetaailmentname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movemetaailmentname_order_by!]

    """filter the rows returned"""
    where: movemetaailmentname_bool_exp
  ): movemetaailmentname_aggregate!

  """
  fetch data from the table: "pokemon_v2_movemetacategory"
  """
  movemetacategory(
    """distinct select on columns"""
    distinct_on: [movemetacategory_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movemetacategory_order_by!]

    """filter the rows returned"""
    where: movemetacategory_bool_exp
  ): [movemetacategory!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_movemetacategory"
  """
  movemetacategory_aggregate(
    """distinct select on columns"""
    distinct_on: [movemetacategory_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movemetacategory_order_by!]

    """filter the rows returned"""
    where: movemetacategory_bool_exp
  ): movemetacategory_aggregate!

  """
  fetch data from the table: "pokemon_v2_movemetacategorydescription"
  """
  movemetacategorydescription(
    """distinct select on columns"""
    distinct_on: [movemetacategorydescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movemetacategorydescription_order_by!]

    """filter the rows returned"""
    where: movemetacategorydescription_bool_exp
  ): [movemetacategorydescription!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_movemetacategorydescription"
  """
  movemetacategorydescription_aggregate(
    """distinct select on columns"""
    distinct_on: [movemetacategorydescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movemetacategorydescription_order_by!]

    """filter the rows returned"""
    where: movemetacategorydescription_bool_exp
  ): movemetacategorydescription_aggregate!

  """
  fetch data from the table: "pokemon_v2_movemetastatchange"
  """
  movemetastatchange(
    """distinct select on columns"""
    distinct_on: [movemetastatchange_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movemetastatchange_order_by!]

    """filter the rows returned"""
    where: movemetastatchange_bool_exp
  ): [movemetastatchange!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_movemetastatchange"
  """
  movemetastatchange_aggregate(
    """distinct select on columns"""
    distinct_on: [movemetastatchange_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movemetastatchange_order_by!]

    """filter the rows returned"""
    where: movemetastatchange_bool_exp
  ): movemetastatchange_aggregate!

  """
  fetch data from the table: "pokemon_v2_movename"
  """
  movename(
    """distinct select on columns"""
    distinct_on: [movename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movename_order_by!]

    """filter the rows returned"""
    where: movename_bool_exp
  ): [movename!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_movename"
  """
  movename_aggregate(
    """distinct select on columns"""
    distinct_on: [movename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movename_order_by!]

    """filter the rows returned"""
    where: movename_bool_exp
  ): movename_aggregate!

  """
  fetch data from the table: "pokemon_v2_movetarget"
  """
  movetarget(
    """distinct select on columns"""
    distinct_on: [movetarget_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movetarget_order_by!]

    """filter the rows returned"""
    where: movetarget_bool_exp
  ): [movetarget!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_movetarget"
  """
  movetarget_aggregate(
    """distinct select on columns"""
    distinct_on: [movetarget_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movetarget_order_by!]

    """filter the rows returned"""
    where: movetarget_bool_exp
  ): movetarget_aggregate!

  """
  fetch data from the table: "pokemon_v2_movetargetdescription"
  """
  movetargetdescription(
    """distinct select on columns"""
    distinct_on: [movetargetdescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movetargetdescription_order_by!]

    """filter the rows returned"""
    where: movetargetdescription_bool_exp
  ): [movetargetdescription!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_movetargetdescription"
  """
  movetargetdescription_aggregate(
    """distinct select on columns"""
    distinct_on: [movetargetdescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movetargetdescription_order_by!]

    """filter the rows returned"""
    where: movetargetdescription_bool_exp
  ): movetargetdescription_aggregate!

  """
  fetch data from the table: "pokemon_v2_movetargetname"
  """
  movetargetname(
    """distinct select on columns"""
    distinct_on: [movetargetname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movetargetname_order_by!]

    """filter the rows returned"""
    where: movetargetname_bool_exp
  ): [movetargetname!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_movetargetname"
  """
  movetargetname_aggregate(
    """distinct select on columns"""
    distinct_on: [movetargetname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movetargetname_order_by!]

    """filter the rows returned"""
    where: movetargetname_bool_exp
  ): movetargetname_aggregate!

  """
  fetch data from the table: "pokemon_v2_nature"
  """
  nature(
    """distinct select on columns"""
    distinct_on: [nature_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [nature_order_by!]

    """filter the rows returned"""
    where: nature_bool_exp
  ): [nature!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_nature"
  """
  nature_aggregate(
    """distinct select on columns"""
    distinct_on: [nature_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [nature_order_by!]

    """filter the rows returned"""
    where: nature_bool_exp
  ): nature_aggregate!

  """
  fetch data from the table: "pokemon_v2_naturebattlestylepreference"
  """
  naturebattlestylepreference(
    """distinct select on columns"""
    distinct_on: [naturebattlestylepreference_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [naturebattlestylepreference_order_by!]

    """filter the rows returned"""
    where: naturebattlestylepreference_bool_exp
  ): [naturebattlestylepreference!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_naturebattlestylepreference"
  """
  naturebattlestylepreference_aggregate(
    """distinct select on columns"""
    distinct_on: [naturebattlestylepreference_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [naturebattlestylepreference_order_by!]

    """filter the rows returned"""
    where: naturebattlestylepreference_bool_exp
  ): naturebattlestylepreference_aggregate!

  """
  fetch data from the table: "pokemon_v2_naturename"
  """
  naturename(
    """distinct select on columns"""
    distinct_on: [naturename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [naturename_order_by!]

    """filter the rows returned"""
    where: naturename_bool_exp
  ): [naturename!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_naturename"
  """
  naturename_aggregate(
    """distinct select on columns"""
    distinct_on: [naturename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [naturename_order_by!]

    """filter the rows returned"""
    where: naturename_bool_exp
  ): naturename_aggregate!

  """
  fetch data from the table: "pokemon_v2_naturepokeathlonstat"
  """
  naturepokeathlonstat(
    """distinct select on columns"""
    distinct_on: [naturepokeathlonstat_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [naturepokeathlonstat_order_by!]

    """filter the rows returned"""
    where: naturepokeathlonstat_bool_exp
  ): [naturepokeathlonstat!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_naturepokeathlonstat"
  """
  naturepokeathlonstat_aggregate(
    """distinct select on columns"""
    distinct_on: [naturepokeathlonstat_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [naturepokeathlonstat_order_by!]

    """filter the rows returned"""
    where: naturepokeathlonstat_bool_exp
  ): naturepokeathlonstat_aggregate!

  """
  fetch data from the table: "pokemon_v2_palpark"
  """
  palpark(
    """distinct select on columns"""
    distinct_on: [palpark_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [palpark_order_by!]

    """filter the rows returned"""
    where: palpark_bool_exp
  ): [palpark!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_palpark"
  """
  palpark_aggregate(
    """distinct select on columns"""
    distinct_on: [palpark_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [palpark_order_by!]

    """filter the rows returned"""
    where: palpark_bool_exp
  ): palpark_aggregate!

  """
  fetch data from the table: "pokemon_v2_palparkarea"
  """
  palparkarea(
    """distinct select on columns"""
    distinct_on: [palparkarea_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [palparkarea_order_by!]

    """filter the rows returned"""
    where: palparkarea_bool_exp
  ): [palparkarea!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_palparkarea"
  """
  palparkarea_aggregate(
    """distinct select on columns"""
    distinct_on: [palparkarea_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [palparkarea_order_by!]

    """filter the rows returned"""
    where: palparkarea_bool_exp
  ): palparkarea_aggregate!

  """
  fetch data from the table: "pokemon_v2_palparkareaname"
  """
  palparkareaname(
    """distinct select on columns"""
    distinct_on: [palparkareaname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [palparkareaname_order_by!]

    """filter the rows returned"""
    where: palparkareaname_bool_exp
  ): [palparkareaname!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_palparkareaname"
  """
  palparkareaname_aggregate(
    """distinct select on columns"""
    distinct_on: [palparkareaname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [palparkareaname_order_by!]

    """filter the rows returned"""
    where: palparkareaname_bool_exp
  ): palparkareaname_aggregate!

  """
  fetch data from the table: "pokemon_v2_pokeathlonstat"
  """
  pokeathlonstat(
    """distinct select on columns"""
    distinct_on: [pokeathlonstat_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokeathlonstat_order_by!]

    """filter the rows returned"""
    where: pokeathlonstat_bool_exp
  ): [pokeathlonstat!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_pokeathlonstat"
  """
  pokeathlonstat_aggregate(
    """distinct select on columns"""
    distinct_on: [pokeathlonstat_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokeathlonstat_order_by!]

    """filter the rows returned"""
    where: pokeathlonstat_bool_exp
  ): pokeathlonstat_aggregate!

  """
  fetch data from the table: "pokemon_v2_pokeathlonstatname"
  """
  pokeathlonstatname(
    """distinct select on columns"""
    distinct_on: [pokeathlonstatname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokeathlonstatname_order_by!]

    """filter the rows returned"""
    where: pokeathlonstatname_bool_exp
  ): [pokeathlonstatname!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_pokeathlonstatname"
  """
  pokeathlonstatname_aggregate(
    """distinct select on columns"""
    distinct_on: [pokeathlonstatname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokeathlonstatname_order_by!]

    """filter the rows returned"""
    where: pokeathlonstatname_bool_exp
  ): pokeathlonstatname_aggregate!

  """
  fetch data from the table: "pokemon_v2_pokedex"
  """
  pokedex(
    """distinct select on columns"""
    distinct_on: [pokedex_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokedex_order_by!]

    """filter the rows returned"""
    where: pokedex_bool_exp
  ): [pokedex!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_pokedex"
  """
  pokedex_aggregate(
    """distinct select on columns"""
    distinct_on: [pokedex_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokedex_order_by!]

    """filter the rows returned"""
    where: pokedex_bool_exp
  ): pokedex_aggregate!

  """
  fetch data from the table: "pokemon_v2_pokedexdescription"
  """
  pokedexdescription(
    """distinct select on columns"""
    distinct_on: [pokedexdescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokedexdescription_order_by!]

    """filter the rows returned"""
    where: pokedexdescription_bool_exp
  ): [pokedexdescription!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_pokedexdescription"
  """
  pokedexdescription_aggregate(
    """distinct select on columns"""
    distinct_on: [pokedexdescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokedexdescription_order_by!]

    """filter the rows returned"""
    where: pokedexdescription_bool_exp
  ): pokedexdescription_aggregate!

  """
  fetch data from the table: "pokemon_v2_pokedexname"
  """
  pokedexname(
    """distinct select on columns"""
    distinct_on: [pokedexname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokedexname_order_by!]

    """filter the rows returned"""
    where: pokedexname_bool_exp
  ): [pokedexname!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_pokedexname"
  """
  pokedexname_aggregate(
    """distinct select on columns"""
    distinct_on: [pokedexname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokedexname_order_by!]

    """filter the rows returned"""
    where: pokedexname_bool_exp
  ): pokedexname_aggregate!

  """
  fetch data from the table: "pokemon_v2_pokedexversiongroup"
  """
  pokedexversiongroup(
    """distinct select on columns"""
    distinct_on: [pokedexversiongroup_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokedexversiongroup_order_by!]

    """filter the rows returned"""
    where: pokedexversiongroup_bool_exp
  ): [pokedexversiongroup!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_pokedexversiongroup"
  """
  pokedexversiongroup_aggregate(
    """distinct select on columns"""
    distinct_on: [pokedexversiongroup_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokedexversiongroup_order_by!]

    """filter the rows returned"""
    where: pokedexversiongroup_bool_exp
  ): pokedexversiongroup_aggregate!

  """
  fetch data from the table: "pokemon_v2_pokemon"
  """
  pokemon(
    """distinct select on columns"""
    distinct_on: [pokemon_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemon_order_by!]

    """filter the rows returned"""
    where: pokemon_bool_exp
  ): [pokemon!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_pokemon"
  """
  pokemon_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemon_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemon_order_by!]

    """filter the rows returned"""
    where: pokemon_bool_exp
  ): pokemon_aggregate!

  """
  fetch data from the table: "pokemon_v2_pokemonability"
  """
  pokemonability(
    """distinct select on columns"""
    distinct_on: [pokemonability_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonability_order_by!]

    """filter the rows returned"""
    where: pokemonability_bool_exp
  ): [pokemonability!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_pokemonability"
  """
  pokemonability_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonability_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonability_order_by!]

    """filter the rows returned"""
    where: pokemonability_bool_exp
  ): pokemonability_aggregate!

  """
  fetch data from the table: "pokemon_v2_pokemonabilitypast"
  """
  pokemonabilitypast(
    """distinct select on columns"""
    distinct_on: [pokemonabilitypast_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonabilitypast_order_by!]

    """filter the rows returned"""
    where: pokemonabilitypast_bool_exp
  ): [pokemonabilitypast!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_pokemonabilitypast"
  """
  pokemonabilitypast_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonabilitypast_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonabilitypast_order_by!]

    """filter the rows returned"""
    where: pokemonabilitypast_bool_exp
  ): pokemonabilitypast_aggregate!

  """
  fetch data from the table: "pokemon_v2_pokemoncolor"
  """
  pokemoncolor(
    """distinct select on columns"""
    distinct_on: [pokemoncolor_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemoncolor_order_by!]

    """filter the rows returned"""
    where: pokemoncolor_bool_exp
  ): [pokemoncolor!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_pokemoncolor"
  """
  pokemoncolor_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemoncolor_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemoncolor_order_by!]

    """filter the rows returned"""
    where: pokemoncolor_bool_exp
  ): pokemoncolor_aggregate!

  """
  fetch data from the table: "pokemon_v2_pokemoncolorname"
  """
  pokemoncolorname(
    """distinct select on columns"""
    distinct_on: [pokemoncolorname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemoncolorname_order_by!]

    """filter the rows returned"""
    where: pokemoncolorname_bool_exp
  ): [pokemoncolorname!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_pokemoncolorname"
  """
  pokemoncolorname_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemoncolorname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemoncolorname_order_by!]

    """filter the rows returned"""
    where: pokemoncolorname_bool_exp
  ): pokemoncolorname_aggregate!

  """An array relationship"""
  pokemoncries(
    """distinct select on columns"""
    distinct_on: [pokemoncries_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemoncries_order_by!]

    """filter the rows returned"""
    where: pokemoncries_bool_exp
  ): [pokemoncries!]!

  """An aggregate relationship"""
  pokemoncries_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemoncries_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemoncries_order_by!]

    """filter the rows returned"""
    where: pokemoncries_bool_exp
  ): pokemoncries_aggregate!

  """
  fetch data from the table: "pokemon_v2_pokemondexnumber"
  """
  pokemondexnumber(
    """distinct select on columns"""
    distinct_on: [pokemondexnumber_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemondexnumber_order_by!]

    """filter the rows returned"""
    where: pokemondexnumber_bool_exp
  ): [pokemondexnumber!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_pokemondexnumber"
  """
  pokemondexnumber_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemondexnumber_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemondexnumber_order_by!]

    """filter the rows returned"""
    where: pokemondexnumber_bool_exp
  ): pokemondexnumber_aggregate!

  """
  fetch data from the table: "pokemon_v2_pokemonegggroup"
  """
  pokemonegggroup(
    """distinct select on columns"""
    distinct_on: [pokemonegggroup_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonegggroup_order_by!]

    """filter the rows returned"""
    where: pokemonegggroup_bool_exp
  ): [pokemonegggroup!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_pokemonegggroup"
  """
  pokemonegggroup_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonegggroup_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonegggroup_order_by!]

    """filter the rows returned"""
    where: pokemonegggroup_bool_exp
  ): pokemonegggroup_aggregate!

  """
  fetch data from the table: "pokemon_v2_pokemonevolution"
  """
  pokemonevolution(
    """distinct select on columns"""
    distinct_on: [pokemonevolution_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonevolution_order_by!]

    """filter the rows returned"""
    where: pokemonevolution_bool_exp
  ): [pokemonevolution!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_pokemonevolution"
  """
  pokemonevolution_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonevolution_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonevolution_order_by!]

    """filter the rows returned"""
    where: pokemonevolution_bool_exp
  ): pokemonevolution_aggregate!

  """
  fetch data from the table: "pokemon_v2_pokemonform"
  """
  pokemonform(
    """distinct select on columns"""
    distinct_on: [pokemonform_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonform_order_by!]

    """filter the rows returned"""
    where: pokemonform_bool_exp
  ): [pokemonform!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_pokemonform"
  """
  pokemonform_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonform_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonform_order_by!]

    """filter the rows returned"""
    where: pokemonform_bool_exp
  ): pokemonform_aggregate!

  """
  fetch data from the table: "pokemon_v2_pokemonformgeneration"
  """
  pokemonformgeneration(
    """distinct select on columns"""
    distinct_on: [pokemonformgeneration_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonformgeneration_order_by!]

    """filter the rows returned"""
    where: pokemonformgeneration_bool_exp
  ): [pokemonformgeneration!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_pokemonformgeneration"
  """
  pokemonformgeneration_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonformgeneration_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonformgeneration_order_by!]

    """filter the rows returned"""
    where: pokemonformgeneration_bool_exp
  ): pokemonformgeneration_aggregate!

  """
  fetch data from the table: "pokemon_v2_pokemonformname"
  """
  pokemonformname(
    """distinct select on columns"""
    distinct_on: [pokemonformname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonformname_order_by!]

    """filter the rows returned"""
    where: pokemonformname_bool_exp
  ): [pokemonformname!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_pokemonformname"
  """
  pokemonformname_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonformname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonformname_order_by!]

    """filter the rows returned"""
    where: pokemonformname_bool_exp
  ): pokemonformname_aggregate!

  """An array relationship"""
  pokemonformsprites(
    """distinct select on columns"""
    distinct_on: [pokemonformsprites_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonformsprites_order_by!]

    """filter the rows returned"""
    where: pokemonformsprites_bool_exp
  ): [pokemonformsprites!]!

  """An aggregate relationship"""
  pokemonformsprites_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonformsprites_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonformsprites_order_by!]

    """filter the rows returned"""
    where: pokemonformsprites_bool_exp
  ): pokemonformsprites_aggregate!

  """
  fetch data from the table: "pokemon_v2_pokemonformtype"
  """
  pokemonformtype(
    """distinct select on columns"""
    distinct_on: [pokemonformtype_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonformtype_order_by!]

    """filter the rows returned"""
    where: pokemonformtype_bool_exp
  ): [pokemonformtype!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_pokemonformtype"
  """
  pokemonformtype_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonformtype_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonformtype_order_by!]

    """filter the rows returned"""
    where: pokemonformtype_bool_exp
  ): pokemonformtype_aggregate!

  """
  fetch data from the table: "pokemon_v2_pokemongameindex"
  """
  pokemongameindex(
    """distinct select on columns"""
    distinct_on: [pokemongameindex_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemongameindex_order_by!]

    """filter the rows returned"""
    where: pokemongameindex_bool_exp
  ): [pokemongameindex!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_pokemongameindex"
  """
  pokemongameindex_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemongameindex_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemongameindex_order_by!]

    """filter the rows returned"""
    where: pokemongameindex_bool_exp
  ): pokemongameindex_aggregate!

  """
  fetch data from the table: "pokemon_v2_pokemonhabitat"
  """
  pokemonhabitat(
    """distinct select on columns"""
    distinct_on: [pokemonhabitat_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonhabitat_order_by!]

    """filter the rows returned"""
    where: pokemonhabitat_bool_exp
  ): [pokemonhabitat!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_pokemonhabitat"
  """
  pokemonhabitat_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonhabitat_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonhabitat_order_by!]

    """filter the rows returned"""
    where: pokemonhabitat_bool_exp
  ): pokemonhabitat_aggregate!

  """
  fetch data from the table: "pokemon_v2_pokemonhabitatname"
  """
  pokemonhabitatname(
    """distinct select on columns"""
    distinct_on: [pokemonhabitatname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonhabitatname_order_by!]

    """filter the rows returned"""
    where: pokemonhabitatname_bool_exp
  ): [pokemonhabitatname!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_pokemonhabitatname"
  """
  pokemonhabitatname_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonhabitatname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonhabitatname_order_by!]

    """filter the rows returned"""
    where: pokemonhabitatname_bool_exp
  ): pokemonhabitatname_aggregate!

  """
  fetch data from the table: "pokemon_v2_pokemonitem"
  """
  pokemonitem(
    """distinct select on columns"""
    distinct_on: [pokemonitem_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonitem_order_by!]

    """filter the rows returned"""
    where: pokemonitem_bool_exp
  ): [pokemonitem!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_pokemonitem"
  """
  pokemonitem_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonitem_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonitem_order_by!]

    """filter the rows returned"""
    where: pokemonitem_bool_exp
  ): pokemonitem_aggregate!

  """
  fetch data from the table: "pokemon_v2_pokemonmove"
  """
  pokemonmove(
    """distinct select on columns"""
    distinct_on: [pokemonmove_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonmove_order_by!]

    """filter the rows returned"""
    where: pokemonmove_bool_exp
  ): [pokemonmove!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_pokemonmove"
  """
  pokemonmove_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonmove_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonmove_order_by!]

    """filter the rows returned"""
    where: pokemonmove_bool_exp
  ): pokemonmove_aggregate!

  """
  fetch data from the table: "pokemon_v2_pokemonshape"
  """
  pokemonshape(
    """distinct select on columns"""
    distinct_on: [pokemonshape_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonshape_order_by!]

    """filter the rows returned"""
    where: pokemonshape_bool_exp
  ): [pokemonshape!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_pokemonshape"
  """
  pokemonshape_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonshape_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonshape_order_by!]

    """filter the rows returned"""
    where: pokemonshape_bool_exp
  ): pokemonshape_aggregate!

  """
  fetch data from the table: "pokemon_v2_pokemonshapename"
  """
  pokemonshapename(
    """distinct select on columns"""
    distinct_on: [pokemonshapename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonshapename_order_by!]

    """filter the rows returned"""
    where: pokemonshapename_bool_exp
  ): [pokemonshapename!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_pokemonshapename"
  """
  pokemonshapename_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonshapename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonshapename_order_by!]

    """filter the rows returned"""
    where: pokemonshapename_bool_exp
  ): pokemonshapename_aggregate!

  """An array relationship"""
  pokemonspecies(
    """distinct select on columns"""
    distinct_on: [pokemonspecies_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonspecies_order_by!]

    """filter the rows returned"""
    where: pokemonspecies_bool_exp
  ): [pokemonspecies!]!

  """An aggregate relationship"""
  pokemonspecies_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonspecies_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonspecies_order_by!]

    """filter the rows returned"""
    where: pokemonspecies_bool_exp
  ): pokemonspecies_aggregate!

  """
  fetch data from the table: "pokemon_v2_pokemonspeciesdescription"
  """
  pokemonspeciesdescription(
    """distinct select on columns"""
    distinct_on: [pokemonspeciesdescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonspeciesdescription_order_by!]

    """filter the rows returned"""
    where: pokemonspeciesdescription_bool_exp
  ): [pokemonspeciesdescription!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_pokemonspeciesdescription"
  """
  pokemonspeciesdescription_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonspeciesdescription_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonspeciesdescription_order_by!]

    """filter the rows returned"""
    where: pokemonspeciesdescription_bool_exp
  ): pokemonspeciesdescription_aggregate!

  """
  fetch data from the table: "pokemon_v2_pokemonspeciesflavortext"
  """
  pokemonspeciesflavortext(
    """distinct select on columns"""
    distinct_on: [pokemonspeciesflavortext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonspeciesflavortext_order_by!]

    """filter the rows returned"""
    where: pokemonspeciesflavortext_bool_exp
  ): [pokemonspeciesflavortext!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_pokemonspeciesflavortext"
  """
  pokemonspeciesflavortext_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonspeciesflavortext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonspeciesflavortext_order_by!]

    """filter the rows returned"""
    where: pokemonspeciesflavortext_bool_exp
  ): pokemonspeciesflavortext_aggregate!

  """
  fetch data from the table: "pokemon_v2_pokemonspeciesname"
  """
  pokemonspeciesname(
    """distinct select on columns"""
    distinct_on: [pokemonspeciesname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonspeciesname_order_by!]

    """filter the rows returned"""
    where: pokemonspeciesname_bool_exp
  ): [pokemonspeciesname!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_pokemonspeciesname"
  """
  pokemonspeciesname_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonspeciesname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonspeciesname_order_by!]

    """filter the rows returned"""
    where: pokemonspeciesname_bool_exp
  ): pokemonspeciesname_aggregate!

  """An array relationship"""
  pokemonsprites(
    """distinct select on columns"""
    distinct_on: [pokemonsprites_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonsprites_order_by!]

    """filter the rows returned"""
    where: pokemonsprites_bool_exp
  ): [pokemonsprites!]!

  """An aggregate relationship"""
  pokemonsprites_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonsprites_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonsprites_order_by!]

    """filter the rows returned"""
    where: pokemonsprites_bool_exp
  ): pokemonsprites_aggregate!

  """
  fetch data from the table: "pokemon_v2_pokemonstat"
  """
  pokemonstat(
    """distinct select on columns"""
    distinct_on: [pokemonstat_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonstat_order_by!]

    """filter the rows returned"""
    where: pokemonstat_bool_exp
  ): [pokemonstat!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_pokemonstat"
  """
  pokemonstat_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonstat_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonstat_order_by!]

    """filter the rows returned"""
    where: pokemonstat_bool_exp
  ): pokemonstat_aggregate!

  """
  fetch data from the table: "pokemon_v2_pokemontype"
  """
  pokemontype(
    """distinct select on columns"""
    distinct_on: [pokemontype_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemontype_order_by!]

    """filter the rows returned"""
    where: pokemontype_bool_exp
  ): [pokemontype!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_pokemontype"
  """
  pokemontype_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemontype_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemontype_order_by!]

    """filter the rows returned"""
    where: pokemontype_bool_exp
  ): pokemontype_aggregate!

  """
  fetch data from the table: "pokemon_v2_pokemontypepast"
  """
  pokemontypepast(
    """distinct select on columns"""
    distinct_on: [pokemontypepast_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemontypepast_order_by!]

    """filter the rows returned"""
    where: pokemontypepast_bool_exp
  ): [pokemontypepast!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_pokemontypepast"
  """
  pokemontypepast_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemontypepast_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemontypepast_order_by!]

    """filter the rows returned"""
    where: pokemontypepast_bool_exp
  ): pokemontypepast_aggregate!

  """
  fetch data from the table: "pokemon_v2_region"
  """
  region(
    """distinct select on columns"""
    distinct_on: [region_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [region_order_by!]

    """filter the rows returned"""
    where: region_bool_exp
  ): [region!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_region"
  """
  region_aggregate(
    """distinct select on columns"""
    distinct_on: [region_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [region_order_by!]

    """filter the rows returned"""
    where: region_bool_exp
  ): region_aggregate!

  """
  fetch data from the table: "pokemon_v2_regionname"
  """
  regionname(
    """distinct select on columns"""
    distinct_on: [regionname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [regionname_order_by!]

    """filter the rows returned"""
    where: regionname_bool_exp
  ): [regionname!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_regionname"
  """
  regionname_aggregate(
    """distinct select on columns"""
    distinct_on: [regionname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [regionname_order_by!]

    """filter the rows returned"""
    where: regionname_bool_exp
  ): regionname_aggregate!

  """
  fetch data from the table: "pokemon_v2_stat"
  """
  stat(
    """distinct select on columns"""
    distinct_on: [stat_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [stat_order_by!]

    """filter the rows returned"""
    where: stat_bool_exp
  ): [stat!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_stat"
  """
  stat_aggregate(
    """distinct select on columns"""
    distinct_on: [stat_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [stat_order_by!]

    """filter the rows returned"""
    where: stat_bool_exp
  ): stat_aggregate!

  """
  fetch data from the table: "pokemon_v2_statname"
  """
  statname(
    """distinct select on columns"""
    distinct_on: [statname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [statname_order_by!]

    """filter the rows returned"""
    where: statname_bool_exp
  ): [statname!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_statname"
  """
  statname_aggregate(
    """distinct select on columns"""
    distinct_on: [statname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [statname_order_by!]

    """filter the rows returned"""
    where: statname_bool_exp
  ): statname_aggregate!

  """
  fetch data from the table: "pokemon_v2_supercontestcombo"
  """
  supercontestcombo(
    """distinct select on columns"""
    distinct_on: [supercontestcombo_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [supercontestcombo_order_by!]

    """filter the rows returned"""
    where: supercontestcombo_bool_exp
  ): [supercontestcombo!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_supercontestcombo"
  """
  supercontestcombo_aggregate(
    """distinct select on columns"""
    distinct_on: [supercontestcombo_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [supercontestcombo_order_by!]

    """filter the rows returned"""
    where: supercontestcombo_bool_exp
  ): supercontestcombo_aggregate!

  """
  fetch data from the table: "pokemon_v2_supercontesteffect"
  """
  supercontesteffect(
    """distinct select on columns"""
    distinct_on: [supercontesteffect_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [supercontesteffect_order_by!]

    """filter the rows returned"""
    where: supercontesteffect_bool_exp
  ): [supercontesteffect!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_supercontesteffect"
  """
  supercontesteffect_aggregate(
    """distinct select on columns"""
    distinct_on: [supercontesteffect_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [supercontesteffect_order_by!]

    """filter the rows returned"""
    where: supercontesteffect_bool_exp
  ): supercontesteffect_aggregate!

  """
  fetch data from the table: "pokemon_v2_supercontesteffectflavortext"
  """
  supercontesteffectflavortext(
    """distinct select on columns"""
    distinct_on: [supercontesteffectflavortext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [supercontesteffectflavortext_order_by!]

    """filter the rows returned"""
    where: supercontesteffectflavortext_bool_exp
  ): [supercontesteffectflavortext!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_supercontesteffectflavortext"
  """
  supercontesteffectflavortext_aggregate(
    """distinct select on columns"""
    distinct_on: [supercontesteffectflavortext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [supercontesteffectflavortext_order_by!]

    """filter the rows returned"""
    where: supercontesteffectflavortext_bool_exp
  ): supercontesteffectflavortext_aggregate!

  """
  fetch data from the table: "pokemon_v2_type"
  """
  type(
    """distinct select on columns"""
    distinct_on: [type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [type_order_by!]

    """filter the rows returned"""
    where: type_bool_exp
  ): [type!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_type"
  """
  type_aggregate(
    """distinct select on columns"""
    distinct_on: [type_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [type_order_by!]

    """filter the rows returned"""
    where: type_bool_exp
  ): type_aggregate!

  """
  fetch data from the table: "pokemon_v2_typeefficacy"
  """
  typeefficacy(
    """distinct select on columns"""
    distinct_on: [typeefficacy_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [typeefficacy_order_by!]

    """filter the rows returned"""
    where: typeefficacy_bool_exp
  ): [typeefficacy!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_typeefficacy"
  """
  typeefficacy_aggregate(
    """distinct select on columns"""
    distinct_on: [typeefficacy_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [typeefficacy_order_by!]

    """filter the rows returned"""
    where: typeefficacy_bool_exp
  ): typeefficacy_aggregate!

  """
  fetch data from the table: "pokemon_v2_typeefficacypast"
  """
  typeefficacypast(
    """distinct select on columns"""
    distinct_on: [typeefficacypast_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [typeefficacypast_order_by!]

    """filter the rows returned"""
    where: typeefficacypast_bool_exp
  ): [typeefficacypast!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_typeefficacypast"
  """
  typeefficacypast_aggregate(
    """distinct select on columns"""
    distinct_on: [typeefficacypast_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [typeefficacypast_order_by!]

    """filter the rows returned"""
    where: typeefficacypast_bool_exp
  ): typeefficacypast_aggregate!

  """
  fetch data from the table: "pokemon_v2_typegameindex"
  """
  typegameindex(
    """distinct select on columns"""
    distinct_on: [typegameindex_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [typegameindex_order_by!]

    """filter the rows returned"""
    where: typegameindex_bool_exp
  ): [typegameindex!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_typegameindex"
  """
  typegameindex_aggregate(
    """distinct select on columns"""
    distinct_on: [typegameindex_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [typegameindex_order_by!]

    """filter the rows returned"""
    where: typegameindex_bool_exp
  ): typegameindex_aggregate!

  """
  fetch data from the table: "pokemon_v2_typename"
  """
  typename(
    """distinct select on columns"""
    distinct_on: [typename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [typename_order_by!]

    """filter the rows returned"""
    where: typename_bool_exp
  ): [typename!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_typename"
  """
  typename_aggregate(
    """distinct select on columns"""
    distinct_on: [typename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [typename_order_by!]

    """filter the rows returned"""
    where: typename_bool_exp
  ): typename_aggregate!

  """
  fetch data from the table: "pokemon_v2_version"
  """
  version(
    """distinct select on columns"""
    distinct_on: [version_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [version_order_by!]

    """filter the rows returned"""
    where: version_bool_exp
  ): [version!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_version"
  """
  version_aggregate(
    """distinct select on columns"""
    distinct_on: [version_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [version_order_by!]

    """filter the rows returned"""
    where: version_bool_exp
  ): version_aggregate!

  """
  fetch data from the table: "pokemon_v2_versiongroup"
  """
  versiongroup(
    """distinct select on columns"""
    distinct_on: [versiongroup_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [versiongroup_order_by!]

    """filter the rows returned"""
    where: versiongroup_bool_exp
  ): [versiongroup!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_versiongroup"
  """
  versiongroup_aggregate(
    """distinct select on columns"""
    distinct_on: [versiongroup_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [versiongroup_order_by!]

    """filter the rows returned"""
    where: versiongroup_bool_exp
  ): versiongroup_aggregate!

  """
  fetch data from the table: "pokemon_v2_versiongroupmovelearnmethod"
  """
  versiongroupmovelearnmethod(
    """distinct select on columns"""
    distinct_on: [versiongroupmovelearnmethod_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [versiongroupmovelearnmethod_order_by!]

    """filter the rows returned"""
    where: versiongroupmovelearnmethod_bool_exp
  ): [versiongroupmovelearnmethod!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_versiongroupmovelearnmethod"
  """
  versiongroupmovelearnmethod_aggregate(
    """distinct select on columns"""
    distinct_on: [versiongroupmovelearnmethod_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [versiongroupmovelearnmethod_order_by!]

    """filter the rows returned"""
    where: versiongroupmovelearnmethod_bool_exp
  ): versiongroupmovelearnmethod_aggregate!

  """
  fetch data from the table: "pokemon_v2_versiongroupregion"
  """
  versiongroupregion(
    """distinct select on columns"""
    distinct_on: [versiongroupregion_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [versiongroupregion_order_by!]

    """filter the rows returned"""
    where: versiongroupregion_bool_exp
  ): [versiongroupregion!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_versiongroupregion"
  """
  versiongroupregion_aggregate(
    """distinct select on columns"""
    distinct_on: [versiongroupregion_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [versiongroupregion_order_by!]

    """filter the rows returned"""
    where: versiongroupregion_bool_exp
  ): versiongroupregion_aggregate!

  """
  fetch data from the table: "pokemon_v2_versionname"
  """
  versionname(
    """distinct select on columns"""
    distinct_on: [versionname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [versionname_order_by!]

    """filter the rows returned"""
    where: versionname_bool_exp
  ): [versionname!]!

  """
  fetch aggregated fields from the table: "pokemon_v2_versionname"
  """
  versionname_aggregate(
    """distinct select on columns"""
    distinct_on: [versionname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [versionname_order_by!]

    """filter the rows returned"""
    where: versionname_bool_exp
  ): versionname_aggregate!
}

"""
columns and relationships of "pokemon_v2_region"
"""
type region {
  """An object relationship"""
  generation: generation

  """An array relationship"""
  generations(
    """distinct select on columns"""
    distinct_on: [generation_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [generation_order_by!]

    """filter the rows returned"""
    where: generation_bool_exp
  ): [generation!]!

  """An aggregate relationship"""
  generations_aggregate(
    """distinct select on columns"""
    distinct_on: [generation_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [generation_order_by!]

    """filter the rows returned"""
    where: generation_bool_exp
  ): generation_aggregate!
  id: Int!

  """An array relationship"""
  locations(
    """distinct select on columns"""
    distinct_on: [location_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [location_order_by!]

    """filter the rows returned"""
    where: location_bool_exp
  ): [location!]!

  """An aggregate relationship"""
  locations_aggregate(
    """distinct select on columns"""
    distinct_on: [location_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [location_order_by!]

    """filter the rows returned"""
    where: location_bool_exp
  ): location_aggregate!
  name: String!

  """An array relationship"""
  pokedexes(
    """distinct select on columns"""
    distinct_on: [pokedex_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokedex_order_by!]

    """filter the rows returned"""
    where: pokedex_bool_exp
  ): [pokedex!]!

  """An aggregate relationship"""
  pokedexes_aggregate(
    """distinct select on columns"""
    distinct_on: [pokedex_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokedex_order_by!]

    """filter the rows returned"""
    where: pokedex_bool_exp
  ): pokedex_aggregate!

  """An array relationship"""
  regionnames(
    """distinct select on columns"""
    distinct_on: [regionname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [regionname_order_by!]

    """filter the rows returned"""
    where: regionname_bool_exp
  ): [regionname!]!

  """An aggregate relationship"""
  regionnames_aggregate(
    """distinct select on columns"""
    distinct_on: [regionname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [regionname_order_by!]

    """filter the rows returned"""
    where: regionname_bool_exp
  ): regionname_aggregate!

  """An array relationship"""
  versiongroupregions(
    """distinct select on columns"""
    distinct_on: [versiongroupregion_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [versiongroupregion_order_by!]

    """filter the rows returned"""
    where: versiongroupregion_bool_exp
  ): [versiongroupregion!]!

  """An aggregate relationship"""
  versiongroupregions_aggregate(
    """distinct select on columns"""
    distinct_on: [versiongroupregion_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [versiongroupregion_order_by!]

    """filter the rows returned"""
    where: versiongroupregion_bool_exp
  ): versiongroupregion_aggregate!
}

"""
aggregated selection of "pokemon_v2_region"
"""
type region_aggregate {
  aggregate: region_aggregate_fields
  nodes: [region!]!
}

"""
aggregate fields of "pokemon_v2_region"
"""
type region_aggregate_fields {
  avg: region_avg_fields
  count(columns: [region_select_column!], distinct: Boolean): Int!
  max: region_max_fields
  min: region_min_fields
  stddev: region_stddev_fields
  stddev_pop: region_stddev_pop_fields
  stddev_samp: region_stddev_samp_fields
  sum: region_sum_fields
  var_pop: region_var_pop_fields
  var_samp: region_var_samp_fields
  variance: region_variance_fields
}

"""aggregate avg on columns"""
type region_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "pokemon_v2_region". All fields are combined with a logical 'AND'.
"""
input region_bool_exp {
  _and: [region_bool_exp!]
  _not: region_bool_exp
  _or: [region_bool_exp!]
  generation: generation_bool_exp
  generations: generation_bool_exp
  generations_aggregate: generation_aggregate_bool_exp
  id: Int_comparison_exp
  locations: location_bool_exp
  locations_aggregate: location_aggregate_bool_exp
  name: String_comparison_exp
  pokedexes: pokedex_bool_exp
  pokedexes_aggregate: pokedex_aggregate_bool_exp
  regionnames: regionname_bool_exp
  regionnames_aggregate: regionname_aggregate_bool_exp
  versiongroupregions: versiongroupregion_bool_exp
  versiongroupregions_aggregate: versiongroupregion_aggregate_bool_exp
}

"""aggregate max on columns"""
type region_max_fields {
  id: Int
  name: String
}

"""aggregate min on columns"""
type region_min_fields {
  id: Int
  name: String
}

"""Ordering options when selecting data from "pokemon_v2_region"."""
input region_order_by {
  generation: generation_order_by
  generations_aggregate: generation_aggregate_order_by
  id: order_by
  locations_aggregate: location_aggregate_order_by
  name: order_by
  pokedexes_aggregate: pokedex_aggregate_order_by
  regionnames_aggregate: regionname_aggregate_order_by
  versiongroupregions_aggregate: versiongroupregion_aggregate_order_by
}

"""
select columns of table "pokemon_v2_region"
"""
enum region_select_column {
  """column name"""
  id

  """column name"""
  name
}

"""aggregate stddev on columns"""
type region_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type region_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type region_stddev_samp_fields {
  id: Float
}

"""aggregate sum on columns"""
type region_sum_fields {
  id: Int
}

"""aggregate var_pop on columns"""
type region_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type region_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type region_variance_fields {
  id: Float
}

"""
columns and relationships of "pokemon_v2_regionname"
"""
type regionname {
  id: Int!

  """An object relationship"""
  language: language
  language_id: Int
  name: String!

  """An object relationship"""
  region: region
  region_id: Int
}

"""
aggregated selection of "pokemon_v2_regionname"
"""
type regionname_aggregate {
  aggregate: regionname_aggregate_fields
  nodes: [regionname!]!
}

input regionname_aggregate_bool_exp {
  count: regionname_aggregate_bool_exp_count
}

input regionname_aggregate_bool_exp_count {
  arguments: [regionname_select_column!]
  distinct: Boolean
  filter: regionname_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_regionname"
"""
type regionname_aggregate_fields {
  avg: regionname_avg_fields
  count(columns: [regionname_select_column!], distinct: Boolean): Int!
  max: regionname_max_fields
  min: regionname_min_fields
  stddev: regionname_stddev_fields
  stddev_pop: regionname_stddev_pop_fields
  stddev_samp: regionname_stddev_samp_fields
  sum: regionname_sum_fields
  var_pop: regionname_var_pop_fields
  var_samp: regionname_var_samp_fields
  variance: regionname_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_regionname"
"""
input regionname_aggregate_order_by {
  avg: regionname_avg_order_by
  count: order_by
  max: regionname_max_order_by
  min: regionname_min_order_by
  stddev: regionname_stddev_order_by
  stddev_pop: regionname_stddev_pop_order_by
  stddev_samp: regionname_stddev_samp_order_by
  sum: regionname_sum_order_by
  var_pop: regionname_var_pop_order_by
  var_samp: regionname_var_samp_order_by
  variance: regionname_variance_order_by
}

"""aggregate avg on columns"""
type regionname_avg_fields {
  id: Float
  language_id: Float
  region_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_regionname"
"""
input regionname_avg_order_by {
  id: order_by
  language_id: order_by
  region_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_regionname". All fields are combined with a logical 'AND'.
"""
input regionname_bool_exp {
  _and: [regionname_bool_exp!]
  _not: regionname_bool_exp
  _or: [regionname_bool_exp!]
  id: Int_comparison_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
  name: String_comparison_exp
  region: region_bool_exp
  region_id: Int_comparison_exp
}

"""aggregate max on columns"""
type regionname_max_fields {
  id: Int
  language_id: Int
  name: String
  region_id: Int
}

"""
order by max() on columns of table "pokemon_v2_regionname"
"""
input regionname_max_order_by {
  id: order_by
  language_id: order_by
  name: order_by
  region_id: order_by
}

"""aggregate min on columns"""
type regionname_min_fields {
  id: Int
  language_id: Int
  name: String
  region_id: Int
}

"""
order by min() on columns of table "pokemon_v2_regionname"
"""
input regionname_min_order_by {
  id: order_by
  language_id: order_by
  name: order_by
  region_id: order_by
}

"""Ordering options when selecting data from "pokemon_v2_regionname"."""
input regionname_order_by {
  id: order_by
  language: language_order_by
  language_id: order_by
  name: order_by
  region: region_order_by
  region_id: order_by
}

"""
select columns of table "pokemon_v2_regionname"
"""
enum regionname_select_column {
  """column name"""
  id

  """column name"""
  language_id

  """column name"""
  name

  """column name"""
  region_id
}

"""aggregate stddev on columns"""
type regionname_stddev_fields {
  id: Float
  language_id: Float
  region_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_regionname"
"""
input regionname_stddev_order_by {
  id: order_by
  language_id: order_by
  region_id: order_by
}

"""aggregate stddev_pop on columns"""
type regionname_stddev_pop_fields {
  id: Float
  language_id: Float
  region_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_regionname"
"""
input regionname_stddev_pop_order_by {
  id: order_by
  language_id: order_by
  region_id: order_by
}

"""aggregate stddev_samp on columns"""
type regionname_stddev_samp_fields {
  id: Float
  language_id: Float
  region_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_regionname"
"""
input regionname_stddev_samp_order_by {
  id: order_by
  language_id: order_by
  region_id: order_by
}

"""aggregate sum on columns"""
type regionname_sum_fields {
  id: Int
  language_id: Int
  region_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_regionname"
"""
input regionname_sum_order_by {
  id: order_by
  language_id: order_by
  region_id: order_by
}

"""aggregate var_pop on columns"""
type regionname_var_pop_fields {
  id: Float
  language_id: Float
  region_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_regionname"
"""
input regionname_var_pop_order_by {
  id: order_by
  language_id: order_by
  region_id: order_by
}

"""aggregate var_samp on columns"""
type regionname_var_samp_fields {
  id: Float
  language_id: Float
  region_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_regionname"
"""
input regionname_var_samp_order_by {
  id: order_by
  language_id: order_by
  region_id: order_by
}

"""aggregate variance on columns"""
type regionname_variance_fields {
  id: Float
  language_id: Float
  region_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_regionname"
"""
input regionname_variance_order_by {
  id: order_by
  language_id: order_by
  region_id: order_by
}

"""
columns and relationships of "pokemon_v2_stat"
"""
type stat {
  """An array relationship"""
  NaturesByIncreasedStatId(
    """distinct select on columns"""
    distinct_on: [nature_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [nature_order_by!]

    """filter the rows returned"""
    where: nature_bool_exp
  ): [nature!]!

  """An aggregate relationship"""
  NaturesByIncreasedStatId_aggregate(
    """distinct select on columns"""
    distinct_on: [nature_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [nature_order_by!]

    """filter the rows returned"""
    where: nature_bool_exp
  ): nature_aggregate!

  """An array relationship"""
  characteristics(
    """distinct select on columns"""
    distinct_on: [characteristic_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [characteristic_order_by!]

    """filter the rows returned"""
    where: characteristic_bool_exp
  ): [characteristic!]!

  """An aggregate relationship"""
  characteristics_aggregate(
    """distinct select on columns"""
    distinct_on: [characteristic_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [characteristic_order_by!]

    """filter the rows returned"""
    where: characteristic_bool_exp
  ): characteristic_aggregate!
  game_index: Int!
  id: Int!
  is_battle_only: Boolean!
  move_damage_class_id: Int

  """An object relationship"""
  movedamageclass: movedamageclass

  """An array relationship"""
  movemetastatchanges(
    """distinct select on columns"""
    distinct_on: [movemetastatchange_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movemetastatchange_order_by!]

    """filter the rows returned"""
    where: movemetastatchange_bool_exp
  ): [movemetastatchange!]!

  """An aggregate relationship"""
  movemetastatchanges_aggregate(
    """distinct select on columns"""
    distinct_on: [movemetastatchange_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movemetastatchange_order_by!]

    """filter the rows returned"""
    where: movemetastatchange_bool_exp
  ): movemetastatchange_aggregate!
  name: String!

  """An array relationship"""
  natures(
    """distinct select on columns"""
    distinct_on: [nature_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [nature_order_by!]

    """filter the rows returned"""
    where: nature_bool_exp
  ): [nature!]!

  """An aggregate relationship"""
  natures_aggregate(
    """distinct select on columns"""
    distinct_on: [nature_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [nature_order_by!]

    """filter the rows returned"""
    where: nature_bool_exp
  ): nature_aggregate!

  """An array relationship"""
  pokemonstats(
    """distinct select on columns"""
    distinct_on: [pokemonstat_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonstat_order_by!]

    """filter the rows returned"""
    where: pokemonstat_bool_exp
  ): [pokemonstat!]!

  """An aggregate relationship"""
  pokemonstats_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonstat_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonstat_order_by!]

    """filter the rows returned"""
    where: pokemonstat_bool_exp
  ): pokemonstat_aggregate!

  """An array relationship"""
  statnames(
    """distinct select on columns"""
    distinct_on: [statname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [statname_order_by!]

    """filter the rows returned"""
    where: statname_bool_exp
  ): [statname!]!

  """An aggregate relationship"""
  statnames_aggregate(
    """distinct select on columns"""
    distinct_on: [statname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [statname_order_by!]

    """filter the rows returned"""
    where: statname_bool_exp
  ): statname_aggregate!
}

"""
aggregated selection of "pokemon_v2_stat"
"""
type stat_aggregate {
  aggregate: stat_aggregate_fields
  nodes: [stat!]!
}

input stat_aggregate_bool_exp {
  bool_and: stat_aggregate_bool_exp_bool_and
  bool_or: stat_aggregate_bool_exp_bool_or
  count: stat_aggregate_bool_exp_count
}

input stat_aggregate_bool_exp_bool_and {
  arguments: stat_select_column_stat_aggregate_bool_exp_bool_and_arguments_columns!
  distinct: Boolean
  filter: stat_bool_exp
  predicate: Boolean_comparison_exp!
}

input stat_aggregate_bool_exp_bool_or {
  arguments: stat_select_column_stat_aggregate_bool_exp_bool_or_arguments_columns!
  distinct: Boolean
  filter: stat_bool_exp
  predicate: Boolean_comparison_exp!
}

input stat_aggregate_bool_exp_count {
  arguments: [stat_select_column!]
  distinct: Boolean
  filter: stat_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_stat"
"""
type stat_aggregate_fields {
  avg: stat_avg_fields
  count(columns: [stat_select_column!], distinct: Boolean): Int!
  max: stat_max_fields
  min: stat_min_fields
  stddev: stat_stddev_fields
  stddev_pop: stat_stddev_pop_fields
  stddev_samp: stat_stddev_samp_fields
  sum: stat_sum_fields
  var_pop: stat_var_pop_fields
  var_samp: stat_var_samp_fields
  variance: stat_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_stat"
"""
input stat_aggregate_order_by {
  avg: stat_avg_order_by
  count: order_by
  max: stat_max_order_by
  min: stat_min_order_by
  stddev: stat_stddev_order_by
  stddev_pop: stat_stddev_pop_order_by
  stddev_samp: stat_stddev_samp_order_by
  sum: stat_sum_order_by
  var_pop: stat_var_pop_order_by
  var_samp: stat_var_samp_order_by
  variance: stat_variance_order_by
}

"""aggregate avg on columns"""
type stat_avg_fields {
  game_index: Float
  id: Float
  move_damage_class_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_stat"
"""
input stat_avg_order_by {
  game_index: order_by
  id: order_by
  move_damage_class_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_stat". All fields are combined with a logical 'AND'.
"""
input stat_bool_exp {
  NaturesByIncreasedStatId: nature_bool_exp
  NaturesByIncreasedStatId_aggregate: nature_aggregate_bool_exp
  _and: [stat_bool_exp!]
  _not: stat_bool_exp
  _or: [stat_bool_exp!]
  characteristics: characteristic_bool_exp
  characteristics_aggregate: characteristic_aggregate_bool_exp
  game_index: Int_comparison_exp
  id: Int_comparison_exp
  is_battle_only: Boolean_comparison_exp
  move_damage_class_id: Int_comparison_exp
  movedamageclass: movedamageclass_bool_exp
  movemetastatchanges: movemetastatchange_bool_exp
  movemetastatchanges_aggregate: movemetastatchange_aggregate_bool_exp
  name: String_comparison_exp
  natures: nature_bool_exp
  natures_aggregate: nature_aggregate_bool_exp
  pokemonstats: pokemonstat_bool_exp
  pokemonstats_aggregate: pokemonstat_aggregate_bool_exp
  statnames: statname_bool_exp
  statnames_aggregate: statname_aggregate_bool_exp
}

"""aggregate max on columns"""
type stat_max_fields {
  game_index: Int
  id: Int
  move_damage_class_id: Int
  name: String
}

"""
order by max() on columns of table "pokemon_v2_stat"
"""
input stat_max_order_by {
  game_index: order_by
  id: order_by
  move_damage_class_id: order_by
  name: order_by
}

"""aggregate min on columns"""
type stat_min_fields {
  game_index: Int
  id: Int
  move_damage_class_id: Int
  name: String
}

"""
order by min() on columns of table "pokemon_v2_stat"
"""
input stat_min_order_by {
  game_index: order_by
  id: order_by
  move_damage_class_id: order_by
  name: order_by
}

"""Ordering options when selecting data from "pokemon_v2_stat"."""
input stat_order_by {
  NaturesByIncreasedStatId_aggregate: nature_aggregate_order_by
  characteristics_aggregate: characteristic_aggregate_order_by
  game_index: order_by
  id: order_by
  is_battle_only: order_by
  move_damage_class_id: order_by
  movedamageclass: movedamageclass_order_by
  movemetastatchanges_aggregate: movemetastatchange_aggregate_order_by
  name: order_by
  natures_aggregate: nature_aggregate_order_by
  pokemonstats_aggregate: pokemonstat_aggregate_order_by
  statnames_aggregate: statname_aggregate_order_by
}

"""
select columns of table "pokemon_v2_stat"
"""
enum stat_select_column {
  """column name"""
  game_index

  """column name"""
  id

  """column name"""
  is_battle_only

  """column name"""
  move_damage_class_id

  """column name"""
  name
}

"""
select "stat_aggregate_bool_exp_bool_and_arguments_columns" columns of table "pokemon_v2_stat"
"""
enum stat_select_column_stat_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
  is_battle_only
}

"""
select "stat_aggregate_bool_exp_bool_or_arguments_columns" columns of table "pokemon_v2_stat"
"""
enum stat_select_column_stat_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
  is_battle_only
}

"""aggregate stddev on columns"""
type stat_stddev_fields {
  game_index: Float
  id: Float
  move_damage_class_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_stat"
"""
input stat_stddev_order_by {
  game_index: order_by
  id: order_by
  move_damage_class_id: order_by
}

"""aggregate stddev_pop on columns"""
type stat_stddev_pop_fields {
  game_index: Float
  id: Float
  move_damage_class_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_stat"
"""
input stat_stddev_pop_order_by {
  game_index: order_by
  id: order_by
  move_damage_class_id: order_by
}

"""aggregate stddev_samp on columns"""
type stat_stddev_samp_fields {
  game_index: Float
  id: Float
  move_damage_class_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_stat"
"""
input stat_stddev_samp_order_by {
  game_index: order_by
  id: order_by
  move_damage_class_id: order_by
}

"""aggregate sum on columns"""
type stat_sum_fields {
  game_index: Int
  id: Int
  move_damage_class_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_stat"
"""
input stat_sum_order_by {
  game_index: order_by
  id: order_by
  move_damage_class_id: order_by
}

"""aggregate var_pop on columns"""
type stat_var_pop_fields {
  game_index: Float
  id: Float
  move_damage_class_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_stat"
"""
input stat_var_pop_order_by {
  game_index: order_by
  id: order_by
  move_damage_class_id: order_by
}

"""aggregate var_samp on columns"""
type stat_var_samp_fields {
  game_index: Float
  id: Float
  move_damage_class_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_stat"
"""
input stat_var_samp_order_by {
  game_index: order_by
  id: order_by
  move_damage_class_id: order_by
}

"""aggregate variance on columns"""
type stat_variance_fields {
  game_index: Float
  id: Float
  move_damage_class_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_stat"
"""
input stat_variance_order_by {
  game_index: order_by
  id: order_by
  move_damage_class_id: order_by
}

"""
columns and relationships of "pokemon_v2_statname"
"""
type statname {
  id: Int!

  """An object relationship"""
  language: language
  language_id: Int
  name: String!

  """An object relationship"""
  stat: stat
  stat_id: Int
}

"""
aggregated selection of "pokemon_v2_statname"
"""
type statname_aggregate {
  aggregate: statname_aggregate_fields
  nodes: [statname!]!
}

input statname_aggregate_bool_exp {
  count: statname_aggregate_bool_exp_count
}

input statname_aggregate_bool_exp_count {
  arguments: [statname_select_column!]
  distinct: Boolean
  filter: statname_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_statname"
"""
type statname_aggregate_fields {
  avg: statname_avg_fields
  count(columns: [statname_select_column!], distinct: Boolean): Int!
  max: statname_max_fields
  min: statname_min_fields
  stddev: statname_stddev_fields
  stddev_pop: statname_stddev_pop_fields
  stddev_samp: statname_stddev_samp_fields
  sum: statname_sum_fields
  var_pop: statname_var_pop_fields
  var_samp: statname_var_samp_fields
  variance: statname_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_statname"
"""
input statname_aggregate_order_by {
  avg: statname_avg_order_by
  count: order_by
  max: statname_max_order_by
  min: statname_min_order_by
  stddev: statname_stddev_order_by
  stddev_pop: statname_stddev_pop_order_by
  stddev_samp: statname_stddev_samp_order_by
  sum: statname_sum_order_by
  var_pop: statname_var_pop_order_by
  var_samp: statname_var_samp_order_by
  variance: statname_variance_order_by
}

"""aggregate avg on columns"""
type statname_avg_fields {
  id: Float
  language_id: Float
  stat_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_statname"
"""
input statname_avg_order_by {
  id: order_by
  language_id: order_by
  stat_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_statname". All fields are combined with a logical 'AND'.
"""
input statname_bool_exp {
  _and: [statname_bool_exp!]
  _not: statname_bool_exp
  _or: [statname_bool_exp!]
  id: Int_comparison_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
  name: String_comparison_exp
  stat: stat_bool_exp
  stat_id: Int_comparison_exp
}

"""aggregate max on columns"""
type statname_max_fields {
  id: Int
  language_id: Int
  name: String
  stat_id: Int
}

"""
order by max() on columns of table "pokemon_v2_statname"
"""
input statname_max_order_by {
  id: order_by
  language_id: order_by
  name: order_by
  stat_id: order_by
}

"""aggregate min on columns"""
type statname_min_fields {
  id: Int
  language_id: Int
  name: String
  stat_id: Int
}

"""
order by min() on columns of table "pokemon_v2_statname"
"""
input statname_min_order_by {
  id: order_by
  language_id: order_by
  name: order_by
  stat_id: order_by
}

"""Ordering options when selecting data from "pokemon_v2_statname"."""
input statname_order_by {
  id: order_by
  language: language_order_by
  language_id: order_by
  name: order_by
  stat: stat_order_by
  stat_id: order_by
}

"""
select columns of table "pokemon_v2_statname"
"""
enum statname_select_column {
  """column name"""
  id

  """column name"""
  language_id

  """column name"""
  name

  """column name"""
  stat_id
}

"""aggregate stddev on columns"""
type statname_stddev_fields {
  id: Float
  language_id: Float
  stat_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_statname"
"""
input statname_stddev_order_by {
  id: order_by
  language_id: order_by
  stat_id: order_by
}

"""aggregate stddev_pop on columns"""
type statname_stddev_pop_fields {
  id: Float
  language_id: Float
  stat_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_statname"
"""
input statname_stddev_pop_order_by {
  id: order_by
  language_id: order_by
  stat_id: order_by
}

"""aggregate stddev_samp on columns"""
type statname_stddev_samp_fields {
  id: Float
  language_id: Float
  stat_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_statname"
"""
input statname_stddev_samp_order_by {
  id: order_by
  language_id: order_by
  stat_id: order_by
}

"""aggregate sum on columns"""
type statname_sum_fields {
  id: Int
  language_id: Int
  stat_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_statname"
"""
input statname_sum_order_by {
  id: order_by
  language_id: order_by
  stat_id: order_by
}

"""aggregate var_pop on columns"""
type statname_var_pop_fields {
  id: Float
  language_id: Float
  stat_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_statname"
"""
input statname_var_pop_order_by {
  id: order_by
  language_id: order_by
  stat_id: order_by
}

"""aggregate var_samp on columns"""
type statname_var_samp_fields {
  id: Float
  language_id: Float
  stat_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_statname"
"""
input statname_var_samp_order_by {
  id: order_by
  language_id: order_by
  stat_id: order_by
}

"""aggregate variance on columns"""
type statname_variance_fields {
  id: Float
  language_id: Float
  stat_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_statname"
"""
input statname_variance_order_by {
  id: order_by
  language_id: order_by
  stat_id: order_by
}

"""
Boolean expression to compare columns of type "String". All fields are combined with logical 'AND'.
"""
input String_comparison_exp {
  _eq: String
  _gt: String
  _gte: String

  """does the column match the given case-insensitive pattern"""
  _ilike: String
  _in: [String!]

  """
  does the column match the given POSIX regular expression, case insensitive
  """
  _iregex: String
  _is_null: Boolean

  """does the column match the given pattern"""
  _like: String
  _lt: String
  _lte: String
  _neq: String

  """does the column NOT match the given case-insensitive pattern"""
  _nilike: String
  _nin: [String!]

  """
  does the column NOT match the given POSIX regular expression, case insensitive
  """
  _niregex: String

  """does the column NOT match the given pattern"""
  _nlike: String

  """
  does the column NOT match the given POSIX regular expression, case sensitive
  """
  _nregex: String

  """does the column NOT match the given SQL regular expression"""
  _nsimilar: String

  """
  does the column match the given POSIX regular expression, case sensitive
  """
  _regex: String

  """does the column match the given SQL regular expression"""
  _similar: String
}

"""
columns and relationships of "pokemon_v2_supercontestcombo"
"""
type supercontestcombo {
  """An object relationship"""
  MoveBySecondMoveId: move
  first_move_id: Int
  id: Int!

  """An object relationship"""
  move: move
  second_move_id: Int
}

"""
aggregated selection of "pokemon_v2_supercontestcombo"
"""
type supercontestcombo_aggregate {
  aggregate: supercontestcombo_aggregate_fields
  nodes: [supercontestcombo!]!
}

input supercontestcombo_aggregate_bool_exp {
  count: supercontestcombo_aggregate_bool_exp_count
}

input supercontestcombo_aggregate_bool_exp_count {
  arguments: [supercontestcombo_select_column!]
  distinct: Boolean
  filter: supercontestcombo_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_supercontestcombo"
"""
type supercontestcombo_aggregate_fields {
  avg: supercontestcombo_avg_fields
  count(columns: [supercontestcombo_select_column!], distinct: Boolean): Int!
  max: supercontestcombo_max_fields
  min: supercontestcombo_min_fields
  stddev: supercontestcombo_stddev_fields
  stddev_pop: supercontestcombo_stddev_pop_fields
  stddev_samp: supercontestcombo_stddev_samp_fields
  sum: supercontestcombo_sum_fields
  var_pop: supercontestcombo_var_pop_fields
  var_samp: supercontestcombo_var_samp_fields
  variance: supercontestcombo_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_supercontestcombo"
"""
input supercontestcombo_aggregate_order_by {
  avg: supercontestcombo_avg_order_by
  count: order_by
  max: supercontestcombo_max_order_by
  min: supercontestcombo_min_order_by
  stddev: supercontestcombo_stddev_order_by
  stddev_pop: supercontestcombo_stddev_pop_order_by
  stddev_samp: supercontestcombo_stddev_samp_order_by
  sum: supercontestcombo_sum_order_by
  var_pop: supercontestcombo_var_pop_order_by
  var_samp: supercontestcombo_var_samp_order_by
  variance: supercontestcombo_variance_order_by
}

"""aggregate avg on columns"""
type supercontestcombo_avg_fields {
  first_move_id: Float
  id: Float
  second_move_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_supercontestcombo"
"""
input supercontestcombo_avg_order_by {
  first_move_id: order_by
  id: order_by
  second_move_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_supercontestcombo".
All fields are combined with a logical 'AND'.
"""
input supercontestcombo_bool_exp {
  MoveBySecondMoveId: move_bool_exp
  _and: [supercontestcombo_bool_exp!]
  _not: supercontestcombo_bool_exp
  _or: [supercontestcombo_bool_exp!]
  first_move_id: Int_comparison_exp
  id: Int_comparison_exp
  move: move_bool_exp
  second_move_id: Int_comparison_exp
}

"""aggregate max on columns"""
type supercontestcombo_max_fields {
  first_move_id: Int
  id: Int
  second_move_id: Int
}

"""
order by max() on columns of table "pokemon_v2_supercontestcombo"
"""
input supercontestcombo_max_order_by {
  first_move_id: order_by
  id: order_by
  second_move_id: order_by
}

"""aggregate min on columns"""
type supercontestcombo_min_fields {
  first_move_id: Int
  id: Int
  second_move_id: Int
}

"""
order by min() on columns of table "pokemon_v2_supercontestcombo"
"""
input supercontestcombo_min_order_by {
  first_move_id: order_by
  id: order_by
  second_move_id: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_supercontestcombo".
"""
input supercontestcombo_order_by {
  MoveBySecondMoveId: move_order_by
  first_move_id: order_by
  id: order_by
  move: move_order_by
  second_move_id: order_by
}

"""
select columns of table "pokemon_v2_supercontestcombo"
"""
enum supercontestcombo_select_column {
  """column name"""
  first_move_id

  """column name"""
  id

  """column name"""
  second_move_id
}

"""aggregate stddev on columns"""
type supercontestcombo_stddev_fields {
  first_move_id: Float
  id: Float
  second_move_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_supercontestcombo"
"""
input supercontestcombo_stddev_order_by {
  first_move_id: order_by
  id: order_by
  second_move_id: order_by
}

"""aggregate stddev_pop on columns"""
type supercontestcombo_stddev_pop_fields {
  first_move_id: Float
  id: Float
  second_move_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_supercontestcombo"
"""
input supercontestcombo_stddev_pop_order_by {
  first_move_id: order_by
  id: order_by
  second_move_id: order_by
}

"""aggregate stddev_samp on columns"""
type supercontestcombo_stddev_samp_fields {
  first_move_id: Float
  id: Float
  second_move_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_supercontestcombo"
"""
input supercontestcombo_stddev_samp_order_by {
  first_move_id: order_by
  id: order_by
  second_move_id: order_by
}

"""aggregate sum on columns"""
type supercontestcombo_sum_fields {
  first_move_id: Int
  id: Int
  second_move_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_supercontestcombo"
"""
input supercontestcombo_sum_order_by {
  first_move_id: order_by
  id: order_by
  second_move_id: order_by
}

"""aggregate var_pop on columns"""
type supercontestcombo_var_pop_fields {
  first_move_id: Float
  id: Float
  second_move_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_supercontestcombo"
"""
input supercontestcombo_var_pop_order_by {
  first_move_id: order_by
  id: order_by
  second_move_id: order_by
}

"""aggregate var_samp on columns"""
type supercontestcombo_var_samp_fields {
  first_move_id: Float
  id: Float
  second_move_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_supercontestcombo"
"""
input supercontestcombo_var_samp_order_by {
  first_move_id: order_by
  id: order_by
  second_move_id: order_by
}

"""aggregate variance on columns"""
type supercontestcombo_variance_fields {
  first_move_id: Float
  id: Float
  second_move_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_supercontestcombo"
"""
input supercontestcombo_variance_order_by {
  first_move_id: order_by
  id: order_by
  second_move_id: order_by
}

"""
columns and relationships of "pokemon_v2_supercontesteffect"
"""
type supercontesteffect {
  appeal: Int!
  id: Int!

  """An array relationship"""
  moves(
    """distinct select on columns"""
    distinct_on: [move_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [move_order_by!]

    """filter the rows returned"""
    where: move_bool_exp
  ): [move!]!

  """An aggregate relationship"""
  moves_aggregate(
    """distinct select on columns"""
    distinct_on: [move_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [move_order_by!]

    """filter the rows returned"""
    where: move_bool_exp
  ): move_aggregate!

  """An array relationship"""
  supercontesteffectflavortexts(
    """distinct select on columns"""
    distinct_on: [supercontesteffectflavortext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [supercontesteffectflavortext_order_by!]

    """filter the rows returned"""
    where: supercontesteffectflavortext_bool_exp
  ): [supercontesteffectflavortext!]!

  """An aggregate relationship"""
  supercontesteffectflavortexts_aggregate(
    """distinct select on columns"""
    distinct_on: [supercontesteffectflavortext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [supercontesteffectflavortext_order_by!]

    """filter the rows returned"""
    where: supercontesteffectflavortext_bool_exp
  ): supercontesteffectflavortext_aggregate!
}

"""
aggregated selection of "pokemon_v2_supercontesteffect"
"""
type supercontesteffect_aggregate {
  aggregate: supercontesteffect_aggregate_fields
  nodes: [supercontesteffect!]!
}

"""
aggregate fields of "pokemon_v2_supercontesteffect"
"""
type supercontesteffect_aggregate_fields {
  avg: supercontesteffect_avg_fields
  count(columns: [supercontesteffect_select_column!], distinct: Boolean): Int!
  max: supercontesteffect_max_fields
  min: supercontesteffect_min_fields
  stddev: supercontesteffect_stddev_fields
  stddev_pop: supercontesteffect_stddev_pop_fields
  stddev_samp: supercontesteffect_stddev_samp_fields
  sum: supercontesteffect_sum_fields
  var_pop: supercontesteffect_var_pop_fields
  var_samp: supercontesteffect_var_samp_fields
  variance: supercontesteffect_variance_fields
}

"""aggregate avg on columns"""
type supercontesteffect_avg_fields {
  appeal: Float
  id: Float
}

"""
Boolean expression to filter rows from the table
"pokemon_v2_supercontesteffect". All fields are combined with a logical 'AND'.
"""
input supercontesteffect_bool_exp {
  _and: [supercontesteffect_bool_exp!]
  _not: supercontesteffect_bool_exp
  _or: [supercontesteffect_bool_exp!]
  appeal: Int_comparison_exp
  id: Int_comparison_exp
  moves: move_bool_exp
  moves_aggregate: move_aggregate_bool_exp
  supercontesteffectflavortexts: supercontesteffectflavortext_bool_exp
  supercontesteffectflavortexts_aggregate: supercontesteffectflavortext_aggregate_bool_exp
}

"""aggregate max on columns"""
type supercontesteffect_max_fields {
  appeal: Int
  id: Int
}

"""aggregate min on columns"""
type supercontesteffect_min_fields {
  appeal: Int
  id: Int
}

"""
Ordering options when selecting data from "pokemon_v2_supercontesteffect".
"""
input supercontesteffect_order_by {
  appeal: order_by
  id: order_by
  moves_aggregate: move_aggregate_order_by
  supercontesteffectflavortexts_aggregate: supercontesteffectflavortext_aggregate_order_by
}

"""
select columns of table "pokemon_v2_supercontesteffect"
"""
enum supercontesteffect_select_column {
  """column name"""
  appeal

  """column name"""
  id
}

"""aggregate stddev on columns"""
type supercontesteffect_stddev_fields {
  appeal: Float
  id: Float
}

"""aggregate stddev_pop on columns"""
type supercontesteffect_stddev_pop_fields {
  appeal: Float
  id: Float
}

"""aggregate stddev_samp on columns"""
type supercontesteffect_stddev_samp_fields {
  appeal: Float
  id: Float
}

"""aggregate sum on columns"""
type supercontesteffect_sum_fields {
  appeal: Int
  id: Int
}

"""aggregate var_pop on columns"""
type supercontesteffect_var_pop_fields {
  appeal: Float
  id: Float
}

"""aggregate var_samp on columns"""
type supercontesteffect_var_samp_fields {
  appeal: Float
  id: Float
}

"""aggregate variance on columns"""
type supercontesteffect_variance_fields {
  appeal: Float
  id: Float
}

"""
columns and relationships of "pokemon_v2_supercontesteffectflavortext"
"""
type supercontesteffectflavortext {
  flavor_text: String!
  id: Int!

  """An object relationship"""
  language: language
  language_id: Int
  super_contest_effect_id: Int

  """An object relationship"""
  supercontesteffect: supercontesteffect
}

"""
aggregated selection of "pokemon_v2_supercontesteffectflavortext"
"""
type supercontesteffectflavortext_aggregate {
  aggregate: supercontesteffectflavortext_aggregate_fields
  nodes: [supercontesteffectflavortext!]!
}

input supercontesteffectflavortext_aggregate_bool_exp {
  count: supercontesteffectflavortext_aggregate_bool_exp_count
}

input supercontesteffectflavortext_aggregate_bool_exp_count {
  arguments: [supercontesteffectflavortext_select_column!]
  distinct: Boolean
  filter: supercontesteffectflavortext_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_supercontesteffectflavortext"
"""
type supercontesteffectflavortext_aggregate_fields {
  avg: supercontesteffectflavortext_avg_fields
  count(columns: [supercontesteffectflavortext_select_column!], distinct: Boolean): Int!
  max: supercontesteffectflavortext_max_fields
  min: supercontesteffectflavortext_min_fields
  stddev: supercontesteffectflavortext_stddev_fields
  stddev_pop: supercontesteffectflavortext_stddev_pop_fields
  stddev_samp: supercontesteffectflavortext_stddev_samp_fields
  sum: supercontesteffectflavortext_sum_fields
  var_pop: supercontesteffectflavortext_var_pop_fields
  var_samp: supercontesteffectflavortext_var_samp_fields
  variance: supercontesteffectflavortext_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_supercontesteffectflavortext"
"""
input supercontesteffectflavortext_aggregate_order_by {
  avg: supercontesteffectflavortext_avg_order_by
  count: order_by
  max: supercontesteffectflavortext_max_order_by
  min: supercontesteffectflavortext_min_order_by
  stddev: supercontesteffectflavortext_stddev_order_by
  stddev_pop: supercontesteffectflavortext_stddev_pop_order_by
  stddev_samp: supercontesteffectflavortext_stddev_samp_order_by
  sum: supercontesteffectflavortext_sum_order_by
  var_pop: supercontesteffectflavortext_var_pop_order_by
  var_samp: supercontesteffectflavortext_var_samp_order_by
  variance: supercontesteffectflavortext_variance_order_by
}

"""aggregate avg on columns"""
type supercontesteffectflavortext_avg_fields {
  id: Float
  language_id: Float
  super_contest_effect_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_supercontesteffectflavortext"
"""
input supercontesteffectflavortext_avg_order_by {
  id: order_by
  language_id: order_by
  super_contest_effect_id: order_by
}

"""
Boolean expression to filter rows from the table
"pokemon_v2_supercontesteffectflavortext". All fields are combined with a logical 'AND'.
"""
input supercontesteffectflavortext_bool_exp {
  _and: [supercontesteffectflavortext_bool_exp!]
  _not: supercontesteffectflavortext_bool_exp
  _or: [supercontesteffectflavortext_bool_exp!]
  flavor_text: String_comparison_exp
  id: Int_comparison_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
  super_contest_effect_id: Int_comparison_exp
  supercontesteffect: supercontesteffect_bool_exp
}

"""aggregate max on columns"""
type supercontesteffectflavortext_max_fields {
  flavor_text: String
  id: Int
  language_id: Int
  super_contest_effect_id: Int
}

"""
order by max() on columns of table "pokemon_v2_supercontesteffectflavortext"
"""
input supercontesteffectflavortext_max_order_by {
  flavor_text: order_by
  id: order_by
  language_id: order_by
  super_contest_effect_id: order_by
}

"""aggregate min on columns"""
type supercontesteffectflavortext_min_fields {
  flavor_text: String
  id: Int
  language_id: Int
  super_contest_effect_id: Int
}

"""
order by min() on columns of table "pokemon_v2_supercontesteffectflavortext"
"""
input supercontesteffectflavortext_min_order_by {
  flavor_text: order_by
  id: order_by
  language_id: order_by
  super_contest_effect_id: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_supercontesteffectflavortext".
"""
input supercontesteffectflavortext_order_by {
  flavor_text: order_by
  id: order_by
  language: language_order_by
  language_id: order_by
  super_contest_effect_id: order_by
  supercontesteffect: supercontesteffect_order_by
}

"""
select columns of table "pokemon_v2_supercontesteffectflavortext"
"""
enum supercontesteffectflavortext_select_column {
  """column name"""
  flavor_text

  """column name"""
  id

  """column name"""
  language_id

  """column name"""
  super_contest_effect_id
}

"""aggregate stddev on columns"""
type supercontesteffectflavortext_stddev_fields {
  id: Float
  language_id: Float
  super_contest_effect_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_supercontesteffectflavortext"
"""
input supercontesteffectflavortext_stddev_order_by {
  id: order_by
  language_id: order_by
  super_contest_effect_id: order_by
}

"""aggregate stddev_pop on columns"""
type supercontesteffectflavortext_stddev_pop_fields {
  id: Float
  language_id: Float
  super_contest_effect_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_supercontesteffectflavortext"
"""
input supercontesteffectflavortext_stddev_pop_order_by {
  id: order_by
  language_id: order_by
  super_contest_effect_id: order_by
}

"""aggregate stddev_samp on columns"""
type supercontesteffectflavortext_stddev_samp_fields {
  id: Float
  language_id: Float
  super_contest_effect_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_supercontesteffectflavortext"
"""
input supercontesteffectflavortext_stddev_samp_order_by {
  id: order_by
  language_id: order_by
  super_contest_effect_id: order_by
}

"""aggregate sum on columns"""
type supercontesteffectflavortext_sum_fields {
  id: Int
  language_id: Int
  super_contest_effect_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_supercontesteffectflavortext"
"""
input supercontesteffectflavortext_sum_order_by {
  id: order_by
  language_id: order_by
  super_contest_effect_id: order_by
}

"""aggregate var_pop on columns"""
type supercontesteffectflavortext_var_pop_fields {
  id: Float
  language_id: Float
  super_contest_effect_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_supercontesteffectflavortext"
"""
input supercontesteffectflavortext_var_pop_order_by {
  id: order_by
  language_id: order_by
  super_contest_effect_id: order_by
}

"""aggregate var_samp on columns"""
type supercontesteffectflavortext_var_samp_fields {
  id: Float
  language_id: Float
  super_contest_effect_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_supercontesteffectflavortext"
"""
input supercontesteffectflavortext_var_samp_order_by {
  id: order_by
  language_id: order_by
  super_contest_effect_id: order_by
}

"""aggregate variance on columns"""
type supercontesteffectflavortext_variance_fields {
  id: Float
  language_id: Float
  super_contest_effect_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_supercontesteffectflavortext"
"""
input supercontesteffectflavortext_variance_order_by {
  id: order_by
  language_id: order_by
  super_contest_effect_id: order_by
}

"""
columns and relationships of "pokemon_v2_type"
"""
type type {
  """An array relationship"""
  PokemonevolutionsByPartyTypeId(
    """distinct select on columns"""
    distinct_on: [pokemonevolution_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonevolution_order_by!]

    """filter the rows returned"""
    where: pokemonevolution_bool_exp
  ): [pokemonevolution!]!

  """An aggregate relationship"""
  PokemonevolutionsByPartyTypeId_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonevolution_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonevolution_order_by!]

    """filter the rows returned"""
    where: pokemonevolution_bool_exp
  ): pokemonevolution_aggregate!

  """An array relationship"""
  TypeefficaciesByTargetTypeId(
    """distinct select on columns"""
    distinct_on: [typeefficacy_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [typeefficacy_order_by!]

    """filter the rows returned"""
    where: typeefficacy_bool_exp
  ): [typeefficacy!]!

  """An aggregate relationship"""
  TypeefficaciesByTargetTypeId_aggregate(
    """distinct select on columns"""
    distinct_on: [typeefficacy_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [typeefficacy_order_by!]

    """filter the rows returned"""
    where: typeefficacy_bool_exp
  ): typeefficacy_aggregate!

  """An array relationship"""
  TypeefficacypastsByTargetTypeId(
    """distinct select on columns"""
    distinct_on: [typeefficacypast_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [typeefficacypast_order_by!]

    """filter the rows returned"""
    where: typeefficacypast_bool_exp
  ): [typeefficacypast!]!

  """An aggregate relationship"""
  TypeefficacypastsByTargetTypeId_aggregate(
    """distinct select on columns"""
    distinct_on: [typeefficacypast_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [typeefficacypast_order_by!]

    """filter the rows returned"""
    where: typeefficacypast_bool_exp
  ): typeefficacypast_aggregate!

  """An array relationship"""
  berries(
    """distinct select on columns"""
    distinct_on: [berry_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [berry_order_by!]

    """filter the rows returned"""
    where: berry_bool_exp
  ): [berry!]!

  """An aggregate relationship"""
  berries_aggregate(
    """distinct select on columns"""
    distinct_on: [berry_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [berry_order_by!]

    """filter the rows returned"""
    where: berry_bool_exp
  ): berry_aggregate!

  """An object relationship"""
  generation: generation
  generation_id: Int
  id: Int!
  move_damage_class_id: Int

  """An array relationship"""
  movechanges(
    """distinct select on columns"""
    distinct_on: [movechange_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movechange_order_by!]

    """filter the rows returned"""
    where: movechange_bool_exp
  ): [movechange!]!

  """An aggregate relationship"""
  movechanges_aggregate(
    """distinct select on columns"""
    distinct_on: [movechange_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movechange_order_by!]

    """filter the rows returned"""
    where: movechange_bool_exp
  ): movechange_aggregate!

  """An object relationship"""
  movedamageclass: movedamageclass

  """An array relationship"""
  moves(
    """distinct select on columns"""
    distinct_on: [move_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [move_order_by!]

    """filter the rows returned"""
    where: move_bool_exp
  ): [move!]!

  """An aggregate relationship"""
  moves_aggregate(
    """distinct select on columns"""
    distinct_on: [move_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [move_order_by!]

    """filter the rows returned"""
    where: move_bool_exp
  ): move_aggregate!
  name: String!

  """An array relationship"""
  pokemonevolutions(
    """distinct select on columns"""
    distinct_on: [pokemonevolution_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonevolution_order_by!]

    """filter the rows returned"""
    where: pokemonevolution_bool_exp
  ): [pokemonevolution!]!

  """An aggregate relationship"""
  pokemonevolutions_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonevolution_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonevolution_order_by!]

    """filter the rows returned"""
    where: pokemonevolution_bool_exp
  ): pokemonevolution_aggregate!

  """An array relationship"""
  pokemonformtypes(
    """distinct select on columns"""
    distinct_on: [pokemonformtype_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonformtype_order_by!]

    """filter the rows returned"""
    where: pokemonformtype_bool_exp
  ): [pokemonformtype!]!

  """An aggregate relationship"""
  pokemonformtypes_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonformtype_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonformtype_order_by!]

    """filter the rows returned"""
    where: pokemonformtype_bool_exp
  ): pokemonformtype_aggregate!

  """An array relationship"""
  pokemontypepasts(
    """distinct select on columns"""
    distinct_on: [pokemontypepast_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemontypepast_order_by!]

    """filter the rows returned"""
    where: pokemontypepast_bool_exp
  ): [pokemontypepast!]!

  """An aggregate relationship"""
  pokemontypepasts_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemontypepast_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemontypepast_order_by!]

    """filter the rows returned"""
    where: pokemontypepast_bool_exp
  ): pokemontypepast_aggregate!

  """An array relationship"""
  pokemontypes(
    """distinct select on columns"""
    distinct_on: [pokemontype_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemontype_order_by!]

    """filter the rows returned"""
    where: pokemontype_bool_exp
  ): [pokemontype!]!

  """An aggregate relationship"""
  pokemontypes_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemontype_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemontype_order_by!]

    """filter the rows returned"""
    where: pokemontype_bool_exp
  ): pokemontype_aggregate!

  """An array relationship"""
  typeefficacies(
    """distinct select on columns"""
    distinct_on: [typeefficacy_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [typeefficacy_order_by!]

    """filter the rows returned"""
    where: typeefficacy_bool_exp
  ): [typeefficacy!]!

  """An aggregate relationship"""
  typeefficacies_aggregate(
    """distinct select on columns"""
    distinct_on: [typeefficacy_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [typeefficacy_order_by!]

    """filter the rows returned"""
    where: typeefficacy_bool_exp
  ): typeefficacy_aggregate!

  """An array relationship"""
  typeefficacypasts(
    """distinct select on columns"""
    distinct_on: [typeefficacypast_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [typeefficacypast_order_by!]

    """filter the rows returned"""
    where: typeefficacypast_bool_exp
  ): [typeefficacypast!]!

  """An aggregate relationship"""
  typeefficacypasts_aggregate(
    """distinct select on columns"""
    distinct_on: [typeefficacypast_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [typeefficacypast_order_by!]

    """filter the rows returned"""
    where: typeefficacypast_bool_exp
  ): typeefficacypast_aggregate!

  """An array relationship"""
  typegameindices(
    """distinct select on columns"""
    distinct_on: [typegameindex_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [typegameindex_order_by!]

    """filter the rows returned"""
    where: typegameindex_bool_exp
  ): [typegameindex!]!

  """An aggregate relationship"""
  typegameindices_aggregate(
    """distinct select on columns"""
    distinct_on: [typegameindex_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [typegameindex_order_by!]

    """filter the rows returned"""
    where: typegameindex_bool_exp
  ): typegameindex_aggregate!

  """An array relationship"""
  typenames(
    """distinct select on columns"""
    distinct_on: [typename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [typename_order_by!]

    """filter the rows returned"""
    where: typename_bool_exp
  ): [typename!]!

  """An aggregate relationship"""
  typenames_aggregate(
    """distinct select on columns"""
    distinct_on: [typename_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [typename_order_by!]

    """filter the rows returned"""
    where: typename_bool_exp
  ): typename_aggregate!
}

"""
aggregated selection of "pokemon_v2_type"
"""
type type_aggregate {
  aggregate: type_aggregate_fields
  nodes: [type!]!
}

input type_aggregate_bool_exp {
  count: type_aggregate_bool_exp_count
}

input type_aggregate_bool_exp_count {
  arguments: [type_select_column!]
  distinct: Boolean
  filter: type_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_type"
"""
type type_aggregate_fields {
  avg: type_avg_fields
  count(columns: [type_select_column!], distinct: Boolean): Int!
  max: type_max_fields
  min: type_min_fields
  stddev: type_stddev_fields
  stddev_pop: type_stddev_pop_fields
  stddev_samp: type_stddev_samp_fields
  sum: type_sum_fields
  var_pop: type_var_pop_fields
  var_samp: type_var_samp_fields
  variance: type_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_type"
"""
input type_aggregate_order_by {
  avg: type_avg_order_by
  count: order_by
  max: type_max_order_by
  min: type_min_order_by
  stddev: type_stddev_order_by
  stddev_pop: type_stddev_pop_order_by
  stddev_samp: type_stddev_samp_order_by
  sum: type_sum_order_by
  var_pop: type_var_pop_order_by
  var_samp: type_var_samp_order_by
  variance: type_variance_order_by
}

"""aggregate avg on columns"""
type type_avg_fields {
  generation_id: Float
  id: Float
  move_damage_class_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_type"
"""
input type_avg_order_by {
  generation_id: order_by
  id: order_by
  move_damage_class_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_type". All fields are combined with a logical 'AND'.
"""
input type_bool_exp {
  PokemonevolutionsByPartyTypeId: pokemonevolution_bool_exp
  PokemonevolutionsByPartyTypeId_aggregate: pokemonevolution_aggregate_bool_exp
  TypeefficaciesByTargetTypeId: typeefficacy_bool_exp
  TypeefficaciesByTargetTypeId_aggregate: typeefficacy_aggregate_bool_exp
  TypeefficacypastsByTargetTypeId: typeefficacypast_bool_exp
  TypeefficacypastsByTargetTypeId_aggregate: typeefficacypast_aggregate_bool_exp
  _and: [type_bool_exp!]
  _not: type_bool_exp
  _or: [type_bool_exp!]
  berries: berry_bool_exp
  berries_aggregate: berry_aggregate_bool_exp
  generation: generation_bool_exp
  generation_id: Int_comparison_exp
  id: Int_comparison_exp
  move_damage_class_id: Int_comparison_exp
  movechanges: movechange_bool_exp
  movechanges_aggregate: movechange_aggregate_bool_exp
  movedamageclass: movedamageclass_bool_exp
  moves: move_bool_exp
  moves_aggregate: move_aggregate_bool_exp
  name: String_comparison_exp
  pokemonevolutions: pokemonevolution_bool_exp
  pokemonevolutions_aggregate: pokemonevolution_aggregate_bool_exp
  pokemonformtypes: pokemonformtype_bool_exp
  pokemonformtypes_aggregate: pokemonformtype_aggregate_bool_exp
  pokemontypepasts: pokemontypepast_bool_exp
  pokemontypepasts_aggregate: pokemontypepast_aggregate_bool_exp
  pokemontypes: pokemontype_bool_exp
  pokemontypes_aggregate: pokemontype_aggregate_bool_exp
  typeefficacies: typeefficacy_bool_exp
  typeefficacies_aggregate: typeefficacy_aggregate_bool_exp
  typeefficacypasts: typeefficacypast_bool_exp
  typeefficacypasts_aggregate: typeefficacypast_aggregate_bool_exp
  typegameindices: typegameindex_bool_exp
  typegameindices_aggregate: typegameindex_aggregate_bool_exp
  typenames: typename_bool_exp
  typenames_aggregate: typename_aggregate_bool_exp
}

"""aggregate max on columns"""
type type_max_fields {
  generation_id: Int
  id: Int
  move_damage_class_id: Int
  name: String
}

"""
order by max() on columns of table "pokemon_v2_type"
"""
input type_max_order_by {
  generation_id: order_by
  id: order_by
  move_damage_class_id: order_by
  name: order_by
}

"""aggregate min on columns"""
type type_min_fields {
  generation_id: Int
  id: Int
  move_damage_class_id: Int
  name: String
}

"""
order by min() on columns of table "pokemon_v2_type"
"""
input type_min_order_by {
  generation_id: order_by
  id: order_by
  move_damage_class_id: order_by
  name: order_by
}

"""Ordering options when selecting data from "pokemon_v2_type"."""
input type_order_by {
  PokemonevolutionsByPartyTypeId_aggregate: pokemonevolution_aggregate_order_by
  TypeefficaciesByTargetTypeId_aggregate: typeefficacy_aggregate_order_by
  TypeefficacypastsByTargetTypeId_aggregate: typeefficacypast_aggregate_order_by
  berries_aggregate: berry_aggregate_order_by
  generation: generation_order_by
  generation_id: order_by
  id: order_by
  move_damage_class_id: order_by
  movechanges_aggregate: movechange_aggregate_order_by
  movedamageclass: movedamageclass_order_by
  moves_aggregate: move_aggregate_order_by
  name: order_by
  pokemonevolutions_aggregate: pokemonevolution_aggregate_order_by
  pokemonformtypes_aggregate: pokemonformtype_aggregate_order_by
  pokemontypepasts_aggregate: pokemontypepast_aggregate_order_by
  pokemontypes_aggregate: pokemontype_aggregate_order_by
  typeefficacies_aggregate: typeefficacy_aggregate_order_by
  typeefficacypasts_aggregate: typeefficacypast_aggregate_order_by
  typegameindices_aggregate: typegameindex_aggregate_order_by
  typenames_aggregate: typename_aggregate_order_by
}

"""
select columns of table "pokemon_v2_type"
"""
enum type_select_column {
  """column name"""
  generation_id

  """column name"""
  id

  """column name"""
  move_damage_class_id

  """column name"""
  name
}

"""aggregate stddev on columns"""
type type_stddev_fields {
  generation_id: Float
  id: Float
  move_damage_class_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_type"
"""
input type_stddev_order_by {
  generation_id: order_by
  id: order_by
  move_damage_class_id: order_by
}

"""aggregate stddev_pop on columns"""
type type_stddev_pop_fields {
  generation_id: Float
  id: Float
  move_damage_class_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_type"
"""
input type_stddev_pop_order_by {
  generation_id: order_by
  id: order_by
  move_damage_class_id: order_by
}

"""aggregate stddev_samp on columns"""
type type_stddev_samp_fields {
  generation_id: Float
  id: Float
  move_damage_class_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_type"
"""
input type_stddev_samp_order_by {
  generation_id: order_by
  id: order_by
  move_damage_class_id: order_by
}

"""aggregate sum on columns"""
type type_sum_fields {
  generation_id: Int
  id: Int
  move_damage_class_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_type"
"""
input type_sum_order_by {
  generation_id: order_by
  id: order_by
  move_damage_class_id: order_by
}

"""aggregate var_pop on columns"""
type type_var_pop_fields {
  generation_id: Float
  id: Float
  move_damage_class_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_type"
"""
input type_var_pop_order_by {
  generation_id: order_by
  id: order_by
  move_damage_class_id: order_by
}

"""aggregate var_samp on columns"""
type type_var_samp_fields {
  generation_id: Float
  id: Float
  move_damage_class_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_type"
"""
input type_var_samp_order_by {
  generation_id: order_by
  id: order_by
  move_damage_class_id: order_by
}

"""aggregate variance on columns"""
type type_variance_fields {
  generation_id: Float
  id: Float
  move_damage_class_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_type"
"""
input type_variance_order_by {
  generation_id: order_by
  id: order_by
  move_damage_class_id: order_by
}

"""
columns and relationships of "pokemon_v2_typeefficacy"
"""
type typeefficacy {
  """An object relationship"""
  TypeByTargetTypeId: type
  damage_factor: Int!
  damage_type_id: Int
  id: Int!
  target_type_id: Int

  """An object relationship"""
  type: type
}

"""
aggregated selection of "pokemon_v2_typeefficacy"
"""
type typeefficacy_aggregate {
  aggregate: typeefficacy_aggregate_fields
  nodes: [typeefficacy!]!
}

input typeefficacy_aggregate_bool_exp {
  count: typeefficacy_aggregate_bool_exp_count
}

input typeefficacy_aggregate_bool_exp_count {
  arguments: [typeefficacy_select_column!]
  distinct: Boolean
  filter: typeefficacy_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_typeefficacy"
"""
type typeefficacy_aggregate_fields {
  avg: typeefficacy_avg_fields
  count(columns: [typeefficacy_select_column!], distinct: Boolean): Int!
  max: typeefficacy_max_fields
  min: typeefficacy_min_fields
  stddev: typeefficacy_stddev_fields
  stddev_pop: typeefficacy_stddev_pop_fields
  stddev_samp: typeefficacy_stddev_samp_fields
  sum: typeefficacy_sum_fields
  var_pop: typeefficacy_var_pop_fields
  var_samp: typeefficacy_var_samp_fields
  variance: typeefficacy_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_typeefficacy"
"""
input typeefficacy_aggregate_order_by {
  avg: typeefficacy_avg_order_by
  count: order_by
  max: typeefficacy_max_order_by
  min: typeefficacy_min_order_by
  stddev: typeefficacy_stddev_order_by
  stddev_pop: typeefficacy_stddev_pop_order_by
  stddev_samp: typeefficacy_stddev_samp_order_by
  sum: typeefficacy_sum_order_by
  var_pop: typeefficacy_var_pop_order_by
  var_samp: typeefficacy_var_samp_order_by
  variance: typeefficacy_variance_order_by
}

"""aggregate avg on columns"""
type typeefficacy_avg_fields {
  damage_factor: Float
  damage_type_id: Float
  id: Float
  target_type_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_typeefficacy"
"""
input typeefficacy_avg_order_by {
  damage_factor: order_by
  damage_type_id: order_by
  id: order_by
  target_type_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_typeefficacy". All fields are combined with a logical 'AND'.
"""
input typeefficacy_bool_exp {
  TypeByTargetTypeId: type_bool_exp
  _and: [typeefficacy_bool_exp!]
  _not: typeefficacy_bool_exp
  _or: [typeefficacy_bool_exp!]
  damage_factor: Int_comparison_exp
  damage_type_id: Int_comparison_exp
  id: Int_comparison_exp
  target_type_id: Int_comparison_exp
  type: type_bool_exp
}

"""aggregate max on columns"""
type typeefficacy_max_fields {
  damage_factor: Int
  damage_type_id: Int
  id: Int
  target_type_id: Int
}

"""
order by max() on columns of table "pokemon_v2_typeefficacy"
"""
input typeefficacy_max_order_by {
  damage_factor: order_by
  damage_type_id: order_by
  id: order_by
  target_type_id: order_by
}

"""aggregate min on columns"""
type typeefficacy_min_fields {
  damage_factor: Int
  damage_type_id: Int
  id: Int
  target_type_id: Int
}

"""
order by min() on columns of table "pokemon_v2_typeefficacy"
"""
input typeefficacy_min_order_by {
  damage_factor: order_by
  damage_type_id: order_by
  id: order_by
  target_type_id: order_by
}

"""Ordering options when selecting data from "pokemon_v2_typeefficacy"."""
input typeefficacy_order_by {
  TypeByTargetTypeId: type_order_by
  damage_factor: order_by
  damage_type_id: order_by
  id: order_by
  target_type_id: order_by
  type: type_order_by
}

"""
select columns of table "pokemon_v2_typeefficacy"
"""
enum typeefficacy_select_column {
  """column name"""
  damage_factor

  """column name"""
  damage_type_id

  """column name"""
  id

  """column name"""
  target_type_id
}

"""aggregate stddev on columns"""
type typeefficacy_stddev_fields {
  damage_factor: Float
  damage_type_id: Float
  id: Float
  target_type_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_typeefficacy"
"""
input typeefficacy_stddev_order_by {
  damage_factor: order_by
  damage_type_id: order_by
  id: order_by
  target_type_id: order_by
}

"""aggregate stddev_pop on columns"""
type typeefficacy_stddev_pop_fields {
  damage_factor: Float
  damage_type_id: Float
  id: Float
  target_type_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_typeefficacy"
"""
input typeefficacy_stddev_pop_order_by {
  damage_factor: order_by
  damage_type_id: order_by
  id: order_by
  target_type_id: order_by
}

"""aggregate stddev_samp on columns"""
type typeefficacy_stddev_samp_fields {
  damage_factor: Float
  damage_type_id: Float
  id: Float
  target_type_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_typeefficacy"
"""
input typeefficacy_stddev_samp_order_by {
  damage_factor: order_by
  damage_type_id: order_by
  id: order_by
  target_type_id: order_by
}

"""aggregate sum on columns"""
type typeefficacy_sum_fields {
  damage_factor: Int
  damage_type_id: Int
  id: Int
  target_type_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_typeefficacy"
"""
input typeefficacy_sum_order_by {
  damage_factor: order_by
  damage_type_id: order_by
  id: order_by
  target_type_id: order_by
}

"""aggregate var_pop on columns"""
type typeefficacy_var_pop_fields {
  damage_factor: Float
  damage_type_id: Float
  id: Float
  target_type_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_typeefficacy"
"""
input typeefficacy_var_pop_order_by {
  damage_factor: order_by
  damage_type_id: order_by
  id: order_by
  target_type_id: order_by
}

"""aggregate var_samp on columns"""
type typeefficacy_var_samp_fields {
  damage_factor: Float
  damage_type_id: Float
  id: Float
  target_type_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_typeefficacy"
"""
input typeefficacy_var_samp_order_by {
  damage_factor: order_by
  damage_type_id: order_by
  id: order_by
  target_type_id: order_by
}

"""aggregate variance on columns"""
type typeefficacy_variance_fields {
  damage_factor: Float
  damage_type_id: Float
  id: Float
  target_type_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_typeefficacy"
"""
input typeefficacy_variance_order_by {
  damage_factor: order_by
  damage_type_id: order_by
  id: order_by
  target_type_id: order_by
}

"""
columns and relationships of "pokemon_v2_typeefficacypast"
"""
type typeefficacypast {
  """An object relationship"""
  TypeByTargetTypeId: type
  damage_factor: Int!
  damage_type_id: Int

  """An object relationship"""
  generation: generation
  generation_id: Int
  id: Int!
  target_type_id: Int

  """An object relationship"""
  type: type
}

"""
aggregated selection of "pokemon_v2_typeefficacypast"
"""
type typeefficacypast_aggregate {
  aggregate: typeefficacypast_aggregate_fields
  nodes: [typeefficacypast!]!
}

input typeefficacypast_aggregate_bool_exp {
  count: typeefficacypast_aggregate_bool_exp_count
}

input typeefficacypast_aggregate_bool_exp_count {
  arguments: [typeefficacypast_select_column!]
  distinct: Boolean
  filter: typeefficacypast_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_typeefficacypast"
"""
type typeefficacypast_aggregate_fields {
  avg: typeefficacypast_avg_fields
  count(columns: [typeefficacypast_select_column!], distinct: Boolean): Int!
  max: typeefficacypast_max_fields
  min: typeefficacypast_min_fields
  stddev: typeefficacypast_stddev_fields
  stddev_pop: typeefficacypast_stddev_pop_fields
  stddev_samp: typeefficacypast_stddev_samp_fields
  sum: typeefficacypast_sum_fields
  var_pop: typeefficacypast_var_pop_fields
  var_samp: typeefficacypast_var_samp_fields
  variance: typeefficacypast_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_typeefficacypast"
"""
input typeefficacypast_aggregate_order_by {
  avg: typeefficacypast_avg_order_by
  count: order_by
  max: typeefficacypast_max_order_by
  min: typeefficacypast_min_order_by
  stddev: typeefficacypast_stddev_order_by
  stddev_pop: typeefficacypast_stddev_pop_order_by
  stddev_samp: typeefficacypast_stddev_samp_order_by
  sum: typeefficacypast_sum_order_by
  var_pop: typeefficacypast_var_pop_order_by
  var_samp: typeefficacypast_var_samp_order_by
  variance: typeefficacypast_variance_order_by
}

"""aggregate avg on columns"""
type typeefficacypast_avg_fields {
  damage_factor: Float
  damage_type_id: Float
  generation_id: Float
  id: Float
  target_type_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_typeefficacypast"
"""
input typeefficacypast_avg_order_by {
  damage_factor: order_by
  damage_type_id: order_by
  generation_id: order_by
  id: order_by
  target_type_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_typeefficacypast".
All fields are combined with a logical 'AND'.
"""
input typeefficacypast_bool_exp {
  TypeByTargetTypeId: type_bool_exp
  _and: [typeefficacypast_bool_exp!]
  _not: typeefficacypast_bool_exp
  _or: [typeefficacypast_bool_exp!]
  damage_factor: Int_comparison_exp
  damage_type_id: Int_comparison_exp
  generation: generation_bool_exp
  generation_id: Int_comparison_exp
  id: Int_comparison_exp
  target_type_id: Int_comparison_exp
  type: type_bool_exp
}

"""aggregate max on columns"""
type typeefficacypast_max_fields {
  damage_factor: Int
  damage_type_id: Int
  generation_id: Int
  id: Int
  target_type_id: Int
}

"""
order by max() on columns of table "pokemon_v2_typeefficacypast"
"""
input typeefficacypast_max_order_by {
  damage_factor: order_by
  damage_type_id: order_by
  generation_id: order_by
  id: order_by
  target_type_id: order_by
}

"""aggregate min on columns"""
type typeefficacypast_min_fields {
  damage_factor: Int
  damage_type_id: Int
  generation_id: Int
  id: Int
  target_type_id: Int
}

"""
order by min() on columns of table "pokemon_v2_typeefficacypast"
"""
input typeefficacypast_min_order_by {
  damage_factor: order_by
  damage_type_id: order_by
  generation_id: order_by
  id: order_by
  target_type_id: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_typeefficacypast".
"""
input typeefficacypast_order_by {
  TypeByTargetTypeId: type_order_by
  damage_factor: order_by
  damage_type_id: order_by
  generation: generation_order_by
  generation_id: order_by
  id: order_by
  target_type_id: order_by
  type: type_order_by
}

"""
select columns of table "pokemon_v2_typeefficacypast"
"""
enum typeefficacypast_select_column {
  """column name"""
  damage_factor

  """column name"""
  damage_type_id

  """column name"""
  generation_id

  """column name"""
  id

  """column name"""
  target_type_id
}

"""aggregate stddev on columns"""
type typeefficacypast_stddev_fields {
  damage_factor: Float
  damage_type_id: Float
  generation_id: Float
  id: Float
  target_type_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_typeefficacypast"
"""
input typeefficacypast_stddev_order_by {
  damage_factor: order_by
  damage_type_id: order_by
  generation_id: order_by
  id: order_by
  target_type_id: order_by
}

"""aggregate stddev_pop on columns"""
type typeefficacypast_stddev_pop_fields {
  damage_factor: Float
  damage_type_id: Float
  generation_id: Float
  id: Float
  target_type_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_typeefficacypast"
"""
input typeefficacypast_stddev_pop_order_by {
  damage_factor: order_by
  damage_type_id: order_by
  generation_id: order_by
  id: order_by
  target_type_id: order_by
}

"""aggregate stddev_samp on columns"""
type typeefficacypast_stddev_samp_fields {
  damage_factor: Float
  damage_type_id: Float
  generation_id: Float
  id: Float
  target_type_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_typeefficacypast"
"""
input typeefficacypast_stddev_samp_order_by {
  damage_factor: order_by
  damage_type_id: order_by
  generation_id: order_by
  id: order_by
  target_type_id: order_by
}

"""aggregate sum on columns"""
type typeefficacypast_sum_fields {
  damage_factor: Int
  damage_type_id: Int
  generation_id: Int
  id: Int
  target_type_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_typeefficacypast"
"""
input typeefficacypast_sum_order_by {
  damage_factor: order_by
  damage_type_id: order_by
  generation_id: order_by
  id: order_by
  target_type_id: order_by
}

"""aggregate var_pop on columns"""
type typeefficacypast_var_pop_fields {
  damage_factor: Float
  damage_type_id: Float
  generation_id: Float
  id: Float
  target_type_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_typeefficacypast"
"""
input typeefficacypast_var_pop_order_by {
  damage_factor: order_by
  damage_type_id: order_by
  generation_id: order_by
  id: order_by
  target_type_id: order_by
}

"""aggregate var_samp on columns"""
type typeefficacypast_var_samp_fields {
  damage_factor: Float
  damage_type_id: Float
  generation_id: Float
  id: Float
  target_type_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_typeefficacypast"
"""
input typeefficacypast_var_samp_order_by {
  damage_factor: order_by
  damage_type_id: order_by
  generation_id: order_by
  id: order_by
  target_type_id: order_by
}

"""aggregate variance on columns"""
type typeefficacypast_variance_fields {
  damage_factor: Float
  damage_type_id: Float
  generation_id: Float
  id: Float
  target_type_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_typeefficacypast"
"""
input typeefficacypast_variance_order_by {
  damage_factor: order_by
  damage_type_id: order_by
  generation_id: order_by
  id: order_by
  target_type_id: order_by
}

"""
columns and relationships of "pokemon_v2_typegameindex"
"""
type typegameindex {
  game_index: Int!

  """An object relationship"""
  generation: generation
  generation_id: Int
  id: Int!

  """An object relationship"""
  type: type
  type_id: Int
}

"""
aggregated selection of "pokemon_v2_typegameindex"
"""
type typegameindex_aggregate {
  aggregate: typegameindex_aggregate_fields
  nodes: [typegameindex!]!
}

input typegameindex_aggregate_bool_exp {
  count: typegameindex_aggregate_bool_exp_count
}

input typegameindex_aggregate_bool_exp_count {
  arguments: [typegameindex_select_column!]
  distinct: Boolean
  filter: typegameindex_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_typegameindex"
"""
type typegameindex_aggregate_fields {
  avg: typegameindex_avg_fields
  count(columns: [typegameindex_select_column!], distinct: Boolean): Int!
  max: typegameindex_max_fields
  min: typegameindex_min_fields
  stddev: typegameindex_stddev_fields
  stddev_pop: typegameindex_stddev_pop_fields
  stddev_samp: typegameindex_stddev_samp_fields
  sum: typegameindex_sum_fields
  var_pop: typegameindex_var_pop_fields
  var_samp: typegameindex_var_samp_fields
  variance: typegameindex_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_typegameindex"
"""
input typegameindex_aggregate_order_by {
  avg: typegameindex_avg_order_by
  count: order_by
  max: typegameindex_max_order_by
  min: typegameindex_min_order_by
  stddev: typegameindex_stddev_order_by
  stddev_pop: typegameindex_stddev_pop_order_by
  stddev_samp: typegameindex_stddev_samp_order_by
  sum: typegameindex_sum_order_by
  var_pop: typegameindex_var_pop_order_by
  var_samp: typegameindex_var_samp_order_by
  variance: typegameindex_variance_order_by
}

"""aggregate avg on columns"""
type typegameindex_avg_fields {
  game_index: Float
  generation_id: Float
  id: Float
  type_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_typegameindex"
"""
input typegameindex_avg_order_by {
  game_index: order_by
  generation_id: order_by
  id: order_by
  type_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_typegameindex". All fields are combined with a logical 'AND'.
"""
input typegameindex_bool_exp {
  _and: [typegameindex_bool_exp!]
  _not: typegameindex_bool_exp
  _or: [typegameindex_bool_exp!]
  game_index: Int_comparison_exp
  generation: generation_bool_exp
  generation_id: Int_comparison_exp
  id: Int_comparison_exp
  type: type_bool_exp
  type_id: Int_comparison_exp
}

"""aggregate max on columns"""
type typegameindex_max_fields {
  game_index: Int
  generation_id: Int
  id: Int
  type_id: Int
}

"""
order by max() on columns of table "pokemon_v2_typegameindex"
"""
input typegameindex_max_order_by {
  game_index: order_by
  generation_id: order_by
  id: order_by
  type_id: order_by
}

"""aggregate min on columns"""
type typegameindex_min_fields {
  game_index: Int
  generation_id: Int
  id: Int
  type_id: Int
}

"""
order by min() on columns of table "pokemon_v2_typegameindex"
"""
input typegameindex_min_order_by {
  game_index: order_by
  generation_id: order_by
  id: order_by
  type_id: order_by
}

"""Ordering options when selecting data from "pokemon_v2_typegameindex"."""
input typegameindex_order_by {
  game_index: order_by
  generation: generation_order_by
  generation_id: order_by
  id: order_by
  type: type_order_by
  type_id: order_by
}

"""
select columns of table "pokemon_v2_typegameindex"
"""
enum typegameindex_select_column {
  """column name"""
  game_index

  """column name"""
  generation_id

  """column name"""
  id

  """column name"""
  type_id
}

"""aggregate stddev on columns"""
type typegameindex_stddev_fields {
  game_index: Float
  generation_id: Float
  id: Float
  type_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_typegameindex"
"""
input typegameindex_stddev_order_by {
  game_index: order_by
  generation_id: order_by
  id: order_by
  type_id: order_by
}

"""aggregate stddev_pop on columns"""
type typegameindex_stddev_pop_fields {
  game_index: Float
  generation_id: Float
  id: Float
  type_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_typegameindex"
"""
input typegameindex_stddev_pop_order_by {
  game_index: order_by
  generation_id: order_by
  id: order_by
  type_id: order_by
}

"""aggregate stddev_samp on columns"""
type typegameindex_stddev_samp_fields {
  game_index: Float
  generation_id: Float
  id: Float
  type_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_typegameindex"
"""
input typegameindex_stddev_samp_order_by {
  game_index: order_by
  generation_id: order_by
  id: order_by
  type_id: order_by
}

"""aggregate sum on columns"""
type typegameindex_sum_fields {
  game_index: Int
  generation_id: Int
  id: Int
  type_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_typegameindex"
"""
input typegameindex_sum_order_by {
  game_index: order_by
  generation_id: order_by
  id: order_by
  type_id: order_by
}

"""aggregate var_pop on columns"""
type typegameindex_var_pop_fields {
  game_index: Float
  generation_id: Float
  id: Float
  type_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_typegameindex"
"""
input typegameindex_var_pop_order_by {
  game_index: order_by
  generation_id: order_by
  id: order_by
  type_id: order_by
}

"""aggregate var_samp on columns"""
type typegameindex_var_samp_fields {
  game_index: Float
  generation_id: Float
  id: Float
  type_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_typegameindex"
"""
input typegameindex_var_samp_order_by {
  game_index: order_by
  generation_id: order_by
  id: order_by
  type_id: order_by
}

"""aggregate variance on columns"""
type typegameindex_variance_fields {
  game_index: Float
  generation_id: Float
  id: Float
  type_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_typegameindex"
"""
input typegameindex_variance_order_by {
  game_index: order_by
  generation_id: order_by
  id: order_by
  type_id: order_by
}

"""
columns and relationships of "pokemon_v2_typename"
"""
type typename {
  id: Int!

  """An object relationship"""
  language: language
  language_id: Int
  name: String!

  """An object relationship"""
  type: type
  type_id: Int
}

"""
aggregated selection of "pokemon_v2_typename"
"""
type typename_aggregate {
  aggregate: typename_aggregate_fields
  nodes: [typename!]!
}

input typename_aggregate_bool_exp {
  count: typename_aggregate_bool_exp_count
}

input typename_aggregate_bool_exp_count {
  arguments: [typename_select_column!]
  distinct: Boolean
  filter: typename_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_typename"
"""
type typename_aggregate_fields {
  avg: typename_avg_fields
  count(columns: [typename_select_column!], distinct: Boolean): Int!
  max: typename_max_fields
  min: typename_min_fields
  stddev: typename_stddev_fields
  stddev_pop: typename_stddev_pop_fields
  stddev_samp: typename_stddev_samp_fields
  sum: typename_sum_fields
  var_pop: typename_var_pop_fields
  var_samp: typename_var_samp_fields
  variance: typename_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_typename"
"""
input typename_aggregate_order_by {
  avg: typename_avg_order_by
  count: order_by
  max: typename_max_order_by
  min: typename_min_order_by
  stddev: typename_stddev_order_by
  stddev_pop: typename_stddev_pop_order_by
  stddev_samp: typename_stddev_samp_order_by
  sum: typename_sum_order_by
  var_pop: typename_var_pop_order_by
  var_samp: typename_var_samp_order_by
  variance: typename_variance_order_by
}

"""aggregate avg on columns"""
type typename_avg_fields {
  id: Float
  language_id: Float
  type_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_typename"
"""
input typename_avg_order_by {
  id: order_by
  language_id: order_by
  type_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_typename". All fields are combined with a logical 'AND'.
"""
input typename_bool_exp {
  _and: [typename_bool_exp!]
  _not: typename_bool_exp
  _or: [typename_bool_exp!]
  id: Int_comparison_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
  name: String_comparison_exp
  type: type_bool_exp
  type_id: Int_comparison_exp
}

"""aggregate max on columns"""
type typename_max_fields {
  id: Int
  language_id: Int
  name: String
  type_id: Int
}

"""
order by max() on columns of table "pokemon_v2_typename"
"""
input typename_max_order_by {
  id: order_by
  language_id: order_by
  name: order_by
  type_id: order_by
}

"""aggregate min on columns"""
type typename_min_fields {
  id: Int
  language_id: Int
  name: String
  type_id: Int
}

"""
order by min() on columns of table "pokemon_v2_typename"
"""
input typename_min_order_by {
  id: order_by
  language_id: order_by
  name: order_by
  type_id: order_by
}

"""Ordering options when selecting data from "pokemon_v2_typename"."""
input typename_order_by {
  id: order_by
  language: language_order_by
  language_id: order_by
  name: order_by
  type: type_order_by
  type_id: order_by
}

"""
select columns of table "pokemon_v2_typename"
"""
enum typename_select_column {
  """column name"""
  id

  """column name"""
  language_id

  """column name"""
  name

  """column name"""
  type_id
}

"""aggregate stddev on columns"""
type typename_stddev_fields {
  id: Float
  language_id: Float
  type_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_typename"
"""
input typename_stddev_order_by {
  id: order_by
  language_id: order_by
  type_id: order_by
}

"""aggregate stddev_pop on columns"""
type typename_stddev_pop_fields {
  id: Float
  language_id: Float
  type_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_typename"
"""
input typename_stddev_pop_order_by {
  id: order_by
  language_id: order_by
  type_id: order_by
}

"""aggregate stddev_samp on columns"""
type typename_stddev_samp_fields {
  id: Float
  language_id: Float
  type_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_typename"
"""
input typename_stddev_samp_order_by {
  id: order_by
  language_id: order_by
  type_id: order_by
}

"""aggregate sum on columns"""
type typename_sum_fields {
  id: Int
  language_id: Int
  type_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_typename"
"""
input typename_sum_order_by {
  id: order_by
  language_id: order_by
  type_id: order_by
}

"""aggregate var_pop on columns"""
type typename_var_pop_fields {
  id: Float
  language_id: Float
  type_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_typename"
"""
input typename_var_pop_order_by {
  id: order_by
  language_id: order_by
  type_id: order_by
}

"""aggregate var_samp on columns"""
type typename_var_samp_fields {
  id: Float
  language_id: Float
  type_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_typename"
"""
input typename_var_samp_order_by {
  id: order_by
  language_id: order_by
  type_id: order_by
}

"""aggregate variance on columns"""
type typename_variance_fields {
  id: Float
  language_id: Float
  type_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_typename"
"""
input typename_variance_order_by {
  id: order_by
  language_id: order_by
  type_id: order_by
}

"""
columns and relationships of "pokemon_v2_version"
"""
type version {
  """An array relationship"""
  encounters(
    """distinct select on columns"""
    distinct_on: [encounter_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [encounter_order_by!]

    """filter the rows returned"""
    where: encounter_bool_exp
  ): [encounter!]!

  """An aggregate relationship"""
  encounters_aggregate(
    """distinct select on columns"""
    distinct_on: [encounter_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [encounter_order_by!]

    """filter the rows returned"""
    where: encounter_bool_exp
  ): encounter_aggregate!
  id: Int!

  """An array relationship"""
  locationareaencounterrates(
    """distinct select on columns"""
    distinct_on: [locationareaencounterrate_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [locationareaencounterrate_order_by!]

    """filter the rows returned"""
    where: locationareaencounterrate_bool_exp
  ): [locationareaencounterrate!]!

  """An aggregate relationship"""
  locationareaencounterrates_aggregate(
    """distinct select on columns"""
    distinct_on: [locationareaencounterrate_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [locationareaencounterrate_order_by!]

    """filter the rows returned"""
    where: locationareaencounterrate_bool_exp
  ): locationareaencounterrate_aggregate!
  name: String!

  """An array relationship"""
  pokemongameindices(
    """distinct select on columns"""
    distinct_on: [pokemongameindex_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemongameindex_order_by!]

    """filter the rows returned"""
    where: pokemongameindex_bool_exp
  ): [pokemongameindex!]!

  """An aggregate relationship"""
  pokemongameindices_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemongameindex_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemongameindex_order_by!]

    """filter the rows returned"""
    where: pokemongameindex_bool_exp
  ): pokemongameindex_aggregate!

  """An array relationship"""
  pokemonitems(
    """distinct select on columns"""
    distinct_on: [pokemonitem_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonitem_order_by!]

    """filter the rows returned"""
    where: pokemonitem_bool_exp
  ): [pokemonitem!]!

  """An aggregate relationship"""
  pokemonitems_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonitem_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonitem_order_by!]

    """filter the rows returned"""
    where: pokemonitem_bool_exp
  ): pokemonitem_aggregate!

  """An array relationship"""
  pokemonspeciesflavortexts(
    """distinct select on columns"""
    distinct_on: [pokemonspeciesflavortext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonspeciesflavortext_order_by!]

    """filter the rows returned"""
    where: pokemonspeciesflavortext_bool_exp
  ): [pokemonspeciesflavortext!]!

  """An aggregate relationship"""
  pokemonspeciesflavortexts_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonspeciesflavortext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonspeciesflavortext_order_by!]

    """filter the rows returned"""
    where: pokemonspeciesflavortext_bool_exp
  ): pokemonspeciesflavortext_aggregate!
  version_group_id: Int

  """An object relationship"""
  versiongroup: versiongroup

  """An array relationship"""
  versionnames(
    """distinct select on columns"""
    distinct_on: [versionname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [versionname_order_by!]

    """filter the rows returned"""
    where: versionname_bool_exp
  ): [versionname!]!

  """An aggregate relationship"""
  versionnames_aggregate(
    """distinct select on columns"""
    distinct_on: [versionname_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [versionname_order_by!]

    """filter the rows returned"""
    where: versionname_bool_exp
  ): versionname_aggregate!
}

"""
aggregated selection of "pokemon_v2_version"
"""
type version_aggregate {
  aggregate: version_aggregate_fields
  nodes: [version!]!
}

input version_aggregate_bool_exp {
  count: version_aggregate_bool_exp_count
}

input version_aggregate_bool_exp_count {
  arguments: [version_select_column!]
  distinct: Boolean
  filter: version_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_version"
"""
type version_aggregate_fields {
  avg: version_avg_fields
  count(columns: [version_select_column!], distinct: Boolean): Int!
  max: version_max_fields
  min: version_min_fields
  stddev: version_stddev_fields
  stddev_pop: version_stddev_pop_fields
  stddev_samp: version_stddev_samp_fields
  sum: version_sum_fields
  var_pop: version_var_pop_fields
  var_samp: version_var_samp_fields
  variance: version_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_version"
"""
input version_aggregate_order_by {
  avg: version_avg_order_by
  count: order_by
  max: version_max_order_by
  min: version_min_order_by
  stddev: version_stddev_order_by
  stddev_pop: version_stddev_pop_order_by
  stddev_samp: version_stddev_samp_order_by
  sum: version_sum_order_by
  var_pop: version_var_pop_order_by
  var_samp: version_var_samp_order_by
  variance: version_variance_order_by
}

"""aggregate avg on columns"""
type version_avg_fields {
  id: Float
  version_group_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_version"
"""
input version_avg_order_by {
  id: order_by
  version_group_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_version". All fields are combined with a logical 'AND'.
"""
input version_bool_exp {
  _and: [version_bool_exp!]
  _not: version_bool_exp
  _or: [version_bool_exp!]
  encounters: encounter_bool_exp
  encounters_aggregate: encounter_aggregate_bool_exp
  id: Int_comparison_exp
  locationareaencounterrates: locationareaencounterrate_bool_exp
  locationareaencounterrates_aggregate: locationareaencounterrate_aggregate_bool_exp
  name: String_comparison_exp
  pokemongameindices: pokemongameindex_bool_exp
  pokemongameindices_aggregate: pokemongameindex_aggregate_bool_exp
  pokemonitems: pokemonitem_bool_exp
  pokemonitems_aggregate: pokemonitem_aggregate_bool_exp
  pokemonspeciesflavortexts: pokemonspeciesflavortext_bool_exp
  pokemonspeciesflavortexts_aggregate: pokemonspeciesflavortext_aggregate_bool_exp
  version_group_id: Int_comparison_exp
  versiongroup: versiongroup_bool_exp
  versionnames: versionname_bool_exp
  versionnames_aggregate: versionname_aggregate_bool_exp
}

"""aggregate max on columns"""
type version_max_fields {
  id: Int
  name: String
  version_group_id: Int
}

"""
order by max() on columns of table "pokemon_v2_version"
"""
input version_max_order_by {
  id: order_by
  name: order_by
  version_group_id: order_by
}

"""aggregate min on columns"""
type version_min_fields {
  id: Int
  name: String
  version_group_id: Int
}

"""
order by min() on columns of table "pokemon_v2_version"
"""
input version_min_order_by {
  id: order_by
  name: order_by
  version_group_id: order_by
}

"""Ordering options when selecting data from "pokemon_v2_version"."""
input version_order_by {
  encounters_aggregate: encounter_aggregate_order_by
  id: order_by
  locationareaencounterrates_aggregate: locationareaencounterrate_aggregate_order_by
  name: order_by
  pokemongameindices_aggregate: pokemongameindex_aggregate_order_by
  pokemonitems_aggregate: pokemonitem_aggregate_order_by
  pokemonspeciesflavortexts_aggregate: pokemonspeciesflavortext_aggregate_order_by
  version_group_id: order_by
  versiongroup: versiongroup_order_by
  versionnames_aggregate: versionname_aggregate_order_by
}

"""
select columns of table "pokemon_v2_version"
"""
enum version_select_column {
  """column name"""
  id

  """column name"""
  name

  """column name"""
  version_group_id
}

"""aggregate stddev on columns"""
type version_stddev_fields {
  id: Float
  version_group_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_version"
"""
input version_stddev_order_by {
  id: order_by
  version_group_id: order_by
}

"""aggregate stddev_pop on columns"""
type version_stddev_pop_fields {
  id: Float
  version_group_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_version"
"""
input version_stddev_pop_order_by {
  id: order_by
  version_group_id: order_by
}

"""aggregate stddev_samp on columns"""
type version_stddev_samp_fields {
  id: Float
  version_group_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_version"
"""
input version_stddev_samp_order_by {
  id: order_by
  version_group_id: order_by
}

"""aggregate sum on columns"""
type version_sum_fields {
  id: Int
  version_group_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_version"
"""
input version_sum_order_by {
  id: order_by
  version_group_id: order_by
}

"""aggregate var_pop on columns"""
type version_var_pop_fields {
  id: Float
  version_group_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_version"
"""
input version_var_pop_order_by {
  id: order_by
  version_group_id: order_by
}

"""aggregate var_samp on columns"""
type version_var_samp_fields {
  id: Float
  version_group_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_version"
"""
input version_var_samp_order_by {
  id: order_by
  version_group_id: order_by
}

"""aggregate variance on columns"""
type version_variance_fields {
  id: Float
  version_group_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_version"
"""
input version_variance_order_by {
  id: order_by
  version_group_id: order_by
}

"""
columns and relationships of "pokemon_v2_versiongroup"
"""
type versiongroup {
  """An array relationship"""
  abilitychanges(
    """distinct select on columns"""
    distinct_on: [abilitychange_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [abilitychange_order_by!]

    """filter the rows returned"""
    where: abilitychange_bool_exp
  ): [abilitychange!]!

  """An aggregate relationship"""
  abilitychanges_aggregate(
    """distinct select on columns"""
    distinct_on: [abilitychange_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [abilitychange_order_by!]

    """filter the rows returned"""
    where: abilitychange_bool_exp
  ): abilitychange_aggregate!

  """An array relationship"""
  abilityflavortexts(
    """distinct select on columns"""
    distinct_on: [abilityflavortext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [abilityflavortext_order_by!]

    """filter the rows returned"""
    where: abilityflavortext_bool_exp
  ): [abilityflavortext!]!

  """An aggregate relationship"""
  abilityflavortexts_aggregate(
    """distinct select on columns"""
    distinct_on: [abilityflavortext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [abilityflavortext_order_by!]

    """filter the rows returned"""
    where: abilityflavortext_bool_exp
  ): abilityflavortext_aggregate!

  """An array relationship"""
  encounterslots(
    """distinct select on columns"""
    distinct_on: [encounterslot_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [encounterslot_order_by!]

    """filter the rows returned"""
    where: encounterslot_bool_exp
  ): [encounterslot!]!

  """An aggregate relationship"""
  encounterslots_aggregate(
    """distinct select on columns"""
    distinct_on: [encounterslot_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [encounterslot_order_by!]

    """filter the rows returned"""
    where: encounterslot_bool_exp
  ): encounterslot_aggregate!

  """An object relationship"""
  generation: generation
  generation_id: Int
  id: Int!

  """An array relationship"""
  itemflavortexts(
    """distinct select on columns"""
    distinct_on: [itemflavortext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemflavortext_order_by!]

    """filter the rows returned"""
    where: itemflavortext_bool_exp
  ): [itemflavortext!]!

  """An aggregate relationship"""
  itemflavortexts_aggregate(
    """distinct select on columns"""
    distinct_on: [itemflavortext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [itemflavortext_order_by!]

    """filter the rows returned"""
    where: itemflavortext_bool_exp
  ): itemflavortext_aggregate!

  """An array relationship"""
  machines(
    """distinct select on columns"""
    distinct_on: [machine_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [machine_order_by!]

    """filter the rows returned"""
    where: machine_bool_exp
  ): [machine!]!

  """An aggregate relationship"""
  machines_aggregate(
    """distinct select on columns"""
    distinct_on: [machine_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [machine_order_by!]

    """filter the rows returned"""
    where: machine_bool_exp
  ): machine_aggregate!

  """An array relationship"""
  movechanges(
    """distinct select on columns"""
    distinct_on: [movechange_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movechange_order_by!]

    """filter the rows returned"""
    where: movechange_bool_exp
  ): [movechange!]!

  """An aggregate relationship"""
  movechanges_aggregate(
    """distinct select on columns"""
    distinct_on: [movechange_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [movechange_order_by!]

    """filter the rows returned"""
    where: movechange_bool_exp
  ): movechange_aggregate!

  """An array relationship"""
  moveeffectchanges(
    """distinct select on columns"""
    distinct_on: [moveeffectchange_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [moveeffectchange_order_by!]

    """filter the rows returned"""
    where: moveeffectchange_bool_exp
  ): [moveeffectchange!]!

  """An aggregate relationship"""
  moveeffectchanges_aggregate(
    """distinct select on columns"""
    distinct_on: [moveeffectchange_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [moveeffectchange_order_by!]

    """filter the rows returned"""
    where: moveeffectchange_bool_exp
  ): moveeffectchange_aggregate!

  """An array relationship"""
  moveflavortexts(
    """distinct select on columns"""
    distinct_on: [moveflavortext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [moveflavortext_order_by!]

    """filter the rows returned"""
    where: moveflavortext_bool_exp
  ): [moveflavortext!]!

  """An aggregate relationship"""
  moveflavortexts_aggregate(
    """distinct select on columns"""
    distinct_on: [moveflavortext_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [moveflavortext_order_by!]

    """filter the rows returned"""
    where: moveflavortext_bool_exp
  ): moveflavortext_aggregate!
  name: String!
  order: Int

  """An array relationship"""
  pokedexversiongroups(
    """distinct select on columns"""
    distinct_on: [pokedexversiongroup_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokedexversiongroup_order_by!]

    """filter the rows returned"""
    where: pokedexversiongroup_bool_exp
  ): [pokedexversiongroup!]!

  """An aggregate relationship"""
  pokedexversiongroups_aggregate(
    """distinct select on columns"""
    distinct_on: [pokedexversiongroup_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokedexversiongroup_order_by!]

    """filter the rows returned"""
    where: pokedexversiongroup_bool_exp
  ): pokedexversiongroup_aggregate!

  """An array relationship"""
  pokemonforms(
    """distinct select on columns"""
    distinct_on: [pokemonform_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonform_order_by!]

    """filter the rows returned"""
    where: pokemonform_bool_exp
  ): [pokemonform!]!

  """An aggregate relationship"""
  pokemonforms_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonform_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonform_order_by!]

    """filter the rows returned"""
    where: pokemonform_bool_exp
  ): pokemonform_aggregate!

  """An array relationship"""
  pokemonmoves(
    """distinct select on columns"""
    distinct_on: [pokemonmove_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonmove_order_by!]

    """filter the rows returned"""
    where: pokemonmove_bool_exp
  ): [pokemonmove!]!

  """An aggregate relationship"""
  pokemonmoves_aggregate(
    """distinct select on columns"""
    distinct_on: [pokemonmove_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [pokemonmove_order_by!]

    """filter the rows returned"""
    where: pokemonmove_bool_exp
  ): pokemonmove_aggregate!

  """An array relationship"""
  versiongroupmovelearnmethods(
    """distinct select on columns"""
    distinct_on: [versiongroupmovelearnmethod_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [versiongroupmovelearnmethod_order_by!]

    """filter the rows returned"""
    where: versiongroupmovelearnmethod_bool_exp
  ): [versiongroupmovelearnmethod!]!

  """An aggregate relationship"""
  versiongroupmovelearnmethods_aggregate(
    """distinct select on columns"""
    distinct_on: [versiongroupmovelearnmethod_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [versiongroupmovelearnmethod_order_by!]

    """filter the rows returned"""
    where: versiongroupmovelearnmethod_bool_exp
  ): versiongroupmovelearnmethod_aggregate!

  """An array relationship"""
  versiongroupregions(
    """distinct select on columns"""
    distinct_on: [versiongroupregion_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [versiongroupregion_order_by!]

    """filter the rows returned"""
    where: versiongroupregion_bool_exp
  ): [versiongroupregion!]!

  """An aggregate relationship"""
  versiongroupregions_aggregate(
    """distinct select on columns"""
    distinct_on: [versiongroupregion_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [versiongroupregion_order_by!]

    """filter the rows returned"""
    where: versiongroupregion_bool_exp
  ): versiongroupregion_aggregate!

  """An array relationship"""
  versions(
    """distinct select on columns"""
    distinct_on: [version_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [version_order_by!]

    """filter the rows returned"""
    where: version_bool_exp
  ): [version!]!

  """An aggregate relationship"""
  versions_aggregate(
    """distinct select on columns"""
    distinct_on: [version_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [version_order_by!]

    """filter the rows returned"""
    where: version_bool_exp
  ): version_aggregate!
}

"""
aggregated selection of "pokemon_v2_versiongroup"
"""
type versiongroup_aggregate {
  aggregate: versiongroup_aggregate_fields
  nodes: [versiongroup!]!
}

input versiongroup_aggregate_bool_exp {
  count: versiongroup_aggregate_bool_exp_count
}

input versiongroup_aggregate_bool_exp_count {
  arguments: [versiongroup_select_column!]
  distinct: Boolean
  filter: versiongroup_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_versiongroup"
"""
type versiongroup_aggregate_fields {
  avg: versiongroup_avg_fields
  count(columns: [versiongroup_select_column!], distinct: Boolean): Int!
  max: versiongroup_max_fields
  min: versiongroup_min_fields
  stddev: versiongroup_stddev_fields
  stddev_pop: versiongroup_stddev_pop_fields
  stddev_samp: versiongroup_stddev_samp_fields
  sum: versiongroup_sum_fields
  var_pop: versiongroup_var_pop_fields
  var_samp: versiongroup_var_samp_fields
  variance: versiongroup_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_versiongroup"
"""
input versiongroup_aggregate_order_by {
  avg: versiongroup_avg_order_by
  count: order_by
  max: versiongroup_max_order_by
  min: versiongroup_min_order_by
  stddev: versiongroup_stddev_order_by
  stddev_pop: versiongroup_stddev_pop_order_by
  stddev_samp: versiongroup_stddev_samp_order_by
  sum: versiongroup_sum_order_by
  var_pop: versiongroup_var_pop_order_by
  var_samp: versiongroup_var_samp_order_by
  variance: versiongroup_variance_order_by
}

"""aggregate avg on columns"""
type versiongroup_avg_fields {
  generation_id: Float
  id: Float
  order: Float
}

"""
order by avg() on columns of table "pokemon_v2_versiongroup"
"""
input versiongroup_avg_order_by {
  generation_id: order_by
  id: order_by
  order: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_versiongroup". All fields are combined with a logical 'AND'.
"""
input versiongroup_bool_exp {
  _and: [versiongroup_bool_exp!]
  _not: versiongroup_bool_exp
  _or: [versiongroup_bool_exp!]
  abilitychanges: abilitychange_bool_exp
  abilitychanges_aggregate: abilitychange_aggregate_bool_exp
  abilityflavortexts: abilityflavortext_bool_exp
  abilityflavortexts_aggregate: abilityflavortext_aggregate_bool_exp
  encounterslots: encounterslot_bool_exp
  encounterslots_aggregate: encounterslot_aggregate_bool_exp
  generation: generation_bool_exp
  generation_id: Int_comparison_exp
  id: Int_comparison_exp
  itemflavortexts: itemflavortext_bool_exp
  itemflavortexts_aggregate: itemflavortext_aggregate_bool_exp
  machines: machine_bool_exp
  machines_aggregate: machine_aggregate_bool_exp
  movechanges: movechange_bool_exp
  movechanges_aggregate: movechange_aggregate_bool_exp
  moveeffectchanges: moveeffectchange_bool_exp
  moveeffectchanges_aggregate: moveeffectchange_aggregate_bool_exp
  moveflavortexts: moveflavortext_bool_exp
  moveflavortexts_aggregate: moveflavortext_aggregate_bool_exp
  name: String_comparison_exp
  order: Int_comparison_exp
  pokedexversiongroups: pokedexversiongroup_bool_exp
  pokedexversiongroups_aggregate: pokedexversiongroup_aggregate_bool_exp
  pokemonforms: pokemonform_bool_exp
  pokemonforms_aggregate: pokemonform_aggregate_bool_exp
  pokemonmoves: pokemonmove_bool_exp
  pokemonmoves_aggregate: pokemonmove_aggregate_bool_exp
  versiongroupmovelearnmethods: versiongroupmovelearnmethod_bool_exp
  versiongroupmovelearnmethods_aggregate: versiongroupmovelearnmethod_aggregate_bool_exp
  versiongroupregions: versiongroupregion_bool_exp
  versiongroupregions_aggregate: versiongroupregion_aggregate_bool_exp
  versions: version_bool_exp
  versions_aggregate: version_aggregate_bool_exp
}

"""aggregate max on columns"""
type versiongroup_max_fields {
  generation_id: Int
  id: Int
  name: String
  order: Int
}

"""
order by max() on columns of table "pokemon_v2_versiongroup"
"""
input versiongroup_max_order_by {
  generation_id: order_by
  id: order_by
  name: order_by
  order: order_by
}

"""aggregate min on columns"""
type versiongroup_min_fields {
  generation_id: Int
  id: Int
  name: String
  order: Int
}

"""
order by min() on columns of table "pokemon_v2_versiongroup"
"""
input versiongroup_min_order_by {
  generation_id: order_by
  id: order_by
  name: order_by
  order: order_by
}

"""Ordering options when selecting data from "pokemon_v2_versiongroup"."""
input versiongroup_order_by {
  abilitychanges_aggregate: abilitychange_aggregate_order_by
  abilityflavortexts_aggregate: abilityflavortext_aggregate_order_by
  encounterslots_aggregate: encounterslot_aggregate_order_by
  generation: generation_order_by
  generation_id: order_by
  id: order_by
  itemflavortexts_aggregate: itemflavortext_aggregate_order_by
  machines_aggregate: machine_aggregate_order_by
  movechanges_aggregate: movechange_aggregate_order_by
  moveeffectchanges_aggregate: moveeffectchange_aggregate_order_by
  moveflavortexts_aggregate: moveflavortext_aggregate_order_by
  name: order_by
  order: order_by
  pokedexversiongroups_aggregate: pokedexversiongroup_aggregate_order_by
  pokemonforms_aggregate: pokemonform_aggregate_order_by
  pokemonmoves_aggregate: pokemonmove_aggregate_order_by
  versiongroupmovelearnmethods_aggregate: versiongroupmovelearnmethod_aggregate_order_by
  versiongroupregions_aggregate: versiongroupregion_aggregate_order_by
  versions_aggregate: version_aggregate_order_by
}

"""
select columns of table "pokemon_v2_versiongroup"
"""
enum versiongroup_select_column {
  """column name"""
  generation_id

  """column name"""
  id

  """column name"""
  name

  """column name"""
  order
}

"""aggregate stddev on columns"""
type versiongroup_stddev_fields {
  generation_id: Float
  id: Float
  order: Float
}

"""
order by stddev() on columns of table "pokemon_v2_versiongroup"
"""
input versiongroup_stddev_order_by {
  generation_id: order_by
  id: order_by
  order: order_by
}

"""aggregate stddev_pop on columns"""
type versiongroup_stddev_pop_fields {
  generation_id: Float
  id: Float
  order: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_versiongroup"
"""
input versiongroup_stddev_pop_order_by {
  generation_id: order_by
  id: order_by
  order: order_by
}

"""aggregate stddev_samp on columns"""
type versiongroup_stddev_samp_fields {
  generation_id: Float
  id: Float
  order: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_versiongroup"
"""
input versiongroup_stddev_samp_order_by {
  generation_id: order_by
  id: order_by
  order: order_by
}

"""aggregate sum on columns"""
type versiongroup_sum_fields {
  generation_id: Int
  id: Int
  order: Int
}

"""
order by sum() on columns of table "pokemon_v2_versiongroup"
"""
input versiongroup_sum_order_by {
  generation_id: order_by
  id: order_by
  order: order_by
}

"""aggregate var_pop on columns"""
type versiongroup_var_pop_fields {
  generation_id: Float
  id: Float
  order: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_versiongroup"
"""
input versiongroup_var_pop_order_by {
  generation_id: order_by
  id: order_by
  order: order_by
}

"""aggregate var_samp on columns"""
type versiongroup_var_samp_fields {
  generation_id: Float
  id: Float
  order: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_versiongroup"
"""
input versiongroup_var_samp_order_by {
  generation_id: order_by
  id: order_by
  order: order_by
}

"""aggregate variance on columns"""
type versiongroup_variance_fields {
  generation_id: Float
  id: Float
  order: Float
}

"""
order by variance() on columns of table "pokemon_v2_versiongroup"
"""
input versiongroup_variance_order_by {
  generation_id: order_by
  id: order_by
  order: order_by
}

"""
columns and relationships of "pokemon_v2_versiongroupmovelearnmethod"
"""
type versiongroupmovelearnmethod {
  id: Int!
  move_learn_method_id: Int

  """An object relationship"""
  movelearnmethod: movelearnmethod
  version_group_id: Int

  """An object relationship"""
  versiongroup: versiongroup
}

"""
aggregated selection of "pokemon_v2_versiongroupmovelearnmethod"
"""
type versiongroupmovelearnmethod_aggregate {
  aggregate: versiongroupmovelearnmethod_aggregate_fields
  nodes: [versiongroupmovelearnmethod!]!
}

input versiongroupmovelearnmethod_aggregate_bool_exp {
  count: versiongroupmovelearnmethod_aggregate_bool_exp_count
}

input versiongroupmovelearnmethod_aggregate_bool_exp_count {
  arguments: [versiongroupmovelearnmethod_select_column!]
  distinct: Boolean
  filter: versiongroupmovelearnmethod_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_versiongroupmovelearnmethod"
"""
type versiongroupmovelearnmethod_aggregate_fields {
  avg: versiongroupmovelearnmethod_avg_fields
  count(columns: [versiongroupmovelearnmethod_select_column!], distinct: Boolean): Int!
  max: versiongroupmovelearnmethod_max_fields
  min: versiongroupmovelearnmethod_min_fields
  stddev: versiongroupmovelearnmethod_stddev_fields
  stddev_pop: versiongroupmovelearnmethod_stddev_pop_fields
  stddev_samp: versiongroupmovelearnmethod_stddev_samp_fields
  sum: versiongroupmovelearnmethod_sum_fields
  var_pop: versiongroupmovelearnmethod_var_pop_fields
  var_samp: versiongroupmovelearnmethod_var_samp_fields
  variance: versiongroupmovelearnmethod_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_versiongroupmovelearnmethod"
"""
input versiongroupmovelearnmethod_aggregate_order_by {
  avg: versiongroupmovelearnmethod_avg_order_by
  count: order_by
  max: versiongroupmovelearnmethod_max_order_by
  min: versiongroupmovelearnmethod_min_order_by
  stddev: versiongroupmovelearnmethod_stddev_order_by
  stddev_pop: versiongroupmovelearnmethod_stddev_pop_order_by
  stddev_samp: versiongroupmovelearnmethod_stddev_samp_order_by
  sum: versiongroupmovelearnmethod_sum_order_by
  var_pop: versiongroupmovelearnmethod_var_pop_order_by
  var_samp: versiongroupmovelearnmethod_var_samp_order_by
  variance: versiongroupmovelearnmethod_variance_order_by
}

"""aggregate avg on columns"""
type versiongroupmovelearnmethod_avg_fields {
  id: Float
  move_learn_method_id: Float
  version_group_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_versiongroupmovelearnmethod"
"""
input versiongroupmovelearnmethod_avg_order_by {
  id: order_by
  move_learn_method_id: order_by
  version_group_id: order_by
}

"""
Boolean expression to filter rows from the table
"pokemon_v2_versiongroupmovelearnmethod". All fields are combined with a logical 'AND'.
"""
input versiongroupmovelearnmethod_bool_exp {
  _and: [versiongroupmovelearnmethod_bool_exp!]
  _not: versiongroupmovelearnmethod_bool_exp
  _or: [versiongroupmovelearnmethod_bool_exp!]
  id: Int_comparison_exp
  move_learn_method_id: Int_comparison_exp
  movelearnmethod: movelearnmethod_bool_exp
  version_group_id: Int_comparison_exp
  versiongroup: versiongroup_bool_exp
}

"""aggregate max on columns"""
type versiongroupmovelearnmethod_max_fields {
  id: Int
  move_learn_method_id: Int
  version_group_id: Int
}

"""
order by max() on columns of table "pokemon_v2_versiongroupmovelearnmethod"
"""
input versiongroupmovelearnmethod_max_order_by {
  id: order_by
  move_learn_method_id: order_by
  version_group_id: order_by
}

"""aggregate min on columns"""
type versiongroupmovelearnmethod_min_fields {
  id: Int
  move_learn_method_id: Int
  version_group_id: Int
}

"""
order by min() on columns of table "pokemon_v2_versiongroupmovelearnmethod"
"""
input versiongroupmovelearnmethod_min_order_by {
  id: order_by
  move_learn_method_id: order_by
  version_group_id: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_versiongroupmovelearnmethod".
"""
input versiongroupmovelearnmethod_order_by {
  id: order_by
  move_learn_method_id: order_by
  movelearnmethod: movelearnmethod_order_by
  version_group_id: order_by
  versiongroup: versiongroup_order_by
}

"""
select columns of table "pokemon_v2_versiongroupmovelearnmethod"
"""
enum versiongroupmovelearnmethod_select_column {
  """column name"""
  id

  """column name"""
  move_learn_method_id

  """column name"""
  version_group_id
}

"""aggregate stddev on columns"""
type versiongroupmovelearnmethod_stddev_fields {
  id: Float
  move_learn_method_id: Float
  version_group_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_versiongroupmovelearnmethod"
"""
input versiongroupmovelearnmethod_stddev_order_by {
  id: order_by
  move_learn_method_id: order_by
  version_group_id: order_by
}

"""aggregate stddev_pop on columns"""
type versiongroupmovelearnmethod_stddev_pop_fields {
  id: Float
  move_learn_method_id: Float
  version_group_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_versiongroupmovelearnmethod"
"""
input versiongroupmovelearnmethod_stddev_pop_order_by {
  id: order_by
  move_learn_method_id: order_by
  version_group_id: order_by
}

"""aggregate stddev_samp on columns"""
type versiongroupmovelearnmethod_stddev_samp_fields {
  id: Float
  move_learn_method_id: Float
  version_group_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_versiongroupmovelearnmethod"
"""
input versiongroupmovelearnmethod_stddev_samp_order_by {
  id: order_by
  move_learn_method_id: order_by
  version_group_id: order_by
}

"""aggregate sum on columns"""
type versiongroupmovelearnmethod_sum_fields {
  id: Int
  move_learn_method_id: Int
  version_group_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_versiongroupmovelearnmethod"
"""
input versiongroupmovelearnmethod_sum_order_by {
  id: order_by
  move_learn_method_id: order_by
  version_group_id: order_by
}

"""aggregate var_pop on columns"""
type versiongroupmovelearnmethod_var_pop_fields {
  id: Float
  move_learn_method_id: Float
  version_group_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_versiongroupmovelearnmethod"
"""
input versiongroupmovelearnmethod_var_pop_order_by {
  id: order_by
  move_learn_method_id: order_by
  version_group_id: order_by
}

"""aggregate var_samp on columns"""
type versiongroupmovelearnmethod_var_samp_fields {
  id: Float
  move_learn_method_id: Float
  version_group_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_versiongroupmovelearnmethod"
"""
input versiongroupmovelearnmethod_var_samp_order_by {
  id: order_by
  move_learn_method_id: order_by
  version_group_id: order_by
}

"""aggregate variance on columns"""
type versiongroupmovelearnmethod_variance_fields {
  id: Float
  move_learn_method_id: Float
  version_group_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_versiongroupmovelearnmethod"
"""
input versiongroupmovelearnmethod_variance_order_by {
  id: order_by
  move_learn_method_id: order_by
  version_group_id: order_by
}

"""
columns and relationships of "pokemon_v2_versiongroupregion"
"""
type versiongroupregion {
  id: Int!

  """An object relationship"""
  region: region
  region_id: Int
  version_group_id: Int

  """An object relationship"""
  versiongroup: versiongroup
}

"""
aggregated selection of "pokemon_v2_versiongroupregion"
"""
type versiongroupregion_aggregate {
  aggregate: versiongroupregion_aggregate_fields
  nodes: [versiongroupregion!]!
}

input versiongroupregion_aggregate_bool_exp {
  count: versiongroupregion_aggregate_bool_exp_count
}

input versiongroupregion_aggregate_bool_exp_count {
  arguments: [versiongroupregion_select_column!]
  distinct: Boolean
  filter: versiongroupregion_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_versiongroupregion"
"""
type versiongroupregion_aggregate_fields {
  avg: versiongroupregion_avg_fields
  count(columns: [versiongroupregion_select_column!], distinct: Boolean): Int!
  max: versiongroupregion_max_fields
  min: versiongroupregion_min_fields
  stddev: versiongroupregion_stddev_fields
  stddev_pop: versiongroupregion_stddev_pop_fields
  stddev_samp: versiongroupregion_stddev_samp_fields
  sum: versiongroupregion_sum_fields
  var_pop: versiongroupregion_var_pop_fields
  var_samp: versiongroupregion_var_samp_fields
  variance: versiongroupregion_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_versiongroupregion"
"""
input versiongroupregion_aggregate_order_by {
  avg: versiongroupregion_avg_order_by
  count: order_by
  max: versiongroupregion_max_order_by
  min: versiongroupregion_min_order_by
  stddev: versiongroupregion_stddev_order_by
  stddev_pop: versiongroupregion_stddev_pop_order_by
  stddev_samp: versiongroupregion_stddev_samp_order_by
  sum: versiongroupregion_sum_order_by
  var_pop: versiongroupregion_var_pop_order_by
  var_samp: versiongroupregion_var_samp_order_by
  variance: versiongroupregion_variance_order_by
}

"""aggregate avg on columns"""
type versiongroupregion_avg_fields {
  id: Float
  region_id: Float
  version_group_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_versiongroupregion"
"""
input versiongroupregion_avg_order_by {
  id: order_by
  region_id: order_by
  version_group_id: order_by
}

"""
Boolean expression to filter rows from the table
"pokemon_v2_versiongroupregion". All fields are combined with a logical 'AND'.
"""
input versiongroupregion_bool_exp {
  _and: [versiongroupregion_bool_exp!]
  _not: versiongroupregion_bool_exp
  _or: [versiongroupregion_bool_exp!]
  id: Int_comparison_exp
  region: region_bool_exp
  region_id: Int_comparison_exp
  version_group_id: Int_comparison_exp
  versiongroup: versiongroup_bool_exp
}

"""aggregate max on columns"""
type versiongroupregion_max_fields {
  id: Int
  region_id: Int
  version_group_id: Int
}

"""
order by max() on columns of table "pokemon_v2_versiongroupregion"
"""
input versiongroupregion_max_order_by {
  id: order_by
  region_id: order_by
  version_group_id: order_by
}

"""aggregate min on columns"""
type versiongroupregion_min_fields {
  id: Int
  region_id: Int
  version_group_id: Int
}

"""
order by min() on columns of table "pokemon_v2_versiongroupregion"
"""
input versiongroupregion_min_order_by {
  id: order_by
  region_id: order_by
  version_group_id: order_by
}

"""
Ordering options when selecting data from "pokemon_v2_versiongroupregion".
"""
input versiongroupregion_order_by {
  id: order_by
  region: region_order_by
  region_id: order_by
  version_group_id: order_by
  versiongroup: versiongroup_order_by
}

"""
select columns of table "pokemon_v2_versiongroupregion"
"""
enum versiongroupregion_select_column {
  """column name"""
  id

  """column name"""
  region_id

  """column name"""
  version_group_id
}

"""aggregate stddev on columns"""
type versiongroupregion_stddev_fields {
  id: Float
  region_id: Float
  version_group_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_versiongroupregion"
"""
input versiongroupregion_stddev_order_by {
  id: order_by
  region_id: order_by
  version_group_id: order_by
}

"""aggregate stddev_pop on columns"""
type versiongroupregion_stddev_pop_fields {
  id: Float
  region_id: Float
  version_group_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_versiongroupregion"
"""
input versiongroupregion_stddev_pop_order_by {
  id: order_by
  region_id: order_by
  version_group_id: order_by
}

"""aggregate stddev_samp on columns"""
type versiongroupregion_stddev_samp_fields {
  id: Float
  region_id: Float
  version_group_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_versiongroupregion"
"""
input versiongroupregion_stddev_samp_order_by {
  id: order_by
  region_id: order_by
  version_group_id: order_by
}

"""aggregate sum on columns"""
type versiongroupregion_sum_fields {
  id: Int
  region_id: Int
  version_group_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_versiongroupregion"
"""
input versiongroupregion_sum_order_by {
  id: order_by
  region_id: order_by
  version_group_id: order_by
}

"""aggregate var_pop on columns"""
type versiongroupregion_var_pop_fields {
  id: Float
  region_id: Float
  version_group_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_versiongroupregion"
"""
input versiongroupregion_var_pop_order_by {
  id: order_by
  region_id: order_by
  version_group_id: order_by
}

"""aggregate var_samp on columns"""
type versiongroupregion_var_samp_fields {
  id: Float
  region_id: Float
  version_group_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_versiongroupregion"
"""
input versiongroupregion_var_samp_order_by {
  id: order_by
  region_id: order_by
  version_group_id: order_by
}

"""aggregate variance on columns"""
type versiongroupregion_variance_fields {
  id: Float
  region_id: Float
  version_group_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_versiongroupregion"
"""
input versiongroupregion_variance_order_by {
  id: order_by
  region_id: order_by
  version_group_id: order_by
}

"""
columns and relationships of "pokemon_v2_versionname"
"""
type versionname {
  id: Int!

  """An object relationship"""
  language: language
  language_id: Int
  name: String!

  """An object relationship"""
  version: version
  version_id: Int
}

"""
aggregated selection of "pokemon_v2_versionname"
"""
type versionname_aggregate {
  aggregate: versionname_aggregate_fields
  nodes: [versionname!]!
}

input versionname_aggregate_bool_exp {
  count: versionname_aggregate_bool_exp_count
}

input versionname_aggregate_bool_exp_count {
  arguments: [versionname_select_column!]
  distinct: Boolean
  filter: versionname_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "pokemon_v2_versionname"
"""
type versionname_aggregate_fields {
  avg: versionname_avg_fields
  count(columns: [versionname_select_column!], distinct: Boolean): Int!
  max: versionname_max_fields
  min: versionname_min_fields
  stddev: versionname_stddev_fields
  stddev_pop: versionname_stddev_pop_fields
  stddev_samp: versionname_stddev_samp_fields
  sum: versionname_sum_fields
  var_pop: versionname_var_pop_fields
  var_samp: versionname_var_samp_fields
  variance: versionname_variance_fields
}

"""
order by aggregate values of table "pokemon_v2_versionname"
"""
input versionname_aggregate_order_by {
  avg: versionname_avg_order_by
  count: order_by
  max: versionname_max_order_by
  min: versionname_min_order_by
  stddev: versionname_stddev_order_by
  stddev_pop: versionname_stddev_pop_order_by
  stddev_samp: versionname_stddev_samp_order_by
  sum: versionname_sum_order_by
  var_pop: versionname_var_pop_order_by
  var_samp: versionname_var_samp_order_by
  variance: versionname_variance_order_by
}

"""aggregate avg on columns"""
type versionname_avg_fields {
  id: Float
  language_id: Float
  version_id: Float
}

"""
order by avg() on columns of table "pokemon_v2_versionname"
"""
input versionname_avg_order_by {
  id: order_by
  language_id: order_by
  version_id: order_by
}

"""
Boolean expression to filter rows from the table "pokemon_v2_versionname". All fields are combined with a logical 'AND'.
"""
input versionname_bool_exp {
  _and: [versionname_bool_exp!]
  _not: versionname_bool_exp
  _or: [versionname_bool_exp!]
  id: Int_comparison_exp
  language: language_bool_exp
  language_id: Int_comparison_exp
  name: String_comparison_exp
  version: version_bool_exp
  version_id: Int_comparison_exp
}

"""aggregate max on columns"""
type versionname_max_fields {
  id: Int
  language_id: Int
  name: String
  version_id: Int
}

"""
order by max() on columns of table "pokemon_v2_versionname"
"""
input versionname_max_order_by {
  id: order_by
  language_id: order_by
  name: order_by
  version_id: order_by
}

"""aggregate min on columns"""
type versionname_min_fields {
  id: Int
  language_id: Int
  name: String
  version_id: Int
}

"""
order by min() on columns of table "pokemon_v2_versionname"
"""
input versionname_min_order_by {
  id: order_by
  language_id: order_by
  name: order_by
  version_id: order_by
}

"""Ordering options when selecting data from "pokemon_v2_versionname"."""
input versionname_order_by {
  id: order_by
  language: language_order_by
  language_id: order_by
  name: order_by
  version: version_order_by
  version_id: order_by
}

"""
select columns of table "pokemon_v2_versionname"
"""
enum versionname_select_column {
  """column name"""
  id

  """column name"""
  language_id

  """column name"""
  name

  """column name"""
  version_id
}

"""aggregate stddev on columns"""
type versionname_stddev_fields {
  id: Float
  language_id: Float
  version_id: Float
}

"""
order by stddev() on columns of table "pokemon_v2_versionname"
"""
input versionname_stddev_order_by {
  id: order_by
  language_id: order_by
  version_id: order_by
}

"""aggregate stddev_pop on columns"""
type versionname_stddev_pop_fields {
  id: Float
  language_id: Float
  version_id: Float
}

"""
order by stddev_pop() on columns of table "pokemon_v2_versionname"
"""
input versionname_stddev_pop_order_by {
  id: order_by
  language_id: order_by
  version_id: order_by
}

"""aggregate stddev_samp on columns"""
type versionname_stddev_samp_fields {
  id: Float
  language_id: Float
  version_id: Float
}

"""
order by stddev_samp() on columns of table "pokemon_v2_versionname"
"""
input versionname_stddev_samp_order_by {
  id: order_by
  language_id: order_by
  version_id: order_by
}

"""aggregate sum on columns"""
type versionname_sum_fields {
  id: Int
  language_id: Int
  version_id: Int
}

"""
order by sum() on columns of table "pokemon_v2_versionname"
"""
input versionname_sum_order_by {
  id: order_by
  language_id: order_by
  version_id: order_by
}

"""aggregate var_pop on columns"""
type versionname_var_pop_fields {
  id: Float
  language_id: Float
  version_id: Float
}

"""
order by var_pop() on columns of table "pokemon_v2_versionname"
"""
input versionname_var_pop_order_by {
  id: order_by
  language_id: order_by
  version_id: order_by
}

"""aggregate var_samp on columns"""
type versionname_var_samp_fields {
  id: Float
  language_id: Float
  version_id: Float
}

"""
order by var_samp() on columns of table "pokemon_v2_versionname"
"""
input versionname_var_samp_order_by {
  id: order_by
  language_id: order_by
  version_id: order_by
}

"""aggregate variance on columns"""
type versionname_variance_fields {
  id: Float
  language_id: Float
  version_id: Float
}

"""
order by variance() on columns of table "pokemon_v2_versionname"
"""
input versionname_variance_order_by {
  id: order_by
  language_id: order_by
  version_id: order_by
}

